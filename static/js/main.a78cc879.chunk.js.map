{"version":3,"sources":["js/components/Footer.js","js/components/Shapes.js","js/routes/Homepage.js","js/actions/daiAddress.js","js/components/Icon.js","js/utils/palette.js","js/components/Button.js","js/components/Card.js","getWeb3NotOnLoad.js","js/routes/Dashboard.js","js/routes/YourCause.js","js/routes/Contributions.js","js/components/Logo.js","js/components/TextLink.js","js/components/Takeover.js","js/components/Header.js","js/routes/index.js","getWeb3.js","js/func/tokenMaps.js","js/App.js","js/actions/mobile.js","js/actions/activeAccount.js","js/actions/tokenMap.js","js/actions/verifiedPoolAddrs.js","js/actions/verifiedPoolInfo.js","js/actions/ownerPoolAddrs.js","js/actions/userDepositPoolInfo.js","js/actions/userDepositPoolAddrs.js","js/actions/ownerPoolInfo.js","js/actions/poolTrackerAddress.js","js/reducers/mobile.js","js/reducers/daiAddress.js","js/reducers/activeAccount.js","js/reducers/tokenMap.js","js/reducers/verifiedPoolAddrs.js","js/reducers/verifiedPoolInfo.js","js/reducers/ownerPoolAddrs.js","js/reducers/ownerPoolInfo.js","js/reducers/userDepositPoolAddrs.js","js/reducers/userDepositPoolInfo.js","js/reducers/poolTrackerAddress.js","js/reducers/index.js","serviceWorker.js","index.js"],"names":["Footer","className","style","bottom","top","transform","Shapes","createWalls","World","Bodies","engine","floor","rectangle","docWidth","docHeight","isStatic","ceiling","leftWall","wallThickness","rightWall","add","world","Engine","Matter","Render","Runner","Composites","use","MatterAttractors","create","positionIterations","palette","brandRed","brandYellow","brandGreen","brandPink","brandBlue","shapes","polygon1","sides","size","rectangle1","width","height","polygon2","polygon3","polygon4","rectangle2","polygon5","paletteKeys","Object","keys","shapesKeys","this","document","body","clientHeight","viewportHeight","window","innerHeight","clientWidth","render","element","refs","scene","options","background","wireframes","gravity","scale","y","attractor","circle","fillStyle","strokeStyle","lineWidth","chamfer","radius","plugin","attractors","bodyA","bodyB","x","position","Body","stack","i","j","length","shape","polygon","run","addEventListener","e","startX","clientX","startY","clientY","dragBody","Query","point","bodies","shift","setPosition","xVelo","Math","min","max","yVelo","setVelocity","ref","Component","Homepage","printTokenMap","acceptedTokens","props","tokenMap","console","log","key","address","decimals","printVerifiedPoolAddrs","verifiedPoolAddrs","printVerifiedPoolInfo","verifiedPoolInfo","scrollTo","href","target","connect","state","dispatch","updateDaiAddress","s","type","value","Icon","icons","wallet","caret","plus","minus","pencil","people","poolShape1","poolShape2","poolShape3","poolShape4","poolShape5","name","color","strokeWidth","adjustedSize","isMobile","viewBox","stroke","fill","strokeLinecap","strokeLinejoin","includes","d","vectorEffect","points","Button","text","icon","callback","lg","classnames","classNames","onClick","Card","withdrawDeposit","toFixed","abs","parseInt","toString","split","pow","Array","join","substring","precise","number","Number","parseFloat","toPrecision","toggleCardOpen","setState","open","setSelectedToken","index","selectedTokenIndex","createTokenButtons","acceptedTokenInfo","buttonHolder","tokenName","acceptedTokenString","push","createTokenInfo","onDeposit","onWithdrawDeposit","onClaim","receiver","item","isETH","slice","userBalance","totalDeposits","claimedInterest","unclaimedInterest","title","about","idx","poolIcons","randomPoolIcon","formatUserBalance","formatTotalDeposits","tokenButtons","tokenInfo","getWeb3","Promise","resolve","reject","a","ethereum","web3","Web3","enable","provider","providers","HttpProvider","Dashboard","componentDidMount","error","alert","componentDidUpdate","approve","erc20Instance","activeAccount","amountInGwei","parameter","from","gas","utils","toHex","gasPrice","toWei","methods","send","err","transactionHash","results_1","getAllowance","allowance","call","getWalletBalance","tokenAddress","currentProvider","selectedAddress","eth","Contract","ERC20Instance","abi","balanceOf","balance","getAmountBase","amount","deposit","tokenString","find","prompt","amountInBase","parameterETH","JCPoolInstance","JCPool","depositETH","donateAmount","donateAmountInGwei","withdraw","result","claim","assetAddress","withdrawDonations","createCardInfo","cardHolder","onApprove","daiAddress","poolTrackerAddress","YourCause","deploy","poolName","tokenAddrs","payload","data","bytecode","arguments","ownerPoolInfo","ownerPoolAddrs","Contributions","userDepositPoolInfo","userDepositPoolAddrs","Logo","id","cx","cy","r","fillRule","xlinkHref","x1","y1","x2","y2","mask","TextLink","Takeover","toggle","children","Header","isMetaMaskInstalled","Boolean","isMetaMask","connectToWeb3","request","method","displayAddress","nav","NavLink","exact","to","routes","Switch","Route","path","component","kovanTokenMap","AAVE","BAT","BUSD","DAI","ENJ","KNC","LINK","MANA","MKR","REN","SNX","sUSD","TUSD","USDC","USDT","WBTC","ETH","YFI","ZRX","UNI","AMPL","App","detectMobile","getAccounts","accounts","net","getId","networkId","PoolTrackerInstance","PoolTracker","networks","getTokenMapFromNetwork","setTokenMapState","setActiveAccountState","setPoolState","setPoolTrackAddress","updatePoolTrackerAddress","updateActiveAccount","updateTokenMap","getVerifiedPools","verifiedPools","getUserOwned","ownerPools","getUserDeposits","userDepositPools","isHashMatch","checkByteCode","Set","updateVerifiedPoolAddrs","updateOwnerPoolAddrs","updateUserDepositPoolAddrs","getPoolInfo","updateVerifiedPoolInfo","updateOwnerPoolInfo","updateUserDepositPoolInfo","poolTracker","poolInfo","getAcceptedTokens","getName","getRecipient","getAbout","getHashByteCode","hashByteCode","acceptedTokenStrings","getTotalDeposits","getUserBalance","getUnclaimedInterest","getClaimedInterest","getATokenAddress","removeEventListener","history","location","hostname","createBrowserHistory","basename","addrsArray","infoArray","mobileReducer","innerWidth","action","daiAddressReducer","activeAccountReducer","tokenMapReducer","verifiedPoolAddrsReducer","verifiedPoolInfoReducer","ownerPoolAddrsReducer","ownerPoolInfoReducer","userDepositPoolAddrsReducer","userDepositPoolInfoReducer","poolTrackerAddressReducer","rootReducer","combineReducers","router","connectRouter","match","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","routerMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a78cc879.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Footer = () => {\n\treturn (\n    <footer className=\"app-bar\" style={{bottom: 0, top: 'auto', transform: 'scaleY(-1)'}}/>\n\t)\n}\n\nexport default Footer","import React, {Component} from \"react\"\nimport Matter from \"matter-js\";\nimport MatterAttractors from \"matter-attractors\";\n\nclass Shapes extends Component {\n    componentWillUnmount() {\n        // Todo remove event listeners\n    }\n\n    componentDidMount() {\n        const Engine = Matter.Engine,\n            Render = Matter.Render,\n            Runner = Matter.Runner,\n            Composites = Matter.Composites,\n            Bodies = Matter.Bodies,\n            World = Matter.World;\n\n        Matter.use(MatterAttractors);\n\n        const engine = Engine.create({\n            positionIterations: 8\n        });\n\n        const palette = {\n            brandRed: '#CE3232',\n            brandYellow: '#E0C723',\n            brandGreen: '#80CE32',\n            brandPink: '#D991BA',\n            brandBlue: '#3FA7D6'\n        }\n\n        const shapes = {\n            polygon1: { sides: 0, size: 100 },\n            rectangle1: { width: 175, height: 175 },\n            polygon2: { sides: 5, size: 155 },\n            polygon3: { sides: 6, size: 150 },\n            polygon4: { sides: 8, size: 175 },\n            rectangle2: { width: 200, height: 100 },\n            polygon5: { sides: 0, size: 150 },\n        }\n\n        const paletteKeys = Object.keys(palette);\n        const shapesKeys = Object.keys(shapes);\n\n        this.docHeight = document.body.clientHeight;\n        this.viewportHeight = window.innerHeight;\n        this.docWidth = document.body.clientWidth;\n\n        const render = Render.create({\n          element: this.refs.scene,\n          engine: engine,\n          options: {\n            width: this.docWidth,\n            height: this.docHeight,\n            background: 'transparent',\n            wireframes: false\n          }\n        });\n\n        engine.world.gravity.scale = 0.000005;\n        engine.world.gravity.y = 0;\n\n        this.attractor = Matter.Bodies.circle(this.docWidth / 2, this.viewportHeight / 2, this.viewportHeight * 0.75, {\n            isStatic: true,\n            render: { fillStyle: 'transparent', strokeStyle: '#FFFFFF55', lineWidth: 0 },\n            chamfer: { radius: this.viewportHeight * 0.33 },\n            plugin: {\n              attractors: [\n                (bodyA, bodyB) => {\n                  return {\n                    x: (bodyA.position.x - bodyB.position.x) * 0.000005,\n                    y: (bodyA.position.y - bodyB.position.y) * 0.000005,\n                  };\n                }\n              ]\n            }\n        });\n\n        Matter.Body.scale(this.attractor, 1.25, 0.75);\n\n        World.add(engine.world, this.attractor);\n\n        this.stack = Composites.stack(-264, -264, 6, 4, 64, 64, (x, y, i, j) => {\n            const options = {\n                render: {\n                    strokeStyle: palette[paletteKeys[(i + j) % paletteKeys.length]] + 'FF',\n                    lineWidth: 4,\n                    fillStyle: 'transparent'\n                },\n                chamfer: 32\n            }\n\n            const shape = shapes[shapesKeys[(i + j) % shapesKeys.length]]\n\n\n            if (shape.sides == null) {\n                return Bodies.rectangle(x, y, shape.width, shape.height, options);\n            } else {\n                return Bodies.polygon(x, y, shape.sides, shape.size, options);\n            }\n        });\n\n        World.add(engine.world, this.stack);\n\n        Runner.run(engine);\n\n        Render.run(render);\n\n        document.addEventListener('mousedown', (e) => {\n            this.startX = e.clientX;\n            this.startY = e.clientY;\n            this.dragBody = Matter.Query.point(this.stack.bodies, { x: this.startX, y: this.startY }).shift();\n        });\n\n        document.addEventListener('mousemove', (e) => {\n            if (this.dragBody) {\n                Matter.Body.setPosition(this.dragBody, { x: e.clientX, y: e.clientY });\n            }\n        });\n\n        document.addEventListener('mouseup', (e) => {\n            if (this.dragBody) {\n                const maxVelo = 10;\n                const xVelo = Math.min(Math.max(e.clientX - this.startX, maxVelo), -1 * maxVelo);\n                const yVelo = Math.min(Math.max(e.clientY - this.startY, maxVelo), -1 * maxVelo);\n                Matter.Body.setVelocity(this.dragBody, { x: xVelo, y: yVelo });\n                this.dragBody = null;\n            }\n        });\n    }\n\n    createWalls = (World, Bodies, engine) => {\n        const wallThickness = 50;\n\n        const floor = Bodies.rectangle(this.docWidth / 2, this.docHeight + wallThickness, this.docWidth, 2 * wallThickness, { isStatic: true });\n        const ceiling = Bodies.rectangle(-wallThickness, this.docHeight + wallThickness, this.docWidth, 2 * wallThickness, { isStatic: true });\n\n        const leftWall = Bodies.rectangle(-wallThickness, this.docHeight / 2, wallThickness * 2, this.docHeight, { isStatic: true });\n        const rightWall = Bodies.rectangle(this.docWidth + wallThickness, this.docHeight / 2, wallThickness * 2, this.docHeight, { isStatic: true });\n\n        World.add(engine.world, [ floor, ceiling, leftWall, rightWall ]);\n    }\n\n    render() {\n        return <div ref=\"scene\" className=\"shapes\"/>\n    }\n}\n\nexport default Shapes\n","import React, {Component} from \"react\"\nimport { Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport Footer from \"../components/Footer\";\nimport Shapes from '../components/Shapes'\n\nimport { updateDaiAddress } from \"../actions/daiAddress\";\n\nclass Homepage extends Component {\n\tcomponentDidMount() {\n\t\twindow.scrollTo(0,0);\n\t}\n\n\tprintTokenMap = () => {\n\t\tlet acceptedTokens = Object.keys(this.props.tokenMap);\n\t\tconsole.log('tokenMapProp');\n\t\tfor(let i = 0; i < acceptedTokens.length; i++){\n\t\t\tconst key = acceptedTokens[i];\n\t\t\tconst address =  this.props.tokenMap[key] && this.props.tokenMap[key].address;\n\t\t\tconst decimals = this.props.tokenMap[key] && this.props.tokenMap[key].decimals;\n\t\t\tconsole.log(i, key, address, decimals);\n\t\t}\n\t}\n\n\tprintVerifiedPoolAddrs = () => {\n\t\tconsole.log(\"verifiedPoolAddrs:\", this.props.verifiedPoolAddrs);\n\t}\n\n\tprintVerifiedPoolInfo = () => {\n\t\tconsole.log(\"*********verifiedPoolInfo:\", this.props.verifiedPoolInfo);\n\t}\n\n\trender() {\n\t\tthis.printTokenMap();\n\t\tthis.printVerifiedPoolAddrs();\n\t\tthis.printVerifiedPoolInfo();\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Shapes/>\n\t\t\t\t<Footer/>\n\t\t\t\t<article>\n\t\t\t\t\t<section className=\"page-section page-section--center horizontal-padding\">\n\t\t\t\t\t\t<h1>Donate interest earned in crypto to good causes with JustCause.</h1>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"page-section horizontal-padding\">\n\t\t\t\t\t\t<h2>How it works</h2>\n\t\t\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t\t\t<div className=\"grid__item--col-6 grid__item--col-12-medium\">\n\t\t\t\t\t\t\t\t<p className=\"mr\">JustCause allows you to leverage the power of smart contracts to donate ETH to charities. Join charity pools with your friends and JustCause will automatically donate interest earned on any ETH added to the pool.</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"grid__item--col-6 grid__item--col-12-medium\">\n\t\t\t\t\t\t\t\t<p className=\"mr\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"page-section bw0 horizontal-padding\">\n\t\t\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t\t\t<div className=\"grid__item--col-6 grid__item--col-12-medium\">\n\t\t\t\t\t\t\t\t<h2>Find us elsewhere</h2>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"grid__item--col-6 grid__item--col-12-medium\">\n\t\t\t\t\t\t\t\t<p className=\"lh1 mb0\">\n\t\t\t\t\t\t\t\t\t<a href=\"google.com\" target=\"_blank\">Facebook</a> /&nbsp;\n\t\t\t\t\t\t\t\t\t<a href=\"google.com\" target=\"_blank\">Instagram</a> /&nbsp;\n\t\t\t\t\t\t\t\t\t<a href=\"google.com\" target=\"_blank\">Twitter</a>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t</article>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\ttokenMap: state.tokenMap,\n\tverifiedPoolAddrs: state.verifiedPoolAddrs,\n\tverifiedPoolInfo: state.verifiedPoolInfo,\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tupdateDaiAddress: (s) => dispatch(updateDaiAddress(s)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage)\n","export const updateDaiAddress = (value) => ({\n\ttype: 'UPDATE_DAI_ADDRESS',\n\tvalue,\n})","import { connect } from \"react-redux\"\nimport React, {Component} from \"react\"\n\nclass Icon extends Component {\n\trender() {\n\t\tconst icons = {\n\t\t\twallet: 'M7,19 L3,19 L3,3 C9,3 14.3333333,3 19,3 C21.6666667,3 23,4.33333333 23,7 M7,7 L23,7 L23,23 L7,23 L7,7 Z M23,12 L15,12 C13.6666667,12.6666667 13,13.6666667 13,15 C13,16.3333333 13.6666667,17.3333333 15,18 L23,18',\n      caret: 'M1 6 12 19 23 6',\n      plus: 'M0,12 L24,12 M12,24 L12,0',\n\t\t\tminus: 'M0,12 L24,12',\n\t\t\tpencil: 'M3,21 L5,14 L17,2 L22,7 L9,19 L3,21 Z M14,6 L18,10 L14,6 Z',\n\t\t\tpeople: 'M8,21 C8,18.3333333 8.66666667,16.3333333 10,15 C11.3333333,13.6666667 12.3333333,12.6666667 13,12 C11.6666667,10.6666667 11,9.33333333 11,8 C11,6 13,4 15,4 C17,4 19,6 19,8 C19,9.33333333 18.3333333,10.6666667 17,12 C17.7215761,12.7215761 18.7215761,13.7215761 20,15 C21.2784239,16.2784239 21.9450905,18.2784239 22,21 L8,21 Z M5,19 L2,19 C2,16.3333333 2.66666667,14.3333333 4,13 C5.33333333,11.6666667 6.33333333,10.6666667 7,10 C5.66666667,8.66666667 5,7.33333333 5,6 C5,4 7,2 9,2 C9.69865112,2 10.3973022,2.2440567 11.0106981,2.64691485',\n\t\t\tpoolShape1: '5 5 3 13 9 19 17 17 19 9 13 3',\n\t\t\tpoolShape2: '7.08695652 18 3 11 11 4 19 11 14.9130435 18',\n\t\t\tpoolShape3: '3 18 3 9 7 4 15 4 19 9 19 18',\n\t\t\tpoolShape4: 'M3.259366,14.0819725 L5.12295869,8.28412853 C5.94354544,5.73119197 8.3184244,4 11,4 C13.6815756,4 16.0564546,5.73119197 16.8770413,8.28412853 L18.740634,14.0819725 C19.2476466,15.659345 18.3799484,17.3490731 16.8025759,17.8560857 C16.5058986,17.9514462 16.1961748,18 15.8845483,18 L6.11545168,18 C4.45859743,18 3.11545168,16.6568542 3.11545168,15 C3.11545168,14.6883735 3.16400544,14.3786497 3.259366,14.0819725 Z',\n\t\t\tpoolShape5: '17 3 6 6 6 18 17 18',\n\t\t};\n\n    const viewboxSize = 24;\n    const defaultStrokeWidth = 2;\n\n\t\tconst { name, size, color, strokeWidth, isMobile } = this.props;\n\n\t\tconst adjustedSize = isMobile ? size * 1 : size;\n\n\t\treturn (\n\t\t\t<svg\n\t\t\tclassName={`icon icon-${name}`}\n\t\t\twidth={adjustedSize}\n\t\t\theight={adjustedSize}\n\t\t\tviewBox={`0 0 ${viewboxSize} ${viewboxSize}`}\n\t\t\tstroke={color ? color : '#FFFFFF'}\n\t\t\tstrokeWidth={strokeWidth ? `${strokeWidth}` : `${defaultStrokeWidth}`}\n\t\t\tfill=\"none\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t\tstrokeLinejoin=\"round\">\n\t\t\t\t{ icons[name].includes('M') ? (\n\t\t\t\t\t<path d={icons[name]} vectorEffect=\"non-scaling-stroke\"/>\n\t\t\t\t) : (\n\t\t\t\t\t<polygon points={icons[name]} vectorEffect=\"non-scaling-stroke\"/>\n\t\t\t\t)}\n\t\t\t</svg>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tisMobile: state.isMobile,\n})\n\nexport default connect(mapStateToProps)(Icon)\n","export default function(color) {\n\tconst palette = {\n\t\t\"brand-red\": \"#CE3232\",\n    \"brand-yellow\": \"#E0C723\",\n    \"brand-green\": \"#80CE32\",\n    \"brand-pink\": \"#D991BA\",\n    \"brand-blue\": \"#3FA7D6\",\n\t}\n\treturn palette[color]\n}","import React, {Component} from \"react\"\nimport classNames from 'classnames'\n\nimport Icon from \"./Icon\";\n\nclass Button extends Component {\n\trender() {\n\t\tconst { text, icon, href, callback, lg } = this.props;\n\n    const classnames = classNames({\n      \"button\": true,\n      \"button--icon-only\": !text,\n      \"button--lg\": lg\n    })\n\n\t\treturn (\n      <button className={classnames} href={href} onClick={callback}>\n        <div className=\"button__items\">\n          { text ? (\n            <div className=\"button__item button__text\">\n              <p className=\"mb0\">{ text }</p>\n            </div>\n          ) : null }\n          { icon ? (\n            <div className=\"button__item button__icon\">\n              <Icon name={icon} size={lg ? 64 : 32}/>\n            </div>\n          ) : null }\n        </div>\n        <div className=\"button__bar--outer\">\n          <div className=\"button__bar--inner\"/>\n        </div>\n      </button>\n\t\t);\n\t}\n}\n\nexport default Button\n","import React, {Component} from \"react\"\nimport classNames from \"classnames\";\n//import { Fragment } from \"react\";\n\nimport Icon from \"./Icon\";\nimport palette from \"../utils/palette\";\n\nimport Button from '../components/Button';\n\n//import {deposit, claim, withdrawDonations} from '../func/contractInteractions';\n\nclass Card extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\topen: false,\n\t\t\tselectedTokenIndex: 0\n\t\t}\n\t}\n\n  componentDidMount() {\n\t\twindow.scrollTo(0,0);\n\t}\n\n\t/*onDeposit = async(poolAddress, address, isETH) => {\n\t\tconsole.log('deposit clicked');\n\t\tawait deposit(poolAddress, address, isETH);\n\t}*/\n\n\twithdrawDeposit = () => {\n\t\tconsole.log('withdraw deposit clicked');\n\t}\n\n\ttoFixed = (x) => {\n\t\tif (Math.abs(x) < 1.0) {\n\t\t  let e = parseInt(x.toString().split('e-')[1]);\n\t\t  if (e) {\n\t\t\t  x *= Math.pow(10,e-1);\n\t\t\t  x = '0.' + (new Array(e)).join('0') + x.toString().substring(2);\n\t\t  }\n\t\t} else {\n\t\t  let e = parseInt(x.toString().split('+')[1]);\n\t\t  if (e > 20) {\n\t\t\t  e -= 20;\n\t\t\t  x /= Math.pow(10,e);\n\t\t\t  x += (new Array(e+1)).join('0');\n\t\t  }\n\t\t}\n\t\treturn x;\n\t  }\n\n\tprecise = (x, decimals) => {\n\t\tlet number = (Number.parseFloat(x).toPrecision(6) / (10**decimals));\n\t\treturn this.toFixed(number);\n\t}\n\n\ttoggleCardOpen = () => {\n\t\tthis.setState({\n\t\t\topen: !this.state.open\n\t\t})\n\t}\n\n\tsetSelectedToken = (index) => {\n\t\tthis.setState({\n\t\t\tselectedTokenIndex: index\n\t\t});\n\t\tconsole.log('setSelectedToken', index);\n\t}\n\n\tcreateTokenButtons = (acceptedTokenInfo) => {\n\t\tif (!acceptedTokenInfo) return 'no data';\n\t\tlet buttonHolder = [];\n\t\tfor(let i = 0; i < acceptedTokenInfo.length; i++){\n\t\t\tconst tokenName = acceptedTokenInfo[i].acceptedTokenString;\n\t\t\tbuttonHolder.push(<Button text={tokenName} key={i} callback={() => this.setSelectedToken(i)}/>)\n\t\t}\n\t\treturn buttonHolder;\n\t}\n\n\tcreateTokenInfo = (address, onDeposit, onWithdrawDeposit, onClaim, receiver, acceptedTokenInfo) => {\n\t\tif (!acceptedTokenInfo) return 'no data';\n\t\tconst item = acceptedTokenInfo[this.state.selectedTokenIndex];\n\t\tconst isETH = (item.acceptedTokenString === 'ETH') ? true : false;\n\t\tconst tokenInfo =\n\t\t\t<div className=\"card__body\" key={item.acceptedTokenString}>\n\t\t\t\t<div className=\"card__body__column\">\n\n\t\t\t\t<h3 className=\"mb0\">{ item.acceptedTokenString }</h3>\n\t\t\t\t\t<p>{\"address: \" + address.slice(0, 6) + \"...\"+address.slice(-4)}</p>\n\t\t\t\t\t<p>{\"receiver: \"+receiver.slice(0, 6) + \"...\"+receiver.slice(-4)}</p>\n\t\t\t\t\t<p>{\"user balance: \"+this.precise(item.userBalance, item.decimals)}</p>\n\t\t\t\t\t<p>{\"total balance: \"+this.precise(item.totalDeposits, item.decimals)}</p>\n\t\t\t\t\t<Button text=\"Contribute\" callback={() => onDeposit(address, item.address, isETH)}/>\n\t\t\t\t\t<Button text=\"Withdraw Deposit\" callback={() => onWithdrawDeposit(address, item.address)}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card__body__column\">\n\t\t\t\t\t<p>{\"claimed donation: \"+this.precise(item.claimedInterest, item.decimals)}</p>\n\t\t\t\t\t<p>{\"unclaimed donation: \"+this.precise(item.unclaimedInterest, item.decimals)}</p>\n\t\t\t\t\t<Button text=\"Claim Interest\" callback={() => onClaim(address, item.address)}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\treturn tokenInfo;\n\t}\n\n\trender() {\n\t\tconst { title, about, idx, address, onDeposit, onWithdrawDeposit, onClaim, receiver, acceptedTokenInfo} = this.props;\n\n\t\tconsole.log('acceptedtokenInfo', acceptedTokenInfo);\n\n\t\tconst poolIcons = [\n\t\t\t{ \"name\": \"poolShape1\", \"color\": palette(\"brand-red\")},\n\t\t\t{ \"name\": \"poolShape2\", \"color\": palette(\"brand-yellow\")},\n\t\t\t{ \"name\": \"poolShape3\", \"color\": palette(\"brand-blue\")},\n\t\t\t{ \"name\": \"poolShape4\", \"color\": palette(\"brand-pink\")},\n\t\t\t{ \"name\": \"poolShape5\", \"color\": palette(\"brand-green\")},\n\t\t]\n\n\t\tconst randomPoolIcon = poolIcons[idx % poolIcons.length];\n\n\t\tconst classnames = classNames({\n\t\t\t\"card\": true,\n\t\t\t\"card--open\": this.state.open,\n\t\t})\n\n\t\t//let tokenInfo = [];\n\n\t\tlet formatUserBalance = 0;\n\t\tlet formatTotalDeposits = 0;\n\t\tif(acceptedTokenInfo){\n\t\t\tformatUserBalance = this.precise(acceptedTokenInfo[0].userBalance, acceptedTokenInfo[0].decimals);\n\t\t\tformatTotalDeposits = this.precise(acceptedTokenInfo[0].totalDeposits, acceptedTokenInfo[0].decimals);\n\t\t}\n\n\t\tlet tokenButtons = this.createTokenButtons(acceptedTokenInfo);\n\t\tlet tokenInfo = this.createTokenInfo(address, onDeposit, onWithdrawDeposit, onClaim, receiver, acceptedTokenInfo);\n\n\t\treturn (\n\t\t\t<div className={classnames}>\n\t\t\t\t<div className=\"card__header\">\n\t\t\t\t\t\t\t<Icon name={randomPoolIcon.name} size={32} color={randomPoolIcon.color} strokeWidth={3}/>\n\t\t\t\t<h3 className=\"mb0\">\n\t\t\t\t\t\t\t\t{ title }\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t<div className=\"card__header--right\">\n\t\t\t\t\t<p className=\"mb0\">{ about }</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card__header--right\">\n\t\t\t\t\t\t\t\t<p className=\"mb0\">{\"your balance: \" + formatUserBalance + \",\"}</p>\n\t\t\t\t\t\t\t\t<p className=\"mb0\">{\"total deposits: \"+formatTotalDeposits}</p>\n\t\t\t\t\t\t\t\t<div className=\"card__open-button\" onClick={this.toggleCardOpen}><Icon name={\"plus\"} size={32}/></div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"card__body\">\n\t\t\t\t\t\t\t\t{tokenButtons}\n\t\t\t\t\t\t\t\t{tokenInfo}\n\t\t\t\t\t\t</div>\n\t\t\t\t<div className=\"card__bar\"/>\n      \t\t</div>\n\t\t);\n\t}\n}\n\nexport default Card\n","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise( async(resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:9545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n\n  });\n\nexport default getWeb3;","import React, {Component} from \"react\"\nimport { Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport Card from '../components/Card'\n\nimport getWeb3 from \"../../getWeb3NotOnLoad.js\";\nimport JCPool from \"../../contracts/JustCausePool.json\";\nimport ERC20Instance from \"../../contracts/IERC20.json\";\n\nclass Dashboard extends Component {\n\n\tcomponentDidMount = async () => {\n\t\ttry{\n\t\t\twindow.scrollTo(0,0);\n\t\t}\n\t\tcatch (error) {\n\t\t\t// Catch any errors for any of the above operations.\n\t\t\talert(\n\t\t\t\terror,\n\t\t\t);\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\tcomponentDidUpdate = () => {\n\t\tconsole.log('component did update');\n\t}\n\n\tapprove = async(erc20Instance, address, activeAccount, amountInGwei) => {\n\t\tconst web3 = await getWeb3();\n\t\tconsole.log('approve clicked');\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount ,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t\t};\n\t\tconsole.log(typeof amountInGwei);\n\t\tconst amount = '10000000000000000000000000000000';\n\t\tlet results_1 = await erc20Instance.methods.approve(address, amount).send(parameter, (err, transactionHash) => {\n\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t\t});\n\t\tconsole.log(\"approve\", results_1);\n\t}\n\n\tgetAllowance = async(erc20Instance, address, activeAccount) => {\n\t\tconst allowance = await erc20Instance.methods.allowance(activeAccount, address).call();\n\t\tconsole.log(\"allowance\", allowance, typeof allowance);\n\t\treturn allowance;\n\t}\n\n\tgetWalletBalance = async(tokenAddress) => {\n\t\tconst web3 = await getWeb3();\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconst erc20Instance = await new web3.eth.Contract(ERC20Instance.abi, tokenAddress);\n\t\tconst balance = await erc20Instance.methods.balanceOf(activeAccount).call();\n\t\treturn balance;\n\t}\n\n\tgetAmountBase = (amount, decimals) => {\n\t\tconsole.log('amount in base', amount*10**decimals);\n\t\treturn (amount*10**decimals).toString();\n\t}\n\n\tdeposit = async(address, tokenAddress, isETH) => {\n\t\tconsole.log('deposit clicked');\n\t\tconst web3 = await getWeb3();\n\t\tconst erc20Instance = await new web3.eth.Contract(ERC20Instance.abi, tokenAddress);\n\t\tconsole.log('token map', this.props.tokenMap);\n\t\tconst tokenString = Object.keys(this.props.tokenMap).find(key => this.props.tokenMap[key].address === tokenAddress);\n\t\tconsole.log('tokenString:', tokenString, this.props.tokenMap[tokenString].decimals);\n\t\tconst amount = prompt(\"enter amount to deposit\");\n\t\tconst amountInBase = this.getAmountBase(amount, this.props.tokenMap[tokenString].decimals);//web3.utils.toWei(amount, 'ether');\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconsole.log(\"amountInGwei\", amountInBase);\n\t\tconsole.log(this.getAmountBase(amount, this.props.tokenMap[tokenString].decimals));\n\t\tif(!isETH){\n\t\t\tconst allowance = await this.getAllowance(erc20Instance, address, activeAccount)\n\t\t\tif(parseInt(amountInBase) > parseInt(allowance)){\n\t\t\t\talert(\"must approve token to deposit\");\n\t\t\t\tconsole.log(\"approve test\", parseInt(amountInBase), parseInt(allowance), (parseInt(amountInBase) > parseInt(this.getAllowance(erc20Instance, address, activeAccount))))\n\t\t\t\tawait this.approve(erc20Instance, address, activeAccount, amountInBase);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tconsole.log(\"else\");\n\t\t}\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t};\n\t\tconst parameterETH = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei')),\n\t\t\tvalue: amountInBase\n\t\t};\n\n\t\tlet JCPoolInstance = new web3.eth.Contract(\n\t\t\tJCPool.abi,\n\t\t\taddress,\n\t\t);\n\n\t\tconsole.log(JCPoolInstance.options.address);\n\t\tif(!isETH){\n\t\t\tawait JCPoolInstance.methods.deposit(tokenAddress, amountInBase).send(parameter, (err, transactionHash) => {\n\t\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tawait JCPoolInstance.methods.depositETH(tokenAddress).send(parameterETH, (err, transactionHash) => {\n\t\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t\t});\n\t\t}\n\t\tconsole.log('deposit');\n\t}\n\n\twithdrawDeposit = async(address, tokenAddress, isETH) => {\n\t\tconsole.log('withdraw deposit clicked');\n\t\tconst web3 = await getWeb3();\n\t\tconst tokenString = Object.keys(this.props.tokenMap).find(key => this.props.tokenMap[key].address === tokenAddress);\n\t\tconst amount = prompt(\"enter amount to withdraw\");\n\t\tconst donateAmount = prompt(\"enter amount to donate if desired\");\n\t\tconst amountInBase = this.getAmountBase(amount, this.props.tokenMap[tokenString].decimals);//web3.utils.toWei(amount, 'ether');\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconst donateAmountInGwei = this.getAmountBase(donateAmount, this.props.tokenMap[tokenString].decimals);//web3.utils.toWei(donateAmount, 'ether');\n\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t};\n\n\t\tlet JCPoolInstance = new web3.eth.Contract(\n\t\t\tJCPool.abi,\n\t\t\taddress,\n\t\t);\n\n\t\tconsole.log('amount to withdraw', amountInBase, amount);\n\t\tconsole.log(JCPoolInstance.options.address, address);\n\t\tlet result = await JCPoolInstance.methods.withdraw(tokenAddress, amountInBase, donateAmountInGwei, isETH).send(parameter , (err, transactionHash) => {\n\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t});\n\t\tconsole.log('withdraw result ' + result[0]);\n\t}\n\n\tclaim = async(address, assetAddress, isETH) => {\n\t\tconsole.log('claim interest clicked', address);\n\t\tconst web3 = await getWeb3();\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t};\n\n\t\tlet JCPoolInstance = new web3.eth.Contract(\n\t\t\tJCPool.abi,\n\t\t\taddress,\n\t\t);\n\t\tlet result = await JCPoolInstance.methods.withdrawDonations(assetAddress, isETH).send(parameter , (err, transactionHash) => {\n\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t});\n\n\t\tconsole.log('claim result', result);\n\t}\n\n\tcreateCardInfo = () => {\n\t\tif(this.props.verifiedPoolInfo === \"No Verified Pools\") return\n\t\tlet cardHolder = [];\n\t\tfor(let i = 0; i < this.props.verifiedPoolInfo.length; i++){\n\t\t\tconsole.log('a', (this.props.verifiedPoolInfo[i].name));\n\t\t\tconst item = this.props.verifiedPoolInfo[i];\n\t\t\tcardHolder.push(\n\t\t\t\t<Card\n\t\t\t\t\tkey={item.address}\n\t\t\t\t\ttitle={item.name}\n\t\t\t\t\tidx={i}\n\t\t\t\t\treceiver={item.receiver}\n\t\t\t\t\taddress={item.address}\n\t\t\t\t\tacceptedTokenInfo={item.acceptedTokenInfo}\n\t\t\t\t\tabout={item.about}\n\t\t\t\t\tonApprove = {this.approve}\n\t\t\t\t\tonDeposit = {this.deposit}\n\t\t\t\t\tonWithdrawDeposit = {this.withdrawDeposit}\n\t\t\t\t\tonClaim = {this.claim}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn cardHolder;\n\t}\n\n\trender() {\n\n\t\tconsole.log(\"*********verifiedPoolInfo:\", this.props.verifiedPoolInfo);\n\t\tconst cardHolder = this.createCardInfo();\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<article>\n\t\t\t\t\t<section className=\"page-section page-section--center horizontal-padding bw0\">\n\t\t\t\t\t\t{cardHolder}\n\t\t\t\t\t</section>\n\t\t\t\t</article>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdaiAddress: state.daiAddress,\n\tactiveAccount: state.activeAccount,\n\ttokenMap: state.tokenMap,\n\tverifiedPoolAddrs: state.verifiedPoolAddrs,\n\tverifiedPoolInfo: state.verifiedPoolInfo,\n\tpoolTrackerAddress: state.poolTrackerAddress,\n})\n\nconst mapDispatchToProps = dispatch => ({\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n","import React, {Component} from \"react\"\nimport { Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport Card from '../components/Card'\nimport Button from '../components/Button'\n\nimport getWeb3 from \"../../getWeb3NotOnLoad.js\";\nimport JCPool from \"../../contracts/JustCausePool.json\";\nimport ERC20Instance from \"../../contracts/IERC20.json\";\n\nclass YourCause extends Component {\n\n\tcomponentDidMount = async () => {\n\t\ttry{\n\t\twindow.scrollTo(0,0);\n\t\t// Get network provider and web3 instance.\n\t\t//web3 = await getWeb3();\n\t\t//console.log('************web3', web3, getWeb3());\n\t\t// Use web3 to get the user's accounts.\n\t\t//this.accounts = await web3.eth.getAccounts();\n\t\t//console.log(this.accounts);\n\n\t\t//this.networkId = await web3.eth.net.getId();\n\n\t\t//console.log(\"network ID\", typeof this.networkId);\n\t\t}\n\t\tcatch (error) {\n\t\t\t// Catch any errors for any of the above operations.\n\t\t\talert(\n\t\t\t\t`Failed to load web3, accounts, or contract. Check console for details.`,\n\t\t\t);\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\tcomponentDidUpdate = () => {\n\t\tconsole.log('component did update');\n\t}\n\n\tdeploy = async() => {\n\t\tconst web3 = await getWeb3();\n\t\tconst activeAccount = this.props.activeAccount;//await web3.currentProvider.selectedAddress;\n\t\tconst poolName = prompt(\"Enter pool name:\");\n\t\tlet acceptedTokens = prompt(\"Enter accepted tokens for pool (e.g. DAI USDC...)\");\n\t\tconst about = prompt(\"Type a short summary of your cause\");\n\t\tacceptedTokens = acceptedTokens.split(\" \");\n\t\tconsole.log(\"acceptedTokens\", acceptedTokens, this.props.tokenMap);\n\t\tlet tokenAddrs = [];\n\t\tfor(let i = 0; i < acceptedTokens.length; i++){\n\t\t\ttokenAddrs.push(this.props.tokenMap[acceptedTokens[i]].address);\n\t\t}\n\t\tconsole.log('poolTrackerAddress', this.props.poolTrackerAddress);\n\t\tconst receiver = prompt(\"Enter the address to recieve the interest\");\n\t\tconsole.log(\"receiver\", receiver, typeof receiver);\n\t\tconsole.log(\"token addresses\", tokenAddrs);\n\t\tconst payload = {data: JCPool.bytecode,\n\t\t\t\t\t\targuments: [\n\t\t\t\t\t\t\ttokenAddrs,\n\t\t\t\t\t\t\tpoolName,\n\t\t\t\t\t\t\tabout,\n\t\t\t\t\t\t\tthis.props.poolTrackerAddress,\n\t\t\t\t\t\t\treceiver\n\t\t\t\t\t\t]\n\t\t};\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(3200000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t};\n\n\t\tconsole.log(payload.arguments)\n\t\tawait new web3.eth.Contract(JCPool.abi).deploy(payload).send(parameter, (err, transactionHash) => {\n\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t\t});\n\t\t\t/*.on('confirmation', () => {}).then((newContractInstance) => {\n\t\t\tconsole.log('Deployed Contract Address : ', newContractInstance.options.address);\n\t\t\tthis.setState({contractAddress: newContractInstance.options.address});\n\t\t\t});*/\n\n\n\t\t/*console.log(\"deployed\", JCPoolInstance.options.address);*/\n\t\t//console.log(\"events\", JCPoolInstance);\n\n\t\t//this.setPoolTracker();\n\n\t\t//this.setPoolState(activeAccount);\n\t}\n\n\tapprove = async(erc20Instance, address, activeAccount, amountInGwei) => {\n\t\tconst web3 = await getWeb3();\n\t\tconsole.log('approve clicked');\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount ,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t\t};\n\t\tconsole.log(typeof amountInGwei);\n\t\tconst amount = '10000000000000000000000000000000';\n\t\tlet results_1 = await erc20Instance.methods.approve(address, amount).send(parameter, (err, transactionHash) => {\n\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t\t});\n\t\tconsole.log(\"approve\", results_1);\n\t}\n\n\tgetAllowance = async(erc20Instance, address, activeAccount) => {\n\t\tconst allowance = await erc20Instance.methods.allowance(activeAccount, address).call();\n\t\tconsole.log(\"allowance\", allowance, typeof allowance);\n\t\treturn allowance;\n\t}\n\n\tgetWalletBalance = async(tokenAddress) => {\n\t\tconst web3 = await getWeb3();\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconst erc20Instance = await new web3.eth.Contract(ERC20Instance.abi, tokenAddress);\n\t\tconst balance = await erc20Instance.methods.balanceOf(activeAccount).call();\n\t\treturn balance;\n\t}\n\n\tgetAmountBase = (amount, decimals) => {\n\t\tconsole.log('amount in base', amount*10**decimals);\n\t\treturn (amount*10**decimals).toString();\n\t}\n\n\tdeposit = async(address, tokenAddress, isETH) => {\n\t\tconsole.log('deposit clicked');\n\t\tconst web3 = await getWeb3();\n\t\tconst erc20Instance = await new web3.eth.Contract(ERC20Instance.abi, tokenAddress);\n\t\tconsole.log('token map', this.props.tokenMap);\n\t\tconst tokenString = Object.keys(this.props.tokenMap).find(key => this.props.tokenMap[key].address === tokenAddress);\n\t\tconsole.log('tokenString:', tokenString, this.props.tokenMap[tokenString].decimals);\n\t\tconst amount = prompt(\"enter amount to deposit\");\n\t\tconst amountInBase = this.getAmountBase(amount, this.props.tokenMap[tokenString].decimals);//web3.utils.toWei(amount, 'ether');\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconsole.log(\"amountInGwei\", amountInBase);\n\t\tconsole.log(this.getAmountBase(amount, this.props.tokenMap[tokenString].decimals));\n\t\tif(!isETH){\n\t\t\tconst allowance = await this.getAllowance(erc20Instance, address, activeAccount)\n\t\t\tif(parseInt(amountInBase) > parseInt(allowance)){\n\t\t\t\talert(\"must approve token to deposit\");\n\t\t\t\tconsole.log(\"approve test\", parseInt(amountInBase), parseInt(allowance), (parseInt(amountInBase) > parseInt(this.getAllowance(erc20Instance, address, activeAccount))))\n\t\t\t\tawait this.approve(erc20Instance, address, activeAccount, amountInBase);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tconsole.log(\"else\");\n\t\t}\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t};\n\t\tconst parameterETH = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei')),\n\t\t\tvalue: amountInBase\n\t\t};\n\n\t\tlet JCPoolInstance = new web3.eth.Contract(\n\t\t\tJCPool.abi,\n\t\t\taddress,\n\t\t);\n\n\t\tconsole.log(JCPoolInstance.options.address);\n\t\tif(!isETH){\n\t\t\tawait JCPoolInstance.methods.deposit(tokenAddress, amountInBase).send(parameter, (err, transactionHash) => {\n\t\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tawait JCPoolInstance.methods.depositETH(tokenAddress).send(parameterETH, (err, transactionHash) => {\n\t\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t\t});\n\t\t}\n\t\tconsole.log('deposit');\n\t}\n\n\twithdrawDeposit = async(address, tokenAddress, isETH) => {\n\t\tconsole.log('withdraw deposit clicked');\n\t\tconst web3 = await getWeb3();\n\t\tconst tokenString = Object.keys(this.props.tokenMap).find(key => this.props.tokenMap[key].address === tokenAddress);\n\t\tconst amount = prompt(\"enter amount to withdraw\");\n\t\tconst donateAmount = prompt(\"enter amount to donate if desired\");\n\t\tconst amountInBase = this.getAmountBase(amount, this.props.tokenMap[tokenString].decimals);//web3.utils.toWei(amount, 'ether');\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconst donateAmountInGwei = this.getAmountBase(donateAmount, this.props.tokenMap[tokenString].decimals);//web3.utils.toWei(donateAmount, 'ether');\n\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t};\n\n\t\tlet JCPoolInstance = new web3.eth.Contract(\n\t\t\tJCPool.abi,\n\t\t\taddress,\n\t\t);\n\n\t\tconsole.log('amount to withdraw', amountInBase, amount);\n\t\tconsole.log(JCPoolInstance.options.address, address);\n\t\tlet result = await JCPoolInstance.methods.withdraw(tokenAddress, amountInBase, donateAmountInGwei, isETH).send(parameter , (err, transactionHash) => {\n\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t});\n\t\tconsole.log('withdraw result ' + result[0]);\n\t}\n\n\tclaim = async(address, assetAddress, isETH) => {\n\t\tconsole.log('claim interest clicked', address);\n\t\tconst web3 = await getWeb3();\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t};\n\n\t\tlet JCPoolInstance = new web3.eth.Contract(\n\t\t\tJCPool.abi,\n\t\t\taddress,\n\t\t);\n\t\tlet result = await JCPoolInstance.methods.withdrawDonations(assetAddress, isETH).send(parameter , (err, transactionHash) => {\n\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t});\n\n\t\tconsole.log('claim result', result);\n\t}\n\n\tcreateCardInfo = () => {\n\t\tif(this.props.ownerPoolInfo === \"No Verified Pools\") return\n\t\tlet cardHolder = [];\n\t\tfor(let i = 0; i < this.props.ownerPoolInfo.length; i++){\n\t\t\tconsole.log('a', (this.props.ownerPoolInfo[i].name));\n\t\t\tconst item = this.props.ownerPoolInfo[i];\n\t\t\tcardHolder.push(\n\t\t\t\t<Card\n\t\t\t\t\tkey={item.address}\n\t\t\t\t\ttitle={item.name}\n\t\t\t\t\tidx={i}\n\t\t\t\t\treceiver={item.receiver}\n\t\t\t\t\taddress={item.address}\n\t\t\t\t\tacceptedTokenInfo={item.acceptedTokenInfo}\n\t\t\t\t\tabout={item.about}\n\t\t\t\t\tonApprove = {this.approve}\n\t\t\t\t\tonDeposit = {this.deposit}\n\t\t\t\t\tonWithdrawDeposit = {this.withdrawDeposit}\n\t\t\t\t\tonClaim = {this.claim}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn cardHolder;\n\t}\n\n\trender() {\n\t\tconst cardHolder = this.createCardInfo();\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<article>\n\t\t\t\t<section className=\"page-section page-section--center horizontal-padding bw0\">\n\t\t\t\t\t<Button icon=\"plus\" text=\"Add Pool\" lg callback={this.deploy}/>\n\t\t\t\t</section>\n\t\t\t\t\t<section className=\"page-section page-section--center horizontal-padding bw0\">\n\t\t\t\t\t\t{cardHolder}\n\t\t\t\t\t</section>\n\t\t\t\t</article>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdaiAddress: state.daiAddress,\n\tactiveAccount: state.activeAccount,\n\ttokenMap: state.tokenMap,\n\townerPoolAddrs: state.ownerPoolAddrs,\n\townerPoolInfo: state.ownerPoolInfo,\n\tpoolTrackerAddress: state.poolTrackerAddress,\n})\n\nconst mapDispatchToProps = dispatch => ({\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YourCause)","import React, {Component} from \"react\"\nimport { Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport Card from '../components/Card'\n\nimport getWeb3 from \"../../getWeb3NotOnLoad.js\";\nimport JCPool from \"../../contracts/JustCausePool.json\";\nimport ERC20Instance from \"../../contracts/IERC20.json\";\n\nclass Contributions extends Component {\n\n\tcomponentDidMount = async () => {\n\t\ttry{\n\t\t\twindow.scrollTo(0,0);\n\t\t\t// Get network provider and web3 instance.\n\t\t\t//web3 = await getWeb3();\n\t\t\t//console.log('************web3', web3, getWeb3());\n\t\t\t// Use web3 to get the user's accounts.\n\t\t\t//this.accounts = await web3.eth.getAccounts();\n\t\t\t//console.log(this.accounts);\n\n\t\t\t//this.networkId = await web3.eth.net.getId();\n\n\t\t\t//console.log(\"network ID\", typeof this.networkId);\n\t\t}\n\t\tcatch (error) {\n\t\t\t// Catch any errors for any of the above operations.\n\t\t\talert(\n\t\t\t\t`Failed to load web3, accounts, or contract. Check console for details.`,\n\t\t\t);\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\tcomponentDidUpdate = () => {\n\t\tconsole.log('component did update');\n\t}\n\n\tapprove = async(erc20Instance, address, activeAccount, amountInGwei) => {\n\t\tconst web3 = await getWeb3();\n\t\tconsole.log('approve clicked');\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount ,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t\t};\n\t\tconsole.log(typeof amountInGwei);\n\t\tconst amount = '10000000000000000000000000000000';\n\t\tlet results_1 = await erc20Instance.methods.approve(address, amount).send(parameter, (err, transactionHash) => {\n\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t\t});\n\t\tconsole.log(\"approve\", results_1);\n\t}\n\n\tgetAllowance = async(erc20Instance, address, activeAccount) => {\n\t\tconst allowance = await erc20Instance.methods.allowance(activeAccount, address).call();\n\t\tconsole.log(\"allowance\", allowance, typeof allowance);\n\t\treturn allowance;\n\t}\n\n\tgetWalletBalance = async(tokenAddress) => {\n\t\tconst web3 = await getWeb3();\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconst erc20Instance = await new web3.eth.Contract(ERC20Instance.abi, tokenAddress);\n\t\tconst balance = await erc20Instance.methods.balanceOf(activeAccount).call();\n\t\treturn balance;\n\t}\n\n\tgetAmountBase = (amount, decimals) => {\n\t\tconsole.log('amount in base', amount*10**decimals);\n\t\treturn (amount*10**decimals).toString();\n\t}\n\n\tdeposit = async(address, tokenAddress, isETH) => {\n\t\tconsole.log('deposit clicked');\n\t\tconst web3 = await getWeb3();\n\t\tconst erc20Instance = await new web3.eth.Contract(ERC20Instance.abi, tokenAddress);\n\t\tconsole.log('token map', this.props.tokenMap);\n\t\tconst tokenString = Object.keys(this.props.tokenMap).find(key => this.props.tokenMap[key].address === tokenAddress);\n\t\tconsole.log('tokenString:', tokenString, this.props.tokenMap[tokenString].decimals);\n\t\tconst amount = prompt(\"enter amount to deposit\");\n\t\tconst amountInBase = this.getAmountBase(amount, this.props.tokenMap[tokenString].decimals);//web3.utils.toWei(amount, 'ether');\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconsole.log(\"amountInGwei\", amountInBase);\n\t\tconsole.log(this.getAmountBase(amount, this.props.tokenMap[tokenString].decimals));\n\t\tif(!isETH){\n\t\t\tconst allowance = await this.getAllowance(erc20Instance, address, activeAccount)\n\t\t\tif(parseInt(amountInBase) > parseInt(allowance)){\n\t\t\t\talert(\"must approve token to deposit\");\n\t\t\t\tconsole.log(\"approve test\", parseInt(amountInBase), parseInt(allowance), (parseInt(amountInBase) > parseInt(this.getAllowance(erc20Instance, address, activeAccount))))\n\t\t\t\tawait this.approve(erc20Instance, address, activeAccount, amountInBase);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tconsole.log(\"else\");\n\t\t}\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t};\n\t\tconst parameterETH = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei')),\n\t\t\tvalue: amountInBase\n\t\t};\n\n\t\tlet JCPoolInstance = new web3.eth.Contract(\n\t\t\tJCPool.abi,\n\t\t\taddress,\n\t\t);\n\n\t\tconsole.log(JCPoolInstance.options.address);\n\t\tif(!isETH){\n\t\t\tawait JCPoolInstance.methods.deposit(tokenAddress, amountInBase).send(parameter, (err, transactionHash) => {\n\t\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tawait JCPoolInstance.methods.depositETH(tokenAddress).send(parameterETH, (err, transactionHash) => {\n\t\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t\t});\n\t\t}\n\t\tconsole.log('deposit');\n\t}\n\n\twithdrawDeposit = async(address, tokenAddress, isETH) => {\n\t\tconsole.log('withdraw deposit clicked');\n\t\tconst web3 = await getWeb3();\n\t\tconst tokenString = Object.keys(this.props.tokenMap).find(key => this.props.tokenMap[key].address === tokenAddress);\n\t\tconst amount = prompt(\"enter amount to withdraw\");\n\t\tconst donateAmount = prompt(\"enter amount to donate if desired\");\n\t\tconst amountInBase = this.getAmountBase(amount, this.props.tokenMap[tokenString].decimals);//web3.utils.toWei(amount, 'ether');\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconst donateAmountInGwei = this.getAmountBase(donateAmount, this.props.tokenMap[tokenString].decimals);//web3.utils.toWei(donateAmount, 'ether');\n\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t};\n\n\t\tlet JCPoolInstance = new web3.eth.Contract(\n\t\t\tJCPool.abi,\n\t\t\taddress,\n\t\t);\n\n\t\tconsole.log('amount to withdraw', amountInBase, amount);\n\t\tconsole.log(JCPoolInstance.options.address, address);\n\t\tlet result = await JCPoolInstance.methods.withdraw(tokenAddress, amountInBase, donateAmountInGwei, isETH).send(parameter , (err, transactionHash) => {\n\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t});\n\t\tconsole.log('withdraw result ' + result[0]);\n\t}\n\n\tclaim = async(address, assetAddress, isETH) => {\n\t\tconsole.log('claim interest clicked', address);\n\t\tconst web3 = await getWeb3();\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t};\n\n\t\tlet JCPoolInstance = new web3.eth.Contract(\n\t\t\tJCPool.abi,\n\t\t\taddress,\n\t\t);\n\t\tlet result = await JCPoolInstance.methods.withdrawDonations(assetAddress, isETH).send(parameter , (err, transactionHash) => {\n\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t});\n\n\t\tconsole.log('claim result', result);\n\t}\n\n\tcreateCardInfo = () => {\n\t\tif(this.props.userDepositPoolInfo === \"No Verified Pools\") return\n\t\tlet cardHolder = [];\n\t\tfor(let i = 0; i < this.props.userDepositPoolInfo.length; i++){\n\t\t\tconsole.log('a', (this.props.userDepositPoolInfo[i].name));\n\t\t\tconst item = this.props.userDepositPoolInfo[i];\n\t\t\tcardHolder.push(\n\t\t\t\t<Card\n\t\t\t\t\tkey={item.address}\n\t\t\t\t\ttitle={item.name}\n\t\t\t\t\tidx={i}\n\t\t\t\t\treceiver={item.receiver}\n\t\t\t\t\taddress={item.address}\n\t\t\t\t\tacceptedTokenInfo={item.acceptedTokenInfo}\n\t\t\t\t\tabout={item.about}\n\t\t\t\t\tonApprove = {this.approve}\n\t\t\t\t\tonDeposit = {this.deposit}\n\t\t\t\t\tonWithdrawDeposit = {this.withdrawDeposit}\n\t\t\t\t\tonClaim = {this.claim}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn cardHolder;\n\t}\n\n\trender() {\n\t\tconst cardHolder = this.createCardInfo();\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<article>\n\t\t\t\t\t<section className=\"page-section page-section--center horizontal-padding bw0\">\n\t\t\t\t\t\t{cardHolder}\n\t\t\t\t\t</section>\n\t\t\t\t</article>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdaiAddress: state.daiAddress,\n\tactiveAccount: state.activeAccount,\n\ttokenMap: state.tokenMap,\n\tuserDepositPoolAddrs: state.userDepositPoolAddrs,\n\tuserDepositPoolInfo: state.userDepositPoolInfo,\n\tpoolTrackerAddress: state.poolTrackerAddress,\n})\n\nconst mapDispatchToProps = dispatch => ({\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contributions)","import React, {Component} from \"react\"\n\nclass Logo extends Component {\n\n\trender() {\n\t\treturn (\n            <svg className=\"logo\" width=\"24px\" height=\"24px\" viewBox=\"0 0 21 21\">\n                <defs>\n                    <circle id=\"path-1\" cx=\"10.5\" cy=\"10.5\" r=\"9.5\"></circle>\n                </defs>\n                <g stroke=\"none\" fill=\"none\" fillRule=\"evenodd\">\n                    <mask id=\"mask\" fill=\"white\">\n                        <use xlinkHref=\"#path-1\"></use>\n                    </mask>\n                    <line x1=\"4\" y1=\"20\" x2=\"14\" y2=\"15\" stroke=\"#3FA7D6\" strokeWidth=\"3\" strokeLinecap=\"butt\" mask=\"url(#mask)\"></line>\n                    <line x1=\"2\" y1=\"15\" x2=\"16\" y2=\"8\" stroke=\"#E0C723\" strokeWidth=\"3\" strokeLinecap=\"butt\" mask=\"url(#mask)\"></line>\n                    <line x1=\"2\" y1=\"9\" x2=\"10\" y2=\"5\" stroke=\"#CE3232\" strokeWidth=\"3\" strokeLinecap=\"butt\" mask=\"url(#mask)\"></line>\n                    <circle stroke=\"#FFFFFF\" cx=\"10.5\" cy=\"10.5\" r=\"9.5\" strokeWidth=\"2\"></circle>\n                </g>\n            </svg>\n\t\t);\n\t}\n}\n\nexport default Logo","import React, {Component} from \"react\"\n\nclass TextLink extends Component {\n\n\trender() {\n\t\tconst { text, href } = this.props;\n\n\t\treturn (\n      <button className=\"button button--text-link\" href={href}>\n        <div className=\"button__item\">\n          { text }\n        </div>\n        <div className=\"button__bar--outer\">\n          <div className=\"button__bar--inner\"/>\n        </div>\n      </button>\n\t\t);\n\t}\n}\n\nexport default TextLink\n","import React, {Component} from \"react\"\nimport classNames from 'classnames'\n\nclass Takeover extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    }\n  }\n\n  toggle = () => {\n    this.setState({\n      open: !this.state.open\n    })\n  }\n\n\trender() {\n    const classnames = classNames({\n      \"takeover\": true,\n      \"takeover--open\": this.state.open,\n    })\n\n\t\treturn (\n      <div className={classnames}>\n        <nav className='takeover__panel horizontal-padding'>\n          { this.props.children }\n        </nav>\n        <div className='takeover__hamburger' onClick={this.toggle}>\n          <div className=\"takeover__hamburger__line\"/>\n          <div className=\"takeover__hamburger__line\"/>\n          <div className=\"takeover__hamburger__line\"/>\n        </div>\n      </div>\n\t\t);\n\t}\n}\n\nexport default Takeover\n","import React, {Component, Fragment} from \"react\";\nimport { connect } from \"react-redux\"\n\nimport Logo from \"./Logo\";\nimport Button from \"./Button\";\nimport TextLink from \"./TextLink\";\nimport { NavLink } from 'react-router-dom'\nimport Takeover from \"./Takeover\";\n\nclass Header extends Component {\n\n  isMetaMaskInstalled = () => {\n\t\t//Have to check the ethereum binding on the window object to see if it's installed\n\t\tconst { ethereum } = window;\n\t\treturn Boolean(ethereum && ethereum.isMetaMask);\n\t}\n\n\tconnectToWeb3 = async() => {\n\t\tif(this.isMetaMaskInstalled()){\n\t\t\ttry {\n\t\t\t\t// Will open the MetaMask UI\n\t\t\t\t// You should disable this button while the request is pending!\n\t\t\t\tconst { ethereum } = window;\n\t\t\t\tlet request = await ethereum.request({ method: 'eth_requestAccounts' });\n\t\t\t\tconsole.log('request', request);\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n  displayAddress = (address) => {\n    if(address === 'Connect')\n      return address;\n\n    return address.slice(0, 6) + \"...\"+address.slice(-4);\n  }\n\n\trender() {\n    const { isMobile } = this.props;\n\n    const nav = (\n      <Fragment>\n        <NavLink exact to={\"/dashboard\"}>\n          <TextLink text=\"Dashboard\"/>\n        </NavLink>\n        <NavLink exact to={\"/yourcause\"}>\n          <TextLink text=\"Your Cause\"/>\n        </NavLink>\n        <NavLink exact to={\"/contributions\"}>\n          <TextLink text=\"Contributions\"/>\n        </NavLink>\n        <NavLink exact to={\"/\"}>\n          <TextLink text=\"How it works\"/>\n        </NavLink>\n      </Fragment>\n    )\n\t\treturn (\n      <header className=\"app-bar horizontal-padding\">\n        <Takeover>\n          { nav }\n        </Takeover>\n        <NavLink exact to={\"/\"} className=\"app-bar__left tdn\">\n          <Logo/>\n          <h2 className=\"mb0\">JustCause</h2>\n        </NavLink>\n\n        <nav className=\"app-bar__items\">\n          { nav }\n          <Button text={isMobile ? null : this.displayAddress(this.props.activeAccount)} icon={\"wallet\"} callback={this.connectToWeb3}/>\n        </nav>\n      </header>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tisMobile: state.isMobile,\n  activeAccount: state.activeAccount,\n})\n\nexport default connect(mapStateToProps)(Header)","import React from 'react'\nimport { Route, Switch } from 'react-router'\n\nimport Homepage from './Homepage'\nimport Dashboard from './Dashboard'\nimport YourCause from './YourCause'\nimport Contributions from './Contributions'\n\nimport Header from '../components/Header'\n\nconst routes = (\n\t<main>\n\t\t<Switch>\n\t\t\t<Route exact path={\"/\"} component={Homepage}/>\n\t\t\t<Route exact path={\"/dashboard\"} component={Dashboard}/>\n\t\t\t<Route exact path={\"/yourcause\"} component={YourCause}/>\n\t\t\t<Route exact path={\"/contributions\"} component={Contributions}/>\n\t\t</Switch>\n\t\t<Header/>\n\t</main>\n)\n\n\nexport default routes\n","\nimport Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          //await window.ethereum.enable();\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;","\nexport const kovanTokenMap = {\n                       AAVE: {address: \"0xB597cd8D3217ea6477232F9217fa70837ff667Af\", decimals: 18},\n                       BAT: {address: \"0x2d12186Fbb9f9a8C28B3FfdD4c42920f8539D738\", decimals: 18},\n                       BUSD: {address: \"0x4c6E1EFC12FDfD568186b7BAEc0A43fFfb4bCcCf\", decimals: 18},\n                       DAI: {address:\"0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD\", decimals: 18},\n                       ENJ: {address:\"0xC64f90Cd7B564D3ab580eb20a102A8238E218be2\", decimals: 18},\n                       KNC: {address:\"0x3F80c39c0b96A0945f9F0E9f55d8A8891c5671A8\", decimals: 18},\n                       LINK: {address:\"0xAD5ce863aE3E4E9394Ab43d4ba0D80f419F61789\", decimals: 18},\n                       MANA: {address:\"0x738Dc6380157429e957d223e6333Dc385c85Fec7\", decimals: 18},\n                       MKR: {address:\"0x61e4CAE3DA7FD189e52a4879C7B8067D7C2Cc0FA\",decimals: 18},\n                       REN: {address:\"0x5eebf65A6746eed38042353Ba84c8e37eD58Ac6f\",decimals: 18},\n                       SNX: {address:\"0x7FDb81B0b8a010dd4FFc57C3fecbf145BA8Bd947\",decimals: 18},\n                       sUSD: {address:\"0x99b267b9D96616f906D53c26dECf3C5672401282\",decimals: 18},\n                       TUSD: {address:\"0x016750AC630F711882812f24Dba6c95b9D35856d\",decimals: 18},\n                       USDC: {address:\"0xe22da380ee6B445bb8273C81944ADEB6E8450422\",decimals: 6},\n                       USDT: {address:\"0x13512979ADE267AB5100878E2e0f485B568328a4\",decimals: 6},\n                       WBTC: {address:\"0xD1B98B6607330172f1D991521145A22BCe793277\",decimals: 8},\n                       ETH: {address:\"0xd0A1E359811322d97991E03f863a0C30C2cF029C\",decimals: 18},\n                       YFI: {address:\"0xb7c325266ec274fEb1354021D27FA3E3379D840d\",decimals: 18},\n                       ZRX: {address:\"0xD0d76886cF8D952ca26177EB7CfDf83bad08C00C\",decimals: 18},\n                       UNI: {address:\"0x075A36BA8846C6B6F53644fDd3bf17E5151789DC\",decimals: 18},\n                       AMPL: {address:\"0x3E0437898a5667a4769B1Ca5A34aAB1ae7E81377\",decimals: 9},\n}\n","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { ConnectedRouter } from 'connected-react-router'\nimport { createBrowserHistory } from 'history'\n\nimport routes from './routes'\nimport { detectMobile } from \"./actions/mobile\"\nimport { updateActiveAccount } from \"./actions/activeAccount\"\nimport { updateTokenMap } from \"./actions/tokenMap\"\nimport { updateVerifiedPoolAddrs } from \"./actions/verifiedPoolAddrs\"\nimport { updateVerifiedPoolInfo } from \"./actions/verifiedPoolInfo\"\nimport { updateOwnerPoolAddrs } from \"./actions/ownerPoolAddrs\"\nimport { updateOwnerPoolInfo } from \"./actions/ownerPoolInfo\"\nimport { updateUserDepositPoolAddrs } from \"./actions/userDepositPoolAddrs\"\nimport { updateUserDepositPoolInfo } from \"./actions/userDepositPoolInfo\"\nimport { updatePoolTrackerAddress } from \"./actions/poolTrackerAddress\"\n\n//import getWeb3NotOnLoad from \"../getWeb3NotOnLoad\";\nimport getWeb3 from \"../getWeb3\";\nimport JCPool from \"../contracts/JustCausePool.json\";\nimport PoolTracker from \"../contracts/PoolTracker.json\";\n//import ERC20Instance from \"../contracts/IERC20.json\";\nimport { kovanTokenMap } from \"./func/tokenMaps.js\";\n\n//import { load } from \"dotenv\";\n\nclass App extends Component {\n\n\tcomponentDidMount = async() => {\n\t\ttry {\n\t\t\twindow.addEventListener('resize', this.props.detectMobile);\n\t\t\tconsole.log('app.js componentDidMount called');\n\t\t\tthis.web3 = await getWeb3();\n\t\t\tthis.accounts = await this.web3.eth.getAccounts();\n\t\t\tlet activeAccount = await this.web3.currentProvider.selectedAddress;\n\t\t\tif(!activeAccount){\n\t\t\t\tconsole.log('accounts' , this.accounts, this.accounts[0]);\n\t\t\t\tactiveAccount = this.accounts[0];\n\t\t\t}\n\t\t\tconsole.log('activeAccount', activeAccount);\n\n\t\t\t//activeAccount = this.accounts[0];\n\t\t\tthis.networkId = await this.web3.eth.net.getId();\n\n\t\t\tconsole.log(\"network ID\", this.networkId);\n\n\t\t\tthis.PoolTrackerInstance = new this.web3.eth.Contract(\n\t\t\t\tPoolTracker.abi,\n\t\t\t\tPoolTracker.networks[this.networkId] && PoolTracker.networks[this.networkId].address,\n\t\t\t);\n\n\t\t\tthis.poolTrackerAddress = PoolTracker.networks[this.networkId].address;\n\t\t\tconsole.log(\"Pool Tracker Address:\", this.poolTrackerAddress);\n\n\t\t\tconst tokenMap = this.getTokenMapFromNetwork();\n\t\t\tthis.setTokenMapState(tokenMap);\n\t\t\tthis.setActiveAccountState(activeAccount);\n\t\t\tthis.setPoolState(activeAccount);\n\t\t\tthis.setPoolTrackAddress(this.poolTrackerAddress);\n\t\t}\n\n\t\tcatch (error) {\n\t\t\t// Catch any errors for any of the above operations.\n\t\t\talert(\n\t\t\t\t`Failed to load web3, accounts, or contract. Check console for details. If not connected to site please select the Connect Button`,\n\t\t\t);\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('resize', this.props.detectMobile);\n\t}\n\n\tisMetaMaskInstalled = () => {\n\t\t//Have to check the ethereum binding on the window object to see if it's installed\n\t\tconst { ethereum } = window;\n\t\treturn Boolean(ethereum && ethereum.isMetaMask);\n\t}\n\n\tconnectToWeb3 = async() => {\n\t\tif(this.isMetaMaskInstalled()){\n\t\t\ttry {\n\t\t\t\t// Will open the MetaMask UI\n\t\t\t\t// You should disable this button while the request is pending!\n\t\t\t\tconst { ethereum } = window;\n\t\t\t\tlet request = await ethereum.request({ method: 'eth_requestAccounts' });\n\t\t\t\tconsole.log('request', request);\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetPoolTrackAddress = (poolTrackerAddress) => {\n\t\tthis.props.updatePoolTrackerAddress(poolTrackerAddress);\n\t}\n\n\tsetActiveAccountState = (activeAccount) => {\n\t\tconsole.log('activeAccount', activeAccount);\n\t\tthis.props.updateActiveAccount(activeAccount);\n\t}\n\tgetTokenMapFromNetwork = () => {\n\t\tif(this.networkId === 42){\n\t\t\treturn kovanTokenMap;\n\t\t}\n\t}\n\tsetTokenMapState = (tokenMap) => {\n\t\tthis.props.updateTokenMap(tokenMap);\n\t}\n\n\tsetPoolState = async(activeAccount) => {\n\t\tconst verifiedPools = await this.PoolTrackerInstance.methods.getVerifiedPools().call();\n\t\tconst ownerPools = await this.PoolTrackerInstance.methods.getUserOwned(activeAccount).call();\n\t\tlet userDepositPools = await this.PoolTrackerInstance.methods.getUserDeposits(activeAccount).call();\n\n\t\tlet isHashMatch = true;\n\t\tfor(let i = 0; i < verifiedPools.length; i++){\n\t\t\tconst isMatch = await this.PoolTrackerInstance.methods.checkByteCode(verifiedPools[i]).call();\n\t\t\tif(!isMatch){\n\t\t\t\tisHashMatch = false;\n\t\t\t}\n\t\t}\n\t\tconsole.log('isHashMatch', isHashMatch);\n\t\tuserDepositPools = [...new Set(userDepositPools)];\n\n\t\tthis.props.updateVerifiedPoolAddrs(verifiedPools);\n\t\tthis.props.updateOwnerPoolAddrs(ownerPools);\n\t\tthis.props.updateUserDepositPoolAddrs(userDepositPools);\n\n\t\tconst verifiedPoolInfo = await this.getPoolInfo(verifiedPools, this.getTokenMapFromNetwork(), activeAccount);\n\t\tconst ownerPoolInfo = await this.getPoolInfo(ownerPools, this.getTokenMapFromNetwork(), activeAccount);\n\t\tconst userDepositPoolInfo = await this.getPoolInfo(userDepositPools, this.getTokenMapFromNetwork(), activeAccount);\n\t\tconsole.log('---------verifiedPoolInfo--------', verifiedPoolInfo);\n\t\tconsole.log('---------ownerPoolInfo--------', ownerPoolInfo);\n\t\tconsole.log('---------userDepositPoolInfo--------', userDepositPoolInfo);\n\n\t\tthis.props.updateVerifiedPoolInfo(verifiedPoolInfo);\n\t\tthis.props.updateOwnerPoolInfo(ownerPoolInfo);\n\t\tthis.props.updateUserDepositPoolInfo(userDepositPoolInfo);\n\t}\n\n\tgetPoolInfo = async(poolTracker, tokenMap, activeAccount) => {\n\t\tlet poolInfo = [];\n\t\tfor(let i=0; i < poolTracker.length; i++){\n\t\t\tlet JCPoolInstance = new this.web3.eth.Contract(\n\t\t\t\tJCPool.abi,\n\t\t\t\tpoolTracker[i],\n\t\t\t);\n\n\t\t\tlet acceptedTokens = await JCPoolInstance.methods.getAcceptedTokens().call();\n\t\t\tlet name = await JCPoolInstance.methods.getName().call();\n\t\t\tlet receiver = await JCPoolInstance.methods.getRecipient().call();\n\t\t\tlet about = await JCPoolInstance.methods.getAbout().call();\n\t\t\tconst hashByteCode = await JCPoolInstance.methods.getHashByteCode().call();\n\n\t\t\tconsole.log('hashByteCode', hashByteCode);\n\t\t\tconsole.log(\"pool address:\", JCPoolInstance.options.address)\n\t\t\tconsole.log(\"accepted tokens:\", acceptedTokens);\n\t\t\tlet acceptedTokenStrings = [];\n\t\t\tlet acceptedTokenInfo = [];\n\t\t\tconsole.log('acceptedTokens', acceptedTokens)\n\t\t\tfor(let j = 0; j < acceptedTokens.length; j++){\n\t\t\t\tconst tokenString = Object.keys(tokenMap).find(key => tokenMap[key].address === acceptedTokens[j]);\n\t\t\t\tconsole.log(\"tokenString\", tokenString, acceptedTokens[j]);\n\t\t\t\tacceptedTokenInfo.push({\n\t\t\t\t\t'totalDeposits': await JCPoolInstance.methods.getTotalDeposits(acceptedTokens[j]).call(),\n\t\t\t\t\t'userBalance': await JCPoolInstance.methods.getUserBalance(activeAccount, acceptedTokens[j]).call(),\n\t\t\t\t\t'unclaimedInterest': await JCPoolInstance.methods.getUnclaimedInterest(acceptedTokens[j]).call(),\n\t\t\t\t\t'claimedInterest': await JCPoolInstance.methods.getClaimedInterest(acceptedTokens[j]).call(),\n\t\t\t\t\t'aTokenAddress': await JCPoolInstance.methods.getATokenAddress(acceptedTokens[j]).call(),\n\t\t\t\t\t'acceptedTokenString': tokenString,\n\t\t\t\t\t'decimals': tokenMap[tokenString].decimals,\n\t\t\t\t\t'address': acceptedTokens[j],\n\t\t\t\t});\n\t\t\t\tacceptedTokenStrings.push(tokenString);\n\t\t\t}\n\t\t\tpoolInfo.push({\n\t\t\t\t\t\t\treceiver: receiver,\n\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\tabout: about,\n\t\t\t\t\t\t\taddress: poolTracker[i],\n\t\t\t\t\t\t\tacceptedTokens: acceptedTokenStrings,\n\t\t\t\t\t\t\tacceptedTokenInfo: acceptedTokenInfo,\n\t\t\t});\n\t\t}\n\n\t\tconsole.log(\"pool info\", poolInfo);\n\t\tconsole.log(\"pool tracker\", poolTracker);\n\t\treturn poolInfo;\n\t}\n\n\trender() {\n\t\tlet history;\n\t\tif (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\") {\n\t\t\thistory = this.props.history;\n\t\t} else {\n\t\t\thistory = createBrowserHistory({ basename: '/just_cause' })\n\t\t}\n\n\t\treturn (\n    \t<ConnectedRouter history={history}>\n        \t{ routes }\n\t\t\t</ConnectedRouter>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tisMobile: state.isMobile,\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tdetectMobile: () => dispatch(detectMobile()),\n\tupdateActiveAccount: (s) => dispatch(updateActiveAccount(s)),\n\tupdateTokenMap: (tokenMap) => dispatch(updateTokenMap(tokenMap)),\n\tupdateVerifiedPoolAddrs: (addrsArray) => dispatch(updateVerifiedPoolAddrs(addrsArray)),\n\tupdateVerifiedPoolInfo: (infoArray) => dispatch(updateVerifiedPoolInfo(infoArray)),\n\tupdateOwnerPoolAddrs: (addrsArray) => dispatch(updateOwnerPoolAddrs(addrsArray)),\n\tupdateUserDepositPoolInfo: (infoArray) => dispatch(updateUserDepositPoolInfo(infoArray)),\n\tupdateUserDepositPoolAddrs: (addrsArray) => dispatch(updateUserDepositPoolAddrs(addrsArray)),\n\tupdateOwnerPoolInfo: (infoArray) => dispatch(updateOwnerPoolInfo(infoArray)),\n\tupdatePoolTrackerAddress: (s) => dispatch(updatePoolTrackerAddress(s)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","export const detectMobile = () => ({\n\ttype: 'DETECT_MOBILE',\n})\n","export const updateActiveAccount = (value) => ({\n\ttype: 'UPDATE_ACTIVE_ACCOUNT',\n\tvalue\n})","export const updateTokenMap = (value) => ({\n\ttype: 'UPDATE_TOKEN_MAP',\n\tvalue\n})","export const updateVerifiedPoolAddrs = (value) => ({\n\ttype: 'UPDATE_VERIFIED_POOL_ADDRS',\n\tvalue,\n})","export const updateVerifiedPoolInfo = (value) => ({\n\ttype: 'UPDATE_VERIFIED_POOL_INFO',\n\tvalue\n})","export const updateOwnerPoolAddrs = (value) => ({\n\ttype: 'UPDATE_OWNER_POOL_ADDRS',\n\tvalue,\n})","export const updateUserDepositPoolInfo = (value) => ({\n\ttype: 'UPDATE_USER_DEPOSIT_POOL_INFO',\n\tvalue\n})","export const updateUserDepositPoolAddrs = (value) => ({\n\ttype: 'UPDATE_USER_DEPOSIT_POOL_ADDRS',\n\tvalue,\n})","export const updateOwnerPoolInfo = (value) => ({\n\ttype: 'UPDATE_OWNER_POOL_INFO',\n\tvalue\n})","export const updatePoolTrackerAddress = (value) => ({\n\ttype: 'UPDATE_POOL_TRACKER_ADDRESS',\n\tvalue,\n})","const mobileReducer = (state = (window.innerWidth <= 800), action) => {\n\tswitch (action.type) {\n\t\tcase 'DETECT_MOBILE':\n\t\t\treturn (window.innerWidth <= 800)\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default mobileReducer","const daiAddressReducer = (state = 'Default Address', action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_DAI_ADDRESS':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default daiAddressReducer","const activeAccountReducer = (state = 'Connect', action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_ACTIVE_ACCOUNT':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default activeAccountReducer","const tokenMapReducer = (state = 'No Map Available', action) => {\n\t//console.log(\"active account reducer called\", action.type)\n\tswitch (action.type) {\n\t\tcase 'UPDATE_TOKEN_MAP':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default tokenMapReducer","const verifiedPoolAddrsReducer = (state = 'No Verified Pools', action) => {\n\t//console.log(\"verifiedPoolAddrsReducer called\", action.type)\n\tswitch (action.type) {\n\t\tcase 'UPDATE_VERIFIED_POOL_ADDRS':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default verifiedPoolAddrsReducer","const verifiedPoolInfoReducer = (state = 'No Verified Pools', action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_VERIFIED_POOL_INFO':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default verifiedPoolInfoReducer","const ownerPoolAddrsReducer = (state = 'No Verified Pools', action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_OWNER_POOL_ADDRS':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default ownerPoolAddrsReducer","const ownerPoolInfoReducer = (state = 'No Verified Pools', action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_OWNER_POOL_INFO':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default ownerPoolInfoReducer","const userDepositPoolAddrsReducer = (state = 'No Verified Pools', action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_USER_DEPOSIT_POOL_ADDRS':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default userDepositPoolAddrsReducer","const userDepositPoolInfoReducer = (state = 'No Verified Pools', action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_USER_DEPOSIT_POOL_INFO':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default userDepositPoolInfoReducer","const poolTrackerAddressReducer = (state = null, action) => {\n\t//console.log(\"verifiedPoolAddrsReducer called\", action.type)\n\tswitch (action.type) {\n\t\tcase 'UPDATE_POOL_TRACKER_ADDRESS':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default poolTrackerAddressReducer","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport mobileReducer from './mobile'\nimport daiAddressReducer from './daiAddress'\nimport activeAccountReducer from './activeAccount'\nimport tokenMapReducer from './tokenMap'\nimport verifiedPoolAddrsReducer from './verifiedPoolAddrs'\nimport verifiedPoolInfoReducer from './verifiedPoolInfo'\nimport ownerPoolAddrsReducer from './ownerPoolAddrs'\nimport ownerPoolInfoReducer from './ownerPoolInfo'\nimport userDepositPoolAddrsReducer from './userDepositPoolAddrs'\nimport userDepositPoolInfoReducer from './userDepositPoolInfo'\nimport poolTrackerAddressReducer from './poolTrackerAddress'\n\nconst rootReducer = (history) => combineReducers({\n\tisMobile: mobileReducer,\n\tdaiAddress: daiAddressReducer,\n\tactiveAccount: activeAccountReducer,\n\ttokenMap: tokenMapReducer,\n\tverifiedPoolAddrs: verifiedPoolAddrsReducer,\n\tverifiedPoolInfo: verifiedPoolInfoReducer,\n\townerPoolAddrs: ownerPoolAddrsReducer,\n\townerPoolInfo: ownerPoolInfoReducer,\n\tuserDepositPoolAddrs: userDepositPoolAddrsReducer,\n\tuserDepositPoolInfo: userDepositPoolInfoReducer,\n\tpoolTrackerAddress: poolTrackerAddressReducer,\n\trouter: connectRouter(history),\n})\n\nexport default rootReducer\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { createBrowserHistory } from 'history'\nimport { routerMiddleware } from 'connected-react-router'\nimport { Provider } from 'react-redux'\n\nimport './styles/styles.scss';\nimport App from './js/App';\nimport rootReducer from './js/reducers'\n\nimport * as serviceWorker from './serviceWorker';\n\nconst history = createBrowserHistory()\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n\trootReducer(history),\n\tcomposeEnhancer(\n\t\tapplyMiddleware(\n\t\t\trouterMiddleware(history),\n\t\t),\n \t),\n)\n\nconst render = () => {\n\tReactDOM.render(\n\t\t<Provider store={store}>\n\t\t\t<App history={history} />\n\t\t</Provider>,\n\t\tdocument.getElementById('root')\n\t)\n}\n\nrender()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n//reportWebVitals();\n\n"],"sourceRoot":""}