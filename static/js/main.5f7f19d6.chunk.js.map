{"version":3,"sources":["js/components/Footer.js","js/components/Shapes.js","js/routes/Homepage.js","js/actions/daiAddress.js","js/components/Icon.js","js/utils/palette.js","js/components/Button.js","js/components/cryptoLogos/DaiLogo.js","js/components/cryptoLogos/WbtcLogo.js","js/components/cryptoLogos/UsdcLogo.js","js/components/cryptoLogos/TetherLogo.js","js/components/cryptoLogos/EthLogo.js","js/components/cryptoLogos/AaveLogo.js","getWeb3NotOnLoad.js","js/func/contractInteractions.js","js/components/Card.js","js/routes/Dashboard.js","js/routes/YourCause.js","js/routes/Contributions.js","js/components/Logo.js","js/components/TextLink.js","js/components/Takeover.js","js/components/Header.js","js/components/Modal.js","js/components/TextField.js","js/components/Select.js","js/components/Multiselect.js","js/components/modals/NewPoolModal.js","js/routes/index.js","getWeb3.js","js/func/tokenMaps.js","js/func/messariPriceFeeds.js","js/App.js","js/actions/mobile.js","js/actions/activeAccount.js","js/actions/tokenMap.js","js/actions/verifiedPoolAddrs.js","js/actions/verifiedPoolInfo.js","js/actions/ownerPoolAddrs.js","js/actions/userDepositPoolInfo.js","js/actions/userDepositPoolAddrs.js","js/actions/ownerPoolInfo.js","js/actions/poolTrackerAddress.js","js/reducers/mobile.js","js/reducers/daiAddress.js","js/reducers/activeAccount.js","js/reducers/tokenMap.js","js/reducers/verifiedPoolAddrs.js","js/reducers/verifiedPoolInfo.js","js/reducers/ownerPoolAddrs.js","js/reducers/ownerPoolInfo.js","js/reducers/userDepositPoolAddrs.js","js/reducers/userDepositPoolInfo.js","js/reducers/poolTrackerAddress.js","js/reducers/index.js","serviceWorker.js","index.js"],"names":["Footer","className","style","bottom","top","transform","Shapes","createWalls","World","Bodies","engine","floor","rectangle","docWidth","docHeight","isStatic","ceiling","leftWall","wallThickness","rightWall","add","world","Engine","Matter","Render","Runner","Composites","use","MatterAttractors","create","positionIterations","palette","brandRed","brandYellow","brandGreen","brandPink","brandBlue","shapes","polygon1","sides","size","rectangle1","width","height","polygon2","polygon3","polygon4","rectangle2","polygon5","paletteKeys","Object","keys","shapesKeys","this","document","body","clientHeight","viewportHeight","window","innerHeight","clientWidth","render","element","refs","scene","options","background","wireframes","gravity","scale","y","attractor","circle","fillStyle","strokeStyle","lineWidth","chamfer","radius","plugin","attractors","bodyA","bodyB","x","position","Body","stack","i","j","length","shape","polygon","run","addEventListener","e","startX","clientX","startY","clientY","dragBody","Query","point","bodies","shift","setPosition","xVelo","Math","min","max","yVelo","setVelocity","ref","Component","Homepage","printTokenMap","acceptedTokens","props","tokenMap","console","log","key","address","decimals","printVerifiedPoolAddrs","verifiedPoolAddrs","printVerifiedPoolInfo","verifiedPoolInfo","scrollTo","href","target","connect","state","dispatch","updateDaiAddress","s","type","value","Icon","icons","wallet","caret","plus","minus","pencil","people","check","poolShape1","poolShape2","poolShape3","poolShape4","poolShape5","name","color","strokeWidth","adjustedSize","isMobile","viewBox","fill","strokeLinecap","strokeLinejoin","includes","d","vectorEffect","points","Button","text","icon","callback","disabled","lg","classnames","classNames","onClick","DaiLogo","xmlns","id","x1","x2","y1","y2","gradientUnits","offset","stopColor","cx","cy","r","data-name","WbtcLogo","fill-rule","UsdcLogo","TetherLogo","fillRule","preserveAspectRatio","AaveLogo","stop-color","getWeb3","Promise","resolve","reject","a","ethereum","web3","Web3","request","method","provider","providers","HttpProvider","approve","erc20Instance","activeAccount","amountInGwei","parameter","from","gas","utils","toHex","gasPrice","toWei","methods","send","err","transactionHash","results_1","getAllowance","allowance","call","getAmountBase","amount","toString","deposit","poolAddress","tokenAddress","isETH","poolTrackerAddress","eth","Contract","ERC20Instance","abi","tokenString","find","prompt","amountInBase","currentProvider","selectedAddress","parseInt","alert","PoolTrackerInstance","PoolTracker","addDeposit","withdrawDeposit","donateAmount","donateAmountInGwei","result","claim","assetAddress","JCPoolInstance","JCPool","withdrawDonations","deploy","poolName","about","split","tokenAddrs","push","receiver","createJCPoolClone","getPoolInfo","poolTracker","userBalancePools","poolInfo","getAcceptedTokens","getName","getRecipient","getAbout","getHashByteCode","hashByteCode","acceptedTokenStrings","acceptedTokenInfo","balance","getTotalDeposits","getUnclaimedInterest","getClaimedInterest","getATokenAddress","depositAPY","Card","toFixed","abs","pow","Array","join","substring","precise","number","Number","parseFloat","toPrecision","getAPY","toggleCardOpen","setState","open","setSelectedToken","index","selectedTokenIndex","createTokenButtons","buttonHolder","tokenName","acceptedTokenString","createTokenInfo","item","displayLogo","slice","userBalance","totalDeposits","claimedInterest","unclaimedInterest","getTotalBalancesInUSD","totalBalance","priceUSD","getUserBalancesInUSD","logo","EthLogo","title","idx","poolIcons","randomPoolIcon","tokenButtons","tokenInfo","daiAddress","ownerPoolAddrs","ownerPoolInfo","Dashboard","componentDidMount","error","componentDidUpdate","createCardInfo","cardHolder","onApprove","onDeposit","onWithdrawDeposit","onClaim","YourCause","Contributions","userDepositPoolInfo","userDepositPoolAddrs","Logo","stroke","xlinkHref","mask","TextLink","Takeover","toggle","children","Header","isMetaMaskInstalled","Boolean","isMetaMask","connectToWeb3","displayAddress","nav","NavLink","exact","to","ModalHeader","closeModal","ModalBody","ModalCtas","Modal","handleClickOutside","event","contains","openModal","isOpen","removeEventListener","TextField","unfocusField","focusField","focused","completed","updateValue","label","placeholder","onChange","Select","close","changeSelected","prevState","selected","map","Multiselect","unselected","filter","minWidth","NewPoolModal","routes","Switch","Route","path","component","kovanTokenMap","AAVE","apiKey","BAT","BUSD","DAI","ENJ","MKR","REN","SNX","TUSD","USDC","USDT","WBTC","ETH","YFI","ZRX","UNI","AMPL","getPriceFromMessari","url","xmlHttp","XMLHttpRequest","responseText","App","detectMobile","getAccounts","accounts","net","getId","networkId","AaveProtocolDataProviderInstance","ProtocolDataProvider","networks","getTokenMapFromNetwork","setTokenMapState","setActiveAccountState","setPoolState","setPoolTrackAddress","getAllATokens","results","getAaveData","updatePoolTrackerAddress","updateActiveAccount","getReserveData","aaveTokenInfo","calculateAPY","liquidityRate","JSON","parse","data","market_data","price_usd","updateTokenMap","depositAPR","getOwnerAddress","userOwnedPools","getOwnerERC721Address","ERCAddr","ERCInstance","JCOwnerERC721","balanceOf","tokenOfOwnerByIndex","tokenId","getCreation","ownerInfo","pool","getDepostorAddress","userDepositPools","getDepositorERC721Address","JCDepositorERC721","getDepositInfo","depositInfo","asset","Set","getVerifiedPools","verifiedPools","ownerPools","depositBalancePools","depositPools","balances","isHashMatch","checkByteCode","updateVerifiedPoolAddrs","updateOwnerPoolAddrs","updateUserDepositPoolAddrs","updateVerifiedPoolInfo","updateOwnerPoolInfo","updateUserDepositPoolInfo","history","location","hostname","createHashHistory","basename","addrsArray","infoArray","mobileReducer","innerWidth","action","daiAddressReducer","activeAccountReducer","tokenMapReducer","verifiedPoolAddrsReducer","verifiedPoolInfoReducer","ownerPoolAddrsReducer","ownerPoolInfoReducer","userDepositPoolAddrsReducer","userDepositPoolInfoReducer","poolTrackerAddressReducer","rootReducer","combineReducers","router","connectRouter","match","createBrowserHistory","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","routerMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f7f19d6.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Footer = () => {\n\treturn (\n    <footer className=\"app-bar\" style={{bottom: 0, top: 'auto', transform: 'scaleY(-1)'}}/>\n\t)\n}\n\nexport default Footer","import React, {Component} from \"react\"\nimport Matter from \"matter-js\";\nimport MatterAttractors from \"matter-attractors\";\n\nclass Shapes extends Component {\n    componentWillUnmount() {\n        // Todo remove event listeners\n    }\n\n    componentDidMount() {\n        const Engine = Matter.Engine,\n            Render = Matter.Render,\n            Runner = Matter.Runner,\n            Composites = Matter.Composites,\n            Bodies = Matter.Bodies,\n            World = Matter.World;\n\n        Matter.use(MatterAttractors);\n\n        const engine = Engine.create({\n            positionIterations: 8\n        });\n\n        const palette = {\n            brandRed: '#CE3232',\n            brandYellow: '#E0C723',\n            brandGreen: '#80CE32',\n            brandPink: '#D991BA',\n            brandBlue: '#3FA7D6'\n        }\n\n        const shapes = {\n            polygon1: { sides: 0, size: 100 },\n            rectangle1: { width: 175, height: 175 },\n            polygon2: { sides: 5, size: 155 },\n            polygon3: { sides: 6, size: 150 },\n            polygon4: { sides: 8, size: 175 },\n            rectangle2: { width: 200, height: 100 },\n            polygon5: { sides: 0, size: 150 },\n        }\n\n        const paletteKeys = Object.keys(palette);\n        const shapesKeys = Object.keys(shapes);\n\n        this.docHeight = document.body.clientHeight;\n        this.viewportHeight = window.innerHeight;\n        this.docWidth = document.body.clientWidth;\n\n        const render = Render.create({\n          element: this.refs.scene,\n          engine: engine,\n          options: {\n            width: this.docWidth,\n            height: this.docHeight,\n            background: 'transparent',\n            wireframes: false\n          }\n        });\n\n        engine.world.gravity.scale = 0.000005;\n        engine.world.gravity.y = 0;\n\n        this.attractor = Matter.Bodies.circle(this.docWidth / 2, this.viewportHeight / 2, this.viewportHeight * 0.75, {\n            isStatic: true,\n            render: { fillStyle: 'transparent', strokeStyle: '#FFFFFF55', lineWidth: 0 },\n            chamfer: { radius: this.viewportHeight * 0.33 },\n            plugin: {\n              attractors: [\n                (bodyA, bodyB) => {\n                  return {\n                    x: (bodyA.position.x - bodyB.position.x) * 0.000005,\n                    y: (bodyA.position.y - bodyB.position.y) * 0.000005,\n                  };\n                }\n              ]\n            }\n        });\n\n        Matter.Body.scale(this.attractor, 1.25, 0.75);\n\n        World.add(engine.world, this.attractor);\n\n        this.stack = Composites.stack(-264, -264, 6, 4, 64, 64, (x, y, i, j) => {\n            const options = {\n                render: {\n                    // strokeStyle: palette[paletteKeys[(i + j) % paletteKeys.length]] + 'FF',\n                    // lineWidth: 4,\n                    // fillStyle: 'transparent'\n                    fillStyle: palette[paletteKeys[(i + j) % paletteKeys.length]] + 'FF',\n                },\n                chamfer: 32\n            }\n\n            const shape = shapes[shapesKeys[(i + j) % shapesKeys.length]]\n\n\n            if (shape.sides == null) {\n                return Bodies.rectangle(x, y, shape.width, shape.height, options);\n            } else {\n                return Bodies.polygon(x, y, shape.sides, shape.size, options);\n            }\n        });\n\n        World.add(engine.world, this.stack);\n\n        Runner.run(engine);\n\n        Render.run(render);\n\n        document.addEventListener('mousedown', (e) => {\n            this.startX = e.clientX;\n            this.startY = e.clientY;\n            this.dragBody = Matter.Query.point(this.stack.bodies, { x: this.startX, y: this.startY }).shift();\n        });\n\n        document.addEventListener('mousemove', (e) => {\n            if (this.dragBody) {\n                Matter.Body.setPosition(this.dragBody, { x: e.clientX, y: e.clientY });\n            }\n        });\n\n        document.addEventListener('mouseup', (e) => {\n            if (this.dragBody) {\n                const maxVelo = 10;\n                const xVelo = Math.min(Math.max(e.clientX - this.startX, maxVelo), -1 * maxVelo);\n                const yVelo = Math.min(Math.max(e.clientY - this.startY, maxVelo), -1 * maxVelo);\n                Matter.Body.setVelocity(this.dragBody, { x: xVelo, y: yVelo });\n                this.dragBody = null;\n            }\n        });\n    }\n\n    createWalls = (World, Bodies, engine) => {\n        const wallThickness = 50;\n\n        const floor = Bodies.rectangle(this.docWidth / 2, this.docHeight + wallThickness, this.docWidth, 2 * wallThickness, { isStatic: true });\n        const ceiling = Bodies.rectangle(-wallThickness, this.docHeight + wallThickness, this.docWidth, 2 * wallThickness, { isStatic: true });\n\n        const leftWall = Bodies.rectangle(-wallThickness, this.docHeight / 2, wallThickness * 2, this.docHeight, { isStatic: true });\n        const rightWall = Bodies.rectangle(this.docWidth + wallThickness, this.docHeight / 2, wallThickness * 2, this.docHeight, { isStatic: true });\n\n        World.add(engine.world, [ floor, ceiling, leftWall, rightWall ]);\n    }\n\n    render() {\n        return <div ref=\"scene\" className=\"shapes\"/>\n    }\n}\n\nexport default Shapes\n","import React, {Component} from \"react\"\nimport { Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport Footer from \"../components/Footer\";\nimport Shapes from '../components/Shapes';\n\nimport { updateDaiAddress } from \"../actions/daiAddress\";\n\nclass Homepage extends Component {\n\tcomponentDidMount() {\n\t\twindow.scrollTo(0,0);\n\t}\n\n\tprintTokenMap = () => {\n\t\tlet acceptedTokens = Object.keys(this.props.tokenMap);\n\t\tconsole.log('tokenMapProp');\n\t\tfor(let i = 0; i < acceptedTokens.length; i++){\n\t\t\tconst key = acceptedTokens[i];\n\t\t\tconst address =  this.props.tokenMap[key] && this.props.tokenMap[key].address;\n\t\t\tconst decimals = this.props.tokenMap[key] && this.props.tokenMap[key].decimals;\n\t\t\tconsole.log(i, key, address, decimals);\n\t\t}\n\t}\n\n\tprintVerifiedPoolAddrs = () => {\n\t\tconsole.log(\"verifiedPoolAddrs:\", this.props.verifiedPoolAddrs);\n\t}\n\n\tprintVerifiedPoolInfo = () => {\n\t\tconsole.log(\"*********verifiedPoolInfo:\", this.props.verifiedPoolInfo);\n\t}\n\n\trender() {\n\t\t/*this.printTokenMap();\n\t\tthis.printVerifiedPoolAddrs();\n\t\tthis.printVerifiedPoolInfo();*/\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Shapes/>\n\t\t\t\t<Footer/>\n\t\t\t\t<article>\n\t\t\t\t\t<section className=\"page-section page-section--center horizontal-padding\">\n\t\t\t\t\t\t<h1>Donate interest earned in crypto to good causes with JustCause.</h1>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"page-section horizontal-padding\">\n\t\t\t\t\t\t<h2>How it works</h2>\n\t\t\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t\t\t<div className=\"grid__item--col-6 grid__item--col-12-medium\">\n\t\t\t\t\t\t\t\t<p className=\"mr\">JustCause allows you to leverage the power of smart contracts to donate ETH to charities. Join charity pools with your friends and JustCause will automatically donate interest earned on any ETH added to the pool.</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"grid__item--col-6 grid__item--col-12-medium\">\n\t\t\t\t\t\t\t\t<p className=\"mr\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"page-section bw0 horizontal-padding\">\n\t\t\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t\t\t<div className=\"grid__item--col-6 grid__item--col-12-medium\">\n\t\t\t\t\t\t\t\t<h2>Find us elsewhere</h2>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"grid__item--col-6 grid__item--col-12-medium\">\n\t\t\t\t\t\t\t\t<p className=\"lh1 mb0\">\n\t\t\t\t\t\t\t\t\t<a href=\"google.com\" target=\"_blank\">Facebook</a> /&nbsp;\n\t\t\t\t\t\t\t\t\t<a href=\"google.com\" target=\"_blank\">Instagram</a> /&nbsp;\n\t\t\t\t\t\t\t\t\t<a href=\"google.com\" target=\"_blank\">Twitter</a>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t</article>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\ttokenMap: state.tokenMap,\n\tverifiedPoolAddrs: state.verifiedPoolAddrs,\n\tverifiedPoolInfo: state.verifiedPoolInfo,\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tupdateDaiAddress: (s) => dispatch(updateDaiAddress(s)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage)\n","export const updateDaiAddress = (value) => ({\n\ttype: 'UPDATE_DAI_ADDRESS',\n\tvalue,\n})","import { connect } from \"react-redux\"\nimport React, {Component} from \"react\"\n\nclass Icon extends Component {\n\trender() {\n\t\tconst icons = {\n\t\t\twallet: 'M7,19 L3,19 L3,3 C9,3 14.3333333,3 19,3 C21.6666667,3 23,4.33333333 23,7 M7,7 L23,7 L23,23 L7,23 L7,7 Z M23,12 L15,12 C13.6666667,12.6666667 13,13.6666667 13,15 C13,16.3333333 13.6666667,17.3333333 15,18 L23,18',\n      caret: 'M1 6 12 19 23 6',\n      plus: 'M0,12 L24,12 M12,24 L12,0',\n\t\t\tminus: 'M0,12 L24,12',\n\t\t\tpencil: 'M3,21 L5,14 L17,2 L22,7 L9,19 L3,21 Z M14,6 L18,10 L14,6 Z',\n\t\t\tpeople: 'M8,21 C8,18.3333333 8.66666667,16.3333333 10,15 C11.3333333,13.6666667 12.3333333,12.6666667 13,12 C11.6666667,10.6666667 11,9.33333333 11,8 C11,6 13,4 15,4 C17,4 19,6 19,8 C19,9.33333333 18.3333333,10.6666667 17,12 C17.7215761,12.7215761 18.7215761,13.7215761 20,15 C21.2784239,16.2784239 21.9450905,18.2784239 22,21 L8,21 Z M5,19 L2,19 C2,16.3333333 2.66666667,14.3333333 4,13 C5.33333333,11.6666667 6.33333333,10.6666667 7,10 C5.66666667,8.66666667 5,7.33333333 5,6 C5,4 7,2 9,2 C9.69865112,2 10.3973022,2.2440567 11.0106981,2.64691485',\n\t\t\tcheck: 'M3 12 10 19 22 4',\n\t\t\tpoolShape1: '5 5 3 13 9 19 17 17 19 9 13 3',\n\t\t\tpoolShape2: '7.08695652 18 3 11 11 4 19 11 14.9130435 18',\n\t\t\tpoolShape3: '3 18 3 9 7 4 15 4 19 9 19 18',\n\t\t\tpoolShape4: 'M3.259366,14.0819725 L5.12295869,8.28412853 C5.94354544,5.73119197 8.3184244,4 11,4 C13.6815756,4 16.0564546,5.73119197 16.8770413,8.28412853 L18.740634,14.0819725 C19.2476466,15.659345 18.3799484,17.3490731 16.8025759,17.8560857 C16.5058986,17.9514462 16.1961748,18 15.8845483,18 L6.11545168,18 C4.45859743,18 3.11545168,16.6568542 3.11545168,15 C3.11545168,14.6883735 3.16400544,14.3786497 3.259366,14.0819725 Z',\n\t\t\tpoolShape5: '17 3 6 6 6 18 17 18',\n\t\t};\n\n    const viewboxSize = 24;\n    const defaultStrokeWidth = 2;\n\n\t\tconst { name, size, color, strokeWidth, isMobile } = this.props;\n\n\t\tconst adjustedSize = isMobile ? size * 1 : size;\n\n\t\treturn (\n\t\t\t<svg\n\t\t\tclassName={`icon icon-${name}`}\n\t\t\twidth={adjustedSize}\n\t\t\theight={adjustedSize}\n\t\t\tviewBox={`0 0 ${viewboxSize} ${viewboxSize}`}\n\t\t\tstyle={{ 'stroke': color }}\n\t\t\tstrokeWidth={strokeWidth ? `${strokeWidth}` : `${defaultStrokeWidth}`}\n\t\t\tfill=\"none\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t\tstrokeLinejoin=\"round\">\n\t\t\t\t{ icons[name].includes('M') ? (\n\t\t\t\t\t<path d={icons[name]} vectorEffect=\"non-scaling-stroke\"/>\n\t\t\t\t) : (\n\t\t\t\t\t<polygon points={icons[name]} vectorEffect=\"non-scaling-stroke\"/>\n\t\t\t\t)}\n\t\t\t</svg>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tisMobile: state.isMobile,\n})\n\nexport default connect(mapStateToProps)(Icon)\n","export default function(color) {\n\tconst palette = {\n\t\t\"brand-red\": \"#CE3232\",\n    \"brand-yellow\": \"#E0C723\",\n    \"brand-green\": \"#80CE32\",\n    \"brand-pink\": \"#D991BA\",\n    \"brand-blue\": \"#3FA7D6\",\n\t}\n\treturn palette[color]\n}","import React, {Component} from \"react\"\nimport classNames from 'classnames'\n\nimport Icon from \"./Icon\";\n\nclass Button extends Component {\n\trender() {\n\t\tconst { text, icon, href, callback, disabled, lg } = this.props;\n\n    const classnames = classNames({\n      \"button\": true,\n      \"button--icon-only\": !text,\n      \"button--lg\": lg,\n      \"button--disabled\": disabled,\n    })\n\n\t\treturn (\n      <button className={classnames} href={href} onClick={callback}>\n        <div className=\"button__items\">\n          { text ? (\n            <div className=\"button__item button__text\">\n              <p className=\"mb0\">{ text }</p>\n            </div>\n          ) : null }\n          { icon ? (\n            <div className=\"button__item button__icon\">\n              <Icon name={icon} size={lg ? 64 : 32}/>\n            </div>\n          ) : null }\n        </div>\n        <div className=\"button__bar--outer\">\n          <div className=\"button__bar--inner\"/>\n        </div>\n      </button>\n\t\t);\n\t}\n}\n\nexport default Button\n","import React, {Component} from \"react\"\n\nclass DaiLogo extends Component {\n\n\trender() {\n\t\treturn (\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\">\n    <defs>\n        <linearGradient id=\"a\" x1=\".5\" x2=\".5\" y1=\"1.142\" y2=\"-.105\" gradientUnits=\"objectBoundingBox\">\n            <stop offset=\"0\" stopColor=\"#f9a606\"/><stop offset=\"1\" stopColor=\"#fbcc5f\"/>\n        </linearGradient>\n        </defs><circle cx=\"25\" cy=\"25\" r=\"25\" fill=\"url(#a)\" data-name=\"Ellipse 1271\"/>\n        <path fill=\"#fff\"\n        d=\"M39.825 20.875h-2.967c-1.633-4.533-6.025-7.642-11.817-7.642h-9.525v7.642h-3.308v2.742h3.308v2.875h-3.308v2.741h3.308v7.55h9.525c5.725 0 10.083-3.083 11.758-7.55h3.025v-2.742h-2.358a12.433 12.433 0 00.092-1.483v-.067c0-.45-.025-.892-.067-1.325h2.342v-2.742zm-21.642-5.2h6.858c4.25 0 7.408 2.092 8.867 5.192H18.183zm6.858 18.642h-6.858v-5.092h15.708c-1.466 3.05-4.616 5.091-8.85 5.091zm9.758-9.25a9.859 9.859 0 01-.1 1.417H18.183v-2.875h16.525a10.84 10.84 0 01.092 1.392z\"\n        data-name=\"Path 7536\"/>\n        </svg>\n\t\t);\n\t}\n}\n\nexport default DaiLogo","\nimport React, {Component} from \"react\"\n\nclass WbtcLogo extends Component {\n\n\trender() {\n\t\treturn (\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\"><g fill-rule=\"evenodd\"><path fill=\"#423a4f\" d=\"M182.7.268c-2.921.089-5.1.322-5.1.544 0 .218-1.387.388-3.167.388-2.177 0-3.218.156-3.333.5-.116.347-.967.467-2.788.393-2.07-.084-2.671.024-2.86.515-.19.496-.63.569-2.186.363-1.604-.213-1.992-.14-2.203.41-.211.548-.583.62-2.06.399-1.504-.226-1.803-.164-1.803.375 0 .45-.362.645-1.2.645-.66 0-1.2-.174-1.2-.387 0-.214-.27-.284-.6-.158-.33.127-.6.489-.6.804 0 .422-.441.547-1.673.475-1.028-.061-1.734.087-1.833.384-.089.267-.86.482-1.727.482-.862 0-1.567.18-1.567.4 0 .22-.63.4-1.4.4-.77 0-1.4.18-1.4.4 0 .22-.63.4-1.4.4-.77 0-1.4.18-1.4.4 0 .22-.63.4-1.4.4-.77 0-1.4.18-1.4.4 0 .22-.54.4-1.2.4-.66 0-1.2.18-1.2.4 0 .22-.54.4-1.2.4-.66 0-1.2.18-1.2.4 0 .22-.54.4-1.2.4-.66 0-1.2.18-1.2.4 0 .22-.45.4-1 .4s-1 .201-1 .447c0 .264-.421.366-1.032.249-.655-.125-1.108.004-1.242.353-.117.303-.623.551-1.126.551-.503 0-1.023.282-1.155.628-.154.401-.514.541-.996.388-.477-.152-.841-.015-.989.372-.129.337-.601.612-1.047.612-.447 0-.813.203-.813.45 0 .285-.433.363-1.182.214-.933-.187-1.135-.113-.957.35.162.422-.066.586-.818.586-.574 0-1.043.201-1.043.447 0 .249-.353.354-.8.237-.52-.136-.8-.012-.8.353 0 .31-.36.563-.8.563-.44 0-.8.18-.8.4 0 .22-.349.4-.776.4-.427 0-.888.18-1.024.4-.136.22-.597.4-1.024.4-.427 0-.776.18-.776.4 0 .22-.36.4-.8.4-.44 0-.8.18-.8.4 0 .22-.36.4-.8.4-.44 0-.8.18-.8.4 0 .22-.36.4-.8.4-.44 0-.8.201-.8.447 0 .249-.353.354-.8.237-.52-.136-.8-.012-.8.353 0 .31-.261.563-.579.563-.319 0-1.065.45-1.659 1-.593.55-1.308 1-1.587 1-.28 0-.584.225-.677.5-.13.386-.324.371-.856-.068-.378-.312-.656-.402-.617-.2C97.789 27.498 97.56 28 97 28c-.33 0-.6.18-.6.4 0 .22-.27.4-.6.4-.33 0-.6.201-.6.447 0 .249-.353.354-.8.237-.502-.131-.8-.012-.8.32 0 .291-.54.768-1.2 1.06-.66.292-1.2.667-1.2.834 0 .166-.27.302-.6.302-.33 0-.6.146-.6.325 0 .179-.622.57-1.382.868-.76.298-1.289.692-1.176.875.113.182-.165.332-.618.332-.472 0-.824.261-.824.61 0 .358-.496.709-1.2.85-.66.132-1.2.41-1.2.619 0 .686-1.209 1.603-1.81 1.372-.325-.124-.59-.027-.59.215 0 .566-2.044 2.333-2.7 2.334-.275 0-.5.18-.5.4 0 .22-.198.4-.44.4-.241 0-.943.54-1.56 1.2-1.08 1.156-2.348 1.687-1.762.738.177-.286.11-.353-.176-.176-.254.157-.462.469-.462.693 0 .527-3.411 3.945-3.937 3.945-.221 0-2.14 1.725-4.266 3.833-2.125 2.108-3.963 3.735-4.083 3.614-.378-.377-1.714.551-1.714 1.191 0 .335-.151.516-.337.401-.44-.272-2.961 2.33-2.603 2.687.15.151-.02.274-.379.274-.665 0-1.626 1.322-1.241 1.707.341.341-6.959 7.59-7.382 7.329-.217-.134-.294.104-.177.551.208.798-2.926 4.413-3.826 4.413-.224 0-.536.208-.693.462-.177.286-.11.353.176.176.949-.586.418.682-.738 1.762-.66.617-1.2 1.329-1.2 1.584 0 .255-.18.352-.4.216-.22-.136-.4.123-.4.576 0 .453-.18.824-.4.824-.22 0-.4.193-.4.429 0 .548-1.015 1.571-1.559 1.571-.229 0-.314.265-.19.59.239.622-.695 1.81-1.422 1.81-.236 0-.429.358-.429.797 0 .438-.36 1.021-.8 1.296-.44.275-.8.827-.8 1.227 0 .4-.15.635-.332.522-.183-.113-.577.416-.875 1.176-.298.76-.689 1.382-.868 1.382-.179 0-.325.27-.325.6 0 .33-.136.6-.302.6-.167 0-.542.54-.834 1.2-.292.66-.769 1.2-1.06 1.2-.332 0-.451.298-.32.8.117.447.012.8-.237.8-.246 0-.447.27-.447.6 0 .33-.18.6-.4.6-.22 0-.4.27-.4.6 0 .56-.502.789-1.368.625-.202-.039-.124.224.175.583.362.436.403.742.123.922-.23.149-.718.855-1.084 1.57-.367.715-.842 1.3-1.056 1.3-.215 0-.39.36-.39.8 0 .44-.253.8-.563.8-.365 0-.489.28-.353.8.117.447.012.8-.237.8-.246 0-.447.36-.447.8 0 .44-.18.8-.4.8-.22 0-.4.36-.4.8 0 .44-.18.8-.4.8-.22 0-.4.36-.4.8 0 .44-.18.8-.4.8-.22 0-.4.349-.4.776 0 .427-.18.888-.4 1.024-.22.136-.4.597-.4 1.024 0 .427-.18.776-.4.776-.22 0-.4.36-.4.8 0 .44-.253.8-.563.8-.365 0-.489.28-.353.8.117.447.012.8-.237.8-.246 0-.447.469-.447 1.043 0 .752-.164.98-.586.818-.458-.176-.538.021-.362.899.161.804.045 1.194-.407 1.367-.367.141-.533.499-.397.854.138.36-.034.715-.418.863-.425.163-.57.516-.414 1.005.153.482.013.842-.388.996-.346.132-.628.652-.628 1.155s-.248 1.009-.551 1.126c-.349.134-.478.587-.353 1.242.117.611.015 1.032-.249 1.032-.246 0-.447.45-.447 1s-.18 1-.4 1c-.22 0-.4.54-.4 1.2 0 .66-.18 1.2-.4 1.2-.22 0-.4.54-.4 1.2 0 .66-.18 1.2-.4 1.2-.22 0-.4.54-.4 1.2 0 .66-.18 1.2-.4 1.2-.22 0-.4.63-.4 1.4 0 .77-.18 1.4-.4 1.4-.22 0-.4.63-.4 1.4 0 .77-.18 1.4-.4 1.4-.22 0-.4.615-.4 1.367 0 .751-.223 1.441-.496 1.532-.307.102-.448.723-.369 1.633.074.86-.052 1.468-.304 1.468-.246 0-.431.794-.431 1.843 0 1.416-.13 1.793-.561 1.627-.333-.127-.642.098-.762.558-.111.424-.039.772.16.772.2 0 .363.54.363 1.2 0 .838-.195 1.2-.645 1.2-.539 0-.601.299-.375 1.803.221 1.477.149 1.849-.399 2.06-.55.211-.623.599-.41 2.203.205 1.549.132 1.996-.356 2.184-.338.129-.615.561-.615.959 0 .399-.225.815-.5.926-.4.161-.4.208 0 .233.605.039.704 3.632.1 3.632-.233 0-.4 1.322-.4 3.167 0 1.741-.171 3.226-.381 3.3-.57.199-.977 22.16-.63 34.029.17 5.808.456 10.2.656 10.076.195-.121.355 1.22.355 2.981 0 1.76.18 3.311.4 3.447.22.136.4 1.329.4 2.652 0 1.568.202 2.607.58 2.985.425.425.517 1.115.344 2.572-.2 1.689-.134 1.991.434 1.991.572 0 .631.291.404 2-.23 1.736-.173 2 .432 2 .599 0 .659.252.427 1.8-.227 1.511-.165 1.8.385 1.8.507 0 .628.322.533 1.42-.074.86.085 1.548.405 1.745.311.193.473.848.394 1.597-.081.773.083 1.404.419 1.612.345.213.475.744.347 1.415-.133.696-.011 1.148.345 1.285.316.121.551.782.551 1.545 0 .734.18 1.445.4 1.581.22.136.4.777.4 1.424 0 .647.18 1.176.4 1.176.22 0 .4.54.4 1.2 0 .66.18 1.2.4 1.2.22 0 .4.641.4 1.424 0 .847.162 1.323.4 1.176.233-.144.4.263.4.976 0 .673.18 1.224.4 1.224.22 0 .4.54.4 1.2 0 .66.201 1.2.447 1.2.254 0 .353.355.231.824-.132.505.005.91.353 1.043.702.27.752 1.599.069 1.85-.275.102-.006.316.597.476.913.243 1.057.453.857 1.25-.184.731-.079.957.446.957.533 0 .63.224.436 1-.191.76-.095 1 .4 1 .493 0 .59.24.402.989-.203.811-.127.943.421.733.537-.206.623-.08.436.635-.15.573-.03.97.336 1.11.313.12.569.48.569.799 0 .338-.194.461-.462.296-.286-.177-.353-.11-.176.176.157.254.545.462.862.462.348 0 .576.396.576 1 0 .55.18 1 .4 1 .22 0 .4.36.4.8 0 .44.18.8.4.8.22 0 .4.36.4.8 0 .44.18.8.4.8.22 0 .4.36.4.8 0 .44.18.8.4.8.22 0 .4.36.4.8 0 .44.18.8.4.8.22 0 .4.36.4.8 0 .44.18.8.4.8.22 0 .4.36.4.8 0 .44.18.8.4.8.22 0 .4.341.4.757 0 .417.267.86.593.985.338.13.492.493.357.843-.152.396-.007.615.407.615.354 0 .643.27.643.6 0 .33.18.6.4.6.22 0 .4.36.4.8 0 .44.18.8.4.8.22 0 .4.32.4.712 0 .391.36.971.8 1.288.44.317.8.897.8 1.288 0 .392.199.712.443.712.243 0 .345.254.226.564-.121.315.213.886.757 1.295.536.402.974 1.048.974 1.436 0 .388.18.705.4.705.22 0 .4.27.4.6 0 .33.18.6.4.6.22 0 .4.236.4.525 0 .288.36.911.8 1.383.44.472.8 1.147.8 1.499 0 .352.18.529.4.393.22-.136.4.033.4.376 0 .343.193.624.429.624.449 0 1.571.979 1.571 1.371 0 .126-.292.229-.649.229-.529 0-.558.11-.155.596.272.327.656.496.852.374.415-.256 1.552.77 1.552 1.401a.44.44 0 00.447.429c.245 0 .356.347.245.77-.141.54-.036.707.353.557.309-.118.555.033.555.342 0 .305.36.814.8 1.131.44.317.8.819.8 1.114 0 .296.909 1.423 2.019 2.505 1.111 1.081 1.967 2.195 1.903 2.474-.064.279.029.54.207.581.552.126 5.871 5.696 5.871 6.147 0 .234.18.315.4.179.22-.136.4.044.4.4 0 .387-.185.533-.462.362-.286-.177-.353-.11-.176.176.157.254.461.462.675.462.646 0 3.221 2.783 2.962 3.202-.133.215.022.288.346.164.591-.227 2.551 1.99 2.36 2.668-.053.185.202.223.565.084.444-.171.566-.1.372.214-.159.257-.086.468.163.468.562 0 1.595 1.003 1.595 1.548 0 .223.208.533.462.69.286.177.353.11.176-.176-.157-.254-.098-.462.132-.462.544 0 6.657 5.98 6.543 6.401-.048.177.211.565.577.861.467.379.575.39.363.038-.752-1.253.834-.307 2.684 1.6 1.12 1.155 2.179 2.055 2.353 1.999.173-.055.881.44 1.572 1.1.691.661 1.5 1.201 1.797 1.201.298 0 .541.18.541.4 0 .22.193.4.429.4.548 0 1.571 1.015 1.571 1.559 0 .229.27.312.6.186.365-.141 1.09.294 1.856 1.112.692.739 1.471 1.297 1.732 1.241.261-.056.716.349 1.011.9.295.551.832 1.002 1.193 1.002.362 0 1.044.36 1.516.8.472.44 1.096.8 1.387.8.291 0 .788.36 1.105.8.317.44.916.8 1.331.8.479 0 .677.203.542.555-.149.386.016.495.543.357.761-.199 1.984.685 1.984 1.436 0 .223.208.533.462.69.286.177.353.11.176-.176-.169-.274-.031-.462.338-.462.343 0 .624.18.624.4 0 .22.36.4.8.4.881 0 1.093.643.3.909-.275.092-.005.091.6-.003.799-.123 1.1 0 1.1.45 0 .384.226.532.597.39.345-.133.704.051.851.435.14.366.509.568.819.449.31-.119.666.05.791.377.125.326.568.593.985.593.416 0 .757.18.757.4 0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.27.4.6.4.33 0 .6.18.6.4 0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.45.4 1 .4s1 .18 1 .4c0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.45.4 1 .4s1 .18 1 .4c0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.469.4 1.043.4.752 0 .98.164.818.586-.178.463.024.537.957.35.926-.185 1.182-.094 1.182.422 0 .501.237.598 1 .406.769-.193 1-.096 1 .42 0 .479.219.6.77.425.498-.158.905-.005 1.15.433.252.451.672.601 1.254.449.556-.146.955-.022 1.093.34.12.313.649.569 1.176.569.526 0 .957.18.957.4 0 .22.521.4 1.157.4.637 0 1.252.248 1.369.551.128.335.585.479 1.167.367.71-.135 1.071.057 1.404.75.247.513.461.707.476.432.032-.589 2.027-.687 2.027-.1 0 .22.54.4 1.2.4.66 0 1.2.18 1.2.4 0 .22.63.4 1.4.4.77 0 1.4.18 1.4.4 0 .22.63.4 1.4.4.77 0 1.4.18 1.4.4 0 .22.72.4 1.6.4.88 0 1.6.18 1.6.4 0 .22.705.4 1.567.4.897 0 1.638.214 1.733.5.1.299.876.5 1.934.5 1.285 0 1.734.149 1.65.548-.091.432.276.489 1.742.269 1.582-.237 1.973-.155 2.635.556.605.65.944.745 1.532.431 1.123-.601 2.399-.489 2.677.235.201.522.63.591 2.354.375 1.751-.218 2.174-.147 2.492.422.319.57.788.648 2.801.465 1.668-.151 2.754-.046 3.497.34.719.373 2.45.559 5.198.559 2.397 0 4.177.168 4.255.401.084.252 3.832.409 10.133.425 16.465.04 17.867.006 17.6-.426-.277-.447 1.284-.561 5.688-.415 2.243.075 3.035-.051 3.548-.564.542-.542 1.141-.613 3.352-.395 2.322.229 2.727.172 2.954-.419.224-.584.607-.645 2.605-.413 1.999.232 2.381.171 2.605-.414.216-.561.588-.642 2.041-.443 1.398.192 1.856.105 2.141-.404.282-.505.772-.603 2.214-.44 1.449.163 1.852.082 1.852-.373 0-.435.421-.551 1.67-.461 1.056.077 1.73-.059 1.833-.369.092-.275.85-.49 1.73-.49.862 0 1.567-.18 1.567-.4 0-.22.72-.4 1.6-.4.88 0 1.6-.18 1.6-.4 0-.22.63-.4 1.4-.4.77 0 1.4-.18 1.4-.4 0-.22.63-.4 1.4-.4.77 0 1.4-.18 1.4-.4 0-.22.63-.4 1.4-.4.77 0 1.4-.18 1.4-.4 0-.22.463-.4 1.029-.4.565 0 1.29-.262 1.611-.583.321-.321.87-.473 1.221-.338.384.147.793-.032 1.027-.451.267-.476.679-.623 1.309-.464.629.157.998.027 1.166-.413.167-.434.57-.581 1.242-.452.697.133.995.013.995-.401 0-.4.266-.522.824-.376.505.132.91-.005 1.043-.353.12-.313.649-.569 1.176-.569.526 0 .957-.18.957-.4 0-.22.45-.4 1-.4s1-.18 1-.4c0-.22.45-.4 1-.4s1-.18 1-.4c0-.22.45-.4 1-.4s1-.18 1-.4c0-.22.349-.4.776-.4.427 0 .888-.18 1.024-.4.136-.22.597-.4 1.024-.4.427 0 .776-.18.776-.4 0-.22.36-.4.8-.4.44 0 .8-.18.8-.4 0-.22.36-.4.8-.4.44 0 .8-.18.8-.4 0-.22.264-.4.586-.4.702 0 4.358-1.978 4.547-2.461.074-.186.479-.339.9-.339.422 0 .767-.18.767-.4 0-.22.36-.4.8-.4.44 0 .8-.146.8-.325 0-.179.63-.573 1.4-.875.77-.302 1.4-.662 1.4-.8s.63-.498 1.4-.8c.77-.302 1.4-.696 1.4-.875 0-.179.36-.325.8-.325.44 0 .8-.18.8-.4 0-.22.27-.4.6-.4.33 0 .6-.18.6-.4 0-.22.236-.4.525-.4.288 0 .911-.36 1.383-.8.472-.44.954-.8 1.07-.8.224 0 6.682-4.392 7.022-4.775.11-.125.695-.481 1.3-.793.605-.312 1.1-.717 1.1-.9 0-.182.27-.332.6-.332.33 0 .6-.18.6-.4 0-.22.23-.4.512-.4.281 0 .771-.36 1.088-.8.317-.44.775-.8 1.019-.8.243 0 .878-.472 1.411-1.048.534-.576 1.6-1.458 2.37-1.96.77-.501 2.075-1.56 2.901-2.352.825-.792 1.603-1.44 1.728-1.44.126 0 .474-.225.775-.5.301-.275 2.038-1.85 3.86-3.5 4.239-3.84 10.896-10.497 14.736-14.736 1.65-1.822 3.225-3.559 3.5-3.86.275-.301.5-.649.5-.775 0-.125.648-.903 1.44-1.728.792-.826 1.851-2.131 2.352-2.901.502-.77 1.384-1.836 1.96-2.37.576-.533 1.048-1.168 1.048-1.411 0-.244.36-.702.8-1.019.44-.317.8-.807.8-1.088 0-.282.18-.512.4-.512.22 0 .4-.27.4-.6 0-.33.15-.6.332-.6.183 0 .588-.495.9-1.1.312-.605.668-1.19.793-1.3.383-.34 4.775-6.798 4.775-7.022 0-.116.36-.598.8-1.07.44-.472.8-1.095.8-1.383 0-.289.18-.525.4-.525.22 0 .4-.27.4-.6 0-.33.18-.6.4-.6.22 0 .4-.36.4-.8 0-.44.146-.8.325-.8.179 0 .573-.63.875-1.4.302-.77.662-1.4.8-1.4s.498-.63.8-1.4c.302-.77.696-1.4.875-1.4.179 0 .325-.36.325-.8 0-.44.18-.8.4-.8.22 0 .4-.345.4-.767 0-.421.153-.826.339-.9.483-.189 2.461-3.845 2.461-4.547 0-.322.18-.586.4-.586.22 0 .4-.36.4-.8 0-.44.18-.8.4-.8.22 0 .4-.36.4-.8 0-.44.18-.8.4-.8.22 0 .4-.349.4-.776 0-.427.18-.888.4-1.024.22-.136.4-.597.4-1.024 0-.427.18-.776.4-.776.22 0 .4-.45.4-1s.18-1 .4-1c.22 0 .4-.45.4-1s.18-1 .4-1c.22 0 .4-.45.4-1s.18-1 .4-1c.22 0 .4-.431.4-.957 0-.527.256-1.056.569-1.176.348-.133.485-.538.353-1.043-.146-.558-.024-.824.376-.824.414 0 .534-.298.401-.995-.129-.672.018-1.075.452-1.242.449-.172.571-.535.404-1.201-.171-.678-.045-1.029.435-1.213.419-.161.6-.544.478-1.011-.108-.414.057-1.006.368-1.316.31-.311.564-1.028.564-1.593 0-.566.18-1.029.4-1.029.22 0 .4-.63.4-1.4 0-.77.18-1.4.4-1.4.22 0 .4-.63.4-1.4 0-.77.18-1.4.4-1.4.22 0 .4-.63.4-1.4 0-.77.18-1.4.4-1.4.22 0 .4-.72.4-1.6 0-.88.18-1.6.4-1.6.22 0 .4-.705.4-1.567 0-.88.215-1.638.49-1.73.31-.103.446-.777.369-1.833-.09-1.249.026-1.67.461-1.67.455 0 .536-.403.373-1.852-.161-1.431-.064-1.932.429-2.208.505-.283.589-.772.402-2.349-.203-1.715-.139-1.991.46-1.991.613 0 .662-.281.416-2.398-.238-2.053-.18-2.435.407-2.66.591-.227.648-.632.419-2.954-.21-2.131-.139-2.818.341-3.297.473-.473.593-1.543.551-4.883-.038-2.995.092-4.367.436-4.579.647-.401.712-27.34.066-27.556-.259-.086-.42-1.801-.42-4.473 0-3.111-.141-4.38-.5-4.5-.356-.119-.472-1.095-.402-3.391.08-2.621-.019-3.27-.529-3.465-.51-.196-.577-.64-.359-2.385.22-1.759.153-2.188-.371-2.389-.724-.278-.836-1.554-.235-2.677.314-.588.219-.927-.431-1.532-.71-.661-.793-1.054-.558-2.625.249-1.658.205-1.819-.428-1.576-.629.242-.683.067-.496-1.594.16-1.42.079-1.866-.34-1.866-.386 0-.551-.538-.551-1.8 0-.99-.18-1.8-.4-1.8-.22 0-.4-.72-.4-1.6 0-.88-.18-1.6-.4-1.6-.22 0-.4-.63-.4-1.4 0-.77-.18-1.4-.4-1.4-.22 0-.4-.63-.4-1.4 0-.77-.18-1.4-.4-1.4-.22 0-.4-.54-.4-1.2 0-.66-.194-1.2-.43-1.2-.241 0-.374-.536-.303-1.216.076-.725-.096-1.355-.427-1.559-.332-.205-.464-.691-.328-1.209.142-.546.016-.945-.343-1.083-.313-.12-.569-.739-.569-1.376 0-.636-.18-1.157-.4-1.157-.22 0-.4-.431-.4-.957 0-.527-.267-1.06-.593-1.185a.635.635 0 01-.361-.833c.127-.332-.062-.898-.421-1.257-.383-.383-.553-.965-.412-1.41.171-.539.046-.758-.433-.758-.483 0-.612-.233-.458-.824.137-.521-.008-.911-.392-1.058-.426-.164-.54-.568-.382-1.358.176-.878.096-1.075-.362-.899-.422.162-.586-.066-.586-.818 0-.574-.18-1.043-.4-1.043-.22 0-.4-.36-.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4-.36-.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4-.45-.4-1s-.18-1-.4-1c-.22 0-.4-.36-.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4-.45-.4-1s-.18-1-.4-1c-.22 0-.4-.27-.4-.6 0-.33-.18-.6-.4-.6-.22 0-.4-.36-.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4-.36-.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4-.341-.4-.757 0-.417-.267-.86-.593-.985-.338-.13-.492-.493-.357-.843.156-.407.002-.615-.454-.615-.492 0-.63-.229-.48-.8.14-.535.012-.8-.385-.8-.423 0-.546-.317-.425-1.1.094-.605.095-.875.003-.6-.266.793-.909.581-.909-.3 0-.44-.18-.8-.4-.8-.22 0-.4-.281-.4-.624 0-.369.188-.507.462-.338.286.177.353.11.176-.176-.157-.254-.467-.462-.69-.462-.751 0-1.635-1.223-1.436-1.984.138-.527.029-.692-.357-.543-.352.135-.555-.063-.555-.542 0-.415-.36-1.014-.8-1.331-.44-.317-.8-.897-.8-1.288 0-.392-.15-.712-.332-.712-.183 0-.586-.495-.895-1.1-.309-.605-.989-1.515-1.512-2.022-.522-.507-.854-1.019-.736-1.137.118-.117-.402-.812-1.155-1.544-.754-.732-1.37-1.576-1.37-1.875 0-.3-.36-.805-.8-1.122-.44-.317-.8-.807-.8-1.088 0-.282-.18-.512-.4-.512-.22 0-.4-.178-.4-.395 0-.372-.76-1.42-1.9-2.621-.275-.29-.5-.728-.5-.974 0-.481-1.788-2.41-2.235-2.41-.149 0-.607-.388-1.018-.861-.851-.981-1.022-2.152-.247-1.686.344.207.33.091-.045-.372-.3-.37-.689-.583-.865-.475-.175.109-.92-.443-1.655-1.226a460.34 460.34 0 00-3.035-3.191c-1.617-1.682-2.273-2.966-1.2-2.348.29.167.36.135.167-.077-.184-.2-.467-.364-.629-.364-.46 0-1.638-1.291-1.638-1.795 0-.249-.211-.322-.468-.163-.317.196-.383.069-.205-.397.169-.439.108-.59-.168-.42-.504.312-3.625-2.594-3.319-3.09.114-.184-.034-.335-.328-.335-.295 0-.795-.36-1.112-.8-.317-.44-.826-.8-1.131-.8-.323 0-.461-.245-.329-.587.124-.323.025-.711-.219-.862-.269-.166-.332-.092-.159.187.677 1.095-.733.317-2.473-1.365-1.039-1.004-2.474-2.391-3.189-3.08-.715-.69-1.3-1.471-1.3-1.736 0-.269-.322-.398-.728-.292-.491.129-1.19-.338-2.154-1.437-.785-.896-1.638-1.628-1.896-1.628s-.358-.18-.222-.4c.136-.22-.123-.4-.576-.4-.453 0-.824-.15-.824-.332 0-.183-.456-.577-1.014-.875-.591-.317-.926-.773-.803-1.094.153-.398-.009-.481-.586-.298-.456.145-.797.07-.797-.174a.43.43 0 00-.429-.427c-.631 0-1.657-1.137-1.401-1.552.122-.196-.047-.58-.374-.852-.486-.403-.596-.374-.596.155 0 .921-.493.804-1.334-.315-.398-.53-1.161-1.073-1.695-1.208-.534-.134-.971-.51-.971-.836a.598.598 0 00-.6-.592c-.33 0-.6-.18-.6-.4 0-.22-.236-.4-.525-.4-.288 0-.911-.36-1.383-.8-.472-.44-1.136-.8-1.475-.8-.339 0-.617-.18-.617-.4 0-.22-.27-.4-.6-.4-.33 0-.6-.18-.6-.4 0-.22-.27-.4-.6-.4-.33 0-.6-.18-.6-.4 0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.27-.4-.6-.4-.33 0-.6-.18-.6-.4 0-.22-.27-.4-.6-.4-.33 0-.6-.18-.6-.4 0-.22-.36-.4-.8-.4-.44 0-.8-.159-.8-.353 0-.195-.378-.453-.84-.573-.462-.121-.732-.395-.6-.61.14-.225-.096-.301-.559-.18-.573.15-.801.013-.801-.48 0-.456-.208-.61-.615-.454-.35.135-.713-.019-.843-.357-.125-.326-.568-.593-.985-.593-.416 0-.757-.18-.757-.4 0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.45-.4-1-.4s-1-.18-1-.4c0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.469-.4-1.043-.4-.752 0-.98-.164-.818-.586.18-.468-.028-.536-1.024-.337-1.021.204-1.206.137-1.012-.368.18-.47.037-.566-.593-.401-.501.131-1.012-.033-1.291-.414-.254-.347-.812-.6-1.24-.563-.436.039-.735-.151-.679-.431.062-.311-.353-.5-1.1-.5-.66 0-1.2-.191-1.2-.425 0-.234-.315-.393-.7-.354-1.252.127-1.752-.013-1.5-.421.144-.233-.263-.4-.976-.4-.673 0-1.224-.18-1.224-.4 0-.22-.54-.4-1.2-.4-.66 0-1.2-.18-1.2-.4 0-.22-.54-.4-1.2-.4-.66 0-1.2-.18-1.2-.4 0-.22-.54-.4-1.2-.4-.66 0-1.2-.18-1.2-.4 0-.22-.63-.4-1.4-.4-.77 0-1.4-.18-1.4-.4 0-.22-.63-.4-1.4-.4-.77 0-1.4-.18-1.4-.4 0-.22-.611-.4-1.357-.4-.766 0-1.447-.234-1.563-.536-.136-.353-.643-.472-1.487-.348-.803.118-1.403-.008-1.606-.336-.178-.289-1.013-.537-1.855-.552-.93-.017-1.498-.21-1.445-.49.112-.59-.984-1.029-1.298-.521-.408.661-2.589.457-2.589-.242 0-.513-.32-.576-1.795-.355-1.486.223-1.841.151-2.06-.419-.22-.574-.589-.645-2.211-.43-1.556.206-1.996.133-2.186-.363-.189-.491-.79-.599-2.86-.515-1.821.074-2.672-.046-2.788-.393-.114-.343-1.149-.5-3.3-.5-1.831 0-3.191-.174-3.273-.42-.146-.438-28.873-.817-38.827-.512m31.7 15.747c5.616.562 10.521 1.154 13.2 1.594 1.21.198 3.46.569 5 .824 3.621.598 16.841 3.774 20.2 4.852 1.43.46 3.68 1.18 5 1.601 1.32.422 2.76.917 3.2 1.1.44.183 1.43.55 2.2.814.77.264 1.76.624 2.2.8.44.176 1.43.549 2.2.83.77.281 2.53 1.019 3.91 1.64 1.381.622 2.592 1.13 2.693 1.13.764 0 14.942 7.379 19.597 10.2 17.417 10.553 30.939 21.849 45.02 37.61 3.239 3.626 11.29 14.125 12.98 16.927.22.365.506.753.635.863 1.887 1.608 12.151 20.299 15.929 29.009 2.461 5.672 2.645 6.118 3.622 8.791.483 1.32 1.044 2.713 1.246 3.095.202.382.368 1.021.368 1.42s.149.896.33 1.105c.182.209.563 1.19.846 2.18.283.99.66 2.16.836 2.6.177.44.438 1.25.582 1.8.143.55.413 1.54.599 2.2 1.222 4.32 2.535 9.753 3.371 13.939 1.397 7 1.659 8.733 3.053 20.169.585 4.807.59 27.981.007 33.12-1.025 9.027-1.343 11.209-2.648 18.172-.675 3.601-2.798 12.717-3.353 14.4-.182.55-.557 1.81-.835 2.8-.681 2.425-3.532 11.177-4.007 12.3-.21.495-.537 1.305-.728 1.8-2.357 6.106-8.542 19.206-11.568 24.5-3.438 6.015-8.769 14.297-9.355 14.533a.569.569 0 00-.33.484c0 .903-9.68 13.07-14.6 18.351-20.083 21.558-43.918 37.994-68.8 47.442-1.54.585-3.16 1.22-3.6 1.411-1.088.474-9.263 3.186-11 3.65-.77.206-1.985.544-2.7.752-4.671 1.356-13.448 3.319-19.3 4.316-4.398.75-7.481 1.143-16.077 2.051-5.01.53-24.036.53-29.046 0-16.92-1.787-24.462-3.207-38.377-7.223a36.667 36.667 0 00-2.605-.646c-.608-.117-1.203-.372-1.324-.567-.12-.195-.57-.354-1-.354-.43 0-1.094-.174-1.476-.387-.382-.213-1.595-.676-2.695-1.029-6.198-1.988-22.416-9.404-29-13.261-5.166-3.026-8.141-4.865-11.343-7.011-3.816-2.557-11.876-8.513-13.257-9.797a18.175 18.175 0 00-1.643-1.329c-7.098-4.934-24.954-23.919-31.774-33.786-.761-1.1-1.488-2.09-1.617-2.2-.682-.584-6.985-10.491-10.051-15.8-1.998-3.46-8.823-17.778-10.295-21.6-.932-2.42-1.85-4.76-2.039-5.2-.438-1.021-3.304-9.83-3.969-12.2-.278-.99-.653-2.25-.833-2.8-1.045-3.181-3.044-12.685-4.355-20.7-2.429-14.852-2.732-33.756-.794-49.5 1.4-11.366 3.016-19.164 6.403-30.9.238-.825.529-1.997.646-2.605.117-.608.372-1.203.567-1.324.195-.12.354-.647.354-1.171s.18-1.064.4-1.2c.22-.136.4-.599.4-1.029 0-.43.166-1.094.368-1.476.202-.382.76-1.775 1.239-3.095.983-2.708 1.259-3.413 2.114-5.4.332-.77 1.063-2.504 1.626-3.854 2.096-5.023 7.234-15.001 10.581-20.546 1.92-3.183 8.836-13.663 9.238-14 .131-.11 1.304-1.64 2.607-3.4 1.303-1.76 2.478-3.29 2.611-3.4.134-.11.658-.74 1.164-1.4 2.254-2.937 8.193-9.485 12.675-13.973 3.776-3.781 11.751-10.976 13.534-12.211a13.034 13.034 0 001.387-1.115c2.354-2.301 16.568-12.085 22.165-15.256A384.65 384.65 0 00110 38.664c.99-.577 4.86-2.555 8.6-4.396 5.735-2.823 8.687-4.105 17.2-7.471.44-.174 1.43-.533 2.2-.797.77-.264 1.76-.621 2.2-.793.44-.171 2.15-.715 3.8-1.208 1.65-.492 3.45-1.051 4-1.241 3.835-1.322 16.521-4.182 22.6-5.095 1.54-.231 3.991-.61 5.446-.842 1.455-.231 3.525-.431 4.6-.444 1.075-.013 2.674-.172 3.554-.354 2.363-.489 25.329-.495 30.2-.008m-28.482 13.401c-.14.139-1.933.41-3.986.603-5.443.51-16.222 2.34-21.132 3.589-.99.251-2.476.552-3.303.667-.826.115-1.602.37-1.723.567-.122.197-.74.358-1.374.358-.634 0-1.264.18-1.4.4-.136.22-.766.4-1.4.4-.634 0-1.264.18-1.4.4-.136.22-.766.4-1.4.4-.634 0-1.264.18-1.4.4-.136.22-.676.4-1.2.4-.524 0-1.064.18-1.2.4-.136.22-.676.4-1.2.4-.524 0-1.064.18-1.2.4-.136.22-.687.4-1.224.4-.537 0-.976.18-.976.4 0 .22-.362.4-.805.4-.443 0-1.118.165-1.5.366-1.079.568-5.295 2.434-5.5 2.434-.1 0-1.297.54-2.66 1.2-1.362.66-2.715 1.2-3.006 1.2-.291 0-.529.18-.529.4 0 .22-.225.399-.5.397-.52-.004-7.149 3.201-7.5 3.625-.11.133-.785.497-1.5.808-.715.311-1.3.701-1.3.868 0 .166-.175.302-.389.302-.66 0-13.194 7.907-15.557 9.814-.36.291-1.914 1.474-3.454 2.63-1.54 1.156-2.89 2.206-3 2.334-.173.202-3.013 2.556-5.334 4.422-3.789 3.046-3.98 2.247 1.954 8.18 5.708 5.709 5.07 5.289 6.262 4.12.505-.495 1.995-1.8 3.312-2.9 1.317-1.1 2.845-2.405 3.396-2.9.551-.495 1.13-.9 1.288-.9.157 0 .736-.45 1.286-1s1.154-1 1.342-1c.189 0 .692-.32 1.119-.71 1.011-.927 9.663-6.89 9.996-6.89.14 0 .733-.339 1.317-.753 2.252-1.598 15.798-8.61 19.662-10.179 2.979-1.209 3.767-1.545 4.495-1.915.382-.194.969-.353 1.305-.353.336 0 1.013-.208 1.505-.462 1.921-.994 2.311-1.138 3.066-1.138.43 0 .893-.18 1.029-.4.136-.22.777-.4 1.424-.4.647 0 1.176-.18 1.176-.4 0-.22.529-.4 1.176-.4.647 0 1.288-.18 1.424-.4.136-.22.766-.4 1.4-.4.634 0 1.264-.18 1.4-.4.136-.22.678-.4 1.205-.4.526 0 1.371-.165 1.876-.366 1.199-.477 9.391-2.28 12.719-2.799 10.881-1.696 12.608-1.818 25.6-1.81 15.993.011 24.021.928 37 4.226.88.224 2.187.504 2.904.622.717.119 1.402.376 1.523.571.121.196.739.356 1.373.356s1.264.18 1.4.4c.136.22.766.4 1.4.4.634 0 1.264.18 1.4.4.136.22.676.4 1.2.4.524 0 1.064.18 1.2.4.136.22.676.4 1.2.4.524 0 1.064.18 1.2.4.136.22.599.4 1.029.4.43 0 1.139.18 1.576.4l1.59.8c.437.22.985.4 1.219.4.234 0 1.17.36 2.08.8.911.44 1.792.8 1.958.8.525 0 9.742 4.558 9.881 4.886.074.173.479.314.9.314.422 0 .767.18.767.4 0 .22.36.4.8.4.44 0 .8.138.8.306 0 .168.675.616 1.5.995 2.536 1.166 13.925 8.287 14.5 9.066.11.15.83.707 1.6 1.239.77.532 1.638 1.199 1.929 1.481.29.282.652.513.804.513.151 0 .723.405 1.271.9A43.95 43.95 0 00298 78.461c.77.584 2.39 1.976 3.6 3.094 2.865 2.647 2.484 2.776 8.01-2.716 5.294-5.261 5.15-5.035 3.89-6.12a1036.4 1036.4 0 01-1.904-1.647c-1.098-.954-4.931-4.117-6.147-5.072a140.46 140.46 0 01-2.006-1.625 45.794 45.794 0 00-2.643-1.99c-.77-.53-1.749-1.283-2.175-1.674-.427-.391-.997-.711-1.267-.711-.27 0-.551-.153-.625-.339-.223-.568-12.038-8.061-12.711-8.061-.232 0-.422-.136-.422-.302 0-.167-.585-.557-1.3-.868-.715-.311-1.39-.675-1.5-.808-.351-.424-6.98-3.629-7.5-3.625-.275.002-.5-.177-.5-.397 0-.22-.238-.4-.529-.4-.291 0-1.644-.54-3.006-1.2-1.363-.66-2.566-1.2-2.673-1.2-.108 0-1.076-.424-2.151-.943-1.075-.519-2.784-1.188-3.798-1.487-1.014-.3-1.843-.685-1.843-.857 0-.172-.439-.313-.976-.313-.537 0-1.088-.18-1.224-.4-.136-.22-.676-.4-1.2-.4-.524 0-1.064-.18-1.2-.4-.136-.22-.676-.4-1.2-.4-.524 0-1.064-.18-1.2-.4-.136-.22-.766-.4-1.4-.4-.634 0-1.264-.18-1.4-.4-.136-.22-.766-.4-1.4-.4-.634 0-1.264-.18-1.4-.4-.136-.22-.766-.4-1.4-.4-.634 0-1.252-.161-1.374-.358-.121-.197-.897-.452-1.723-.567-.827-.115-2.313-.416-3.303-.667-4.151-1.056-14.684-2.913-20.8-3.668-3.787-.467-31.284-.922-31.682-.524m134.678 60.073c-5.711 5.63-5.585 5.233-2.661 8.353a73.106 73.106 0 013.065 3.56c.88 1.099 1.699 2.088 1.819 2.198.121.11.652.83 1.181 1.6.529.77 1.069 1.49 1.2 1.6.392.328 7.161 10.307 7.974 11.753l1.288 2.292c.296.525.629 1.045.74 1.155.257.254 2.374 4.297 4.816 9.2 2.093 4.2 5.582 12.216 5.582 12.823 0 .213.18.745.4 1.182l.8 1.59c.22.437.4 1.146.4 1.576 0 .43.18.893.4 1.029.22.136.4.766.4 1.4 0 .634.18 1.264.4 1.4.22.136.4.676.4 1.2 0 .524.18 1.064.4 1.2.22.136.4.766.4 1.4 0 .634.18 1.264.4 1.4.22.136.4.856.4 1.6 0 .744.16 1.452.356 1.573.195.121.456.806.578 1.523.122.717.4 2.114.618 3.104 2.927 13.296 3.263 16.411 3.516 32.6.135 8.658.051 14.37-.243 16.6l-.874 6.6c-.413 3.115-1.637 9.571-2.425 12.8-.215.88-.486 2.276-.601 3.103-.115.826-.37 1.602-.567 1.723-.197.122-.358.74-.358 1.374 0 .634-.18 1.264-.4 1.4-.22.136-.4.766-.4 1.4 0 .634-.18 1.264-.4 1.4-.22.136-.4.766-.4 1.4 0 .634-.18 1.264-.4 1.4-.22.136-.4.676-.4 1.2 0 .524-.18 1.064-.4 1.2-.22.136-.4.676-.4 1.2 0 .524-.18 1.064-.4 1.2-.22.136-.4.599-.4 1.029a3.88 3.88 0 01-.353 1.476c-.37.727-1.138 2.53-1.66 3.895-1.263 3.305-6.436 13.956-6.865 14.133-.177.074-.322.479-.322.9 0 .422-.18.767-.4.767-.22 0-.4.36-.4.8 0 .44-.146.8-.325.8-.179 0-.573.63-.875 1.4-.302.77-.696 1.4-.875 1.4-.179 0-.325.195-.325.433 0 .425-6.646 10.775-7.171 11.167-.147.11-.703.83-1.235 1.6-.532.77-1.199 1.638-1.481 1.929-.282.29-.513.652-.513.804 0 .151-.405.725-.9 1.275-.495.549-1.62 1.896-2.5 2.992-.88 1.096-2.275 2.691-3.1 3.545-2.193 2.268-2.475 1.703 3.989 7.987l4.456 4.331 1.527-1.731a95.991 95.991 0 011.733-1.932c.221-.215 3.405-4.091 4.395-5.351.33-.42 1.061-1.322 1.625-2.006a43.518 43.518 0 001.981-2.643c.526-.77 1.07-1.49 1.21-1.6.738-.582 6.763-9.987 10.504-16.4 1.672-2.867 5.48-10.559 5.48-11.07 0-.292.18-.53.4-.53.22 0 .4-.242.4-.539 0-.296.252-1.061.56-1.7.308-.638 1.129-2.511 1.824-4.161a863.34 863.34 0 011.693-4c.237-.55.607-1.45.823-2 .216-.55.552-1.313.747-1.695a3.88 3.88 0 00.353-1.476c0-.43.18-.893.4-1.029.22-.136.4-.676.4-1.2 0-.524.18-1.064.4-1.2.22-.136.4-.766.4-1.4 0-.634.18-1.264.4-1.4.22-.136.4-.766.4-1.4 0-.634.18-1.264.4-1.4.22-.136.4-.766.4-1.4 0-.634.18-1.264.4-1.4.22-.136.4-.856.4-1.6 0-.744.161-1.452.358-1.574.197-.121.455-.897.574-1.723.119-.827.391-2.313.605-3.303 5.121-23.703 5.121-48.697 0-72.4a58.577 58.577 0 01-.605-3.303c-.119-.826-.377-1.602-.574-1.723-.197-.122-.358-.83-.358-1.574 0-.744-.18-1.464-.4-1.6-.22-.136-.4-.766-.4-1.4 0-.634-.18-1.264-.4-1.4-.22-.136-.4-.766-.4-1.4 0-.634-.18-1.264-.4-1.4-.22-.136-.4-.766-.4-1.4 0-.634-.18-1.264-.4-1.4-.22-.136-.4-.676-.4-1.2 0-.524-.18-1.064-.4-1.2-.22-.136-.4-.599-.4-1.029a3.88 3.88 0 00-.353-1.476c-.362-.712-.519-1.087-2.047-4.895-2.56-6.378-9.086-20.077-9.688-20.333a.564.564 0 01-.312-.477c0-.376-3.837-6.791-5.659-9.462-.628-.92-1.141-1.85-1.141-2.067 0-.217-.145-.454-.323-.528-.178-.073-.931-1.033-1.674-2.133-.743-1.1-1.464-2.09-1.603-2.2-.139-.11-.825-1.042-1.525-2.07-.7-1.029-1.5-2.109-1.779-2.4-.279-.292-1.135-1.34-1.902-2.33A83.82 83.82 0 00329 88.24c-.22-.247-1.058-1.193-1.862-2.103l-1.462-1.655-5.08 5.007M71.969 86.862a284.425 284.425 0 01-3.006 3.524c-2.494 2.851-7.582 9.399-8.482 10.914-.359.605-.795 1.1-.967 1.1-.173 0-.314.236-.314.525 0 .288-.36.911-.8 1.383-.44.472-.8.948-.8 1.057 0 .109-1.138 1.962-2.53 4.117-1.391 2.155-2.966 4.728-3.5 5.718-.533.99-1.068 1.89-1.187 2-.452.417-7.983 16.107-7.983 16.632 0 .097-.378 1.03-.84 2.072a137.93 137.93 0 00-1.247 2.896c-.223.55-.565 1.313-.76 1.695-.194.382-.353 1.057-.353 1.5 0 .443-.18.805-.4.805-.22 0-.4.529-.4 1.176 0 .647-.18 1.288-.4 1.424-.22.136-.4.676-.4 1.2 0 .524-.18 1.064-.4 1.2-.22.136-.4.676-.4 1.2 0 .524-.16 1.052-.356 1.173-.195.121-.453.806-.571 1.523-.358 2.163-.715 3.66-1.073 4.504-.187.44-.453 1.34-.591 2-.139.66-.422 1.965-.63 2.9-1.663 7.467-2.84 14.197-3.656 20.9-.62 5.096-.627 30.213-.01 35.4.938 7.885 2.636 17.18 4.494 24.6.248.99.548 2.387.666 3.104.119.717.376 1.402.571 1.523.196.121.356.739.356 1.373s.18 1.264.4 1.4c.22.136.4.777.4 1.424 0 .647.18 1.176.4 1.176.22 0 .4.529.4 1.176 0 .647.18 1.288.4 1.424.22.136.4.599.4 1.029 0 .43.18 1.139.4 1.576l.8 1.59c.22.437.4 1.157.4 1.6 0 .443.18.805.4.805.22 0 .4.247.4.548 0 .7 3.045 7.663 5.621 12.852 1.091 2.2 1.983 4.225 1.982 4.5-.002.275.135.5.303.5.168 0 .616.675.995 1.5.908 1.976 2.316 4.372 4.944 8.414 1.185 1.822 2.155 3.487 2.155 3.7 0 .212.158.386.351.386.194 0 .576.54.849 1.2.273.66.625 1.2.781 1.2.156 0 .539.492.851 1.094.313.602.78 1.367 1.039 1.7.259.333 1.415 1.866 2.567 3.406 1.153 1.54 2.651 3.442 3.329 4.227a74.728 74.728 0 012.033 2.459c1.901 2.452 4.793 5.514 5.208 5.514.4 0 9.313-8.901 9.957-9.943.14-.226-.351-1.016-1.09-1.756-1.129-1.129-2.661-2.959-7.661-9.155-.643-.797-4.088-5.79-6.84-9.911-1.89-2.832-3.507-5.589-5.532-9.435-.463-.88-.977-1.66-1.142-1.733-.165-.074-.3-.479-.3-.9 0-.422-.18-.767-.4-.767-.22 0-.4-.36-.4-.8 0-.44-.18-.8-.4-.8a.41.41 0 01-.4-.418c0-.23-.827-2.165-1.838-4.3-1.011-2.135-1.977-4.242-2.147-4.682-.169-.44-.536-1.34-.815-2-.279-.66-.684-1.65-.9-2.2a23.472 23.472 0 00-.747-1.695 3.88 3.88 0 01-.353-1.476c0-.43-.18-.893-.4-1.029-.22-.136-.4-.676-.4-1.2 0-.524-.18-1.064-.4-1.2-.22-.136-.4-.676-.4-1.2 0-.524-.18-1.064-.4-1.2-.22-.136-.4-.766-.4-1.4 0-.634-.18-1.264-.4-1.4-.22-.136-.4-.766-.4-1.4 0-.634-.18-1.264-.4-1.4-.22-.136-.4-.678-.4-1.205 0-.526-.163-1.371-.362-1.876-.482-1.223-2.027-7.913-2.522-10.919-1.693-10.28-2.082-15.396-2.085-27.4-.005-14.554.493-19.684 3.065-31.6.451-2.09.904-4.387 1.006-5.104.103-.717.347-1.402.542-1.523.196-.121.356-.739.356-1.373s.18-1.264.4-1.4c.22-.136.4-.867.4-1.624 0-.757.18-1.376.4-1.376.22 0 .4-.529.4-1.176 0-.647.18-1.288.4-1.424.22-.136.4-.766.4-1.4 0-.634.18-1.264.4-1.4.22-.136.4-.599.4-1.029 0-.43.18-1.139.4-1.576l.8-1.59c.22-.437.4-1.069.4-1.405 0-.336.165-.923.366-1.305.202-.382.633-1.325.958-2.095 1.46-3.455 2.539-5.783 5.193-11.2 1.563-3.19 2.941-5.89 3.063-6 .122-.11.488-.74.814-1.4 1.028-2.081 8.513-13.632 9.202-14.2.133-.11.675-.83 1.204-1.6.529-.77 1.069-1.49 1.2-1.6.131-.11.671-.83 1.2-1.6.529-.77 1.06-1.49 1.181-1.6.12-.11 1.119-1.28 2.219-2.6 1.1-1.32 2.405-2.813 2.9-3.318.495-.505.9-.981.9-1.058 0-.173-1.179-1.37-6.258-6.348l-4.004-3.923-1.769 2.109m17.85 233.405c-4.666 4.711-5.491 5.715-4.719 5.744.165.007 1.124.772 2.13 1.7 1.007.929 2.427 2.139 3.156 2.689.729.55 1.796 1.41 2.37 1.911.574.501 2.214 1.819 3.644 2.929a316.932 316.932 0 013.305 2.589c.387.314.882.571 1.1.571.217 0 .395.18.395.4 0 .22.188.4.417.4.229 0 .803.36 1.275.8.472.44 1.095.8 1.383.8.289 0 .525.15.525.332 0 .183.495.588 1.1.9.605.313 1.28.709 1.5.882 1.095.86 7.428 4.686 7.756 4.686.208 0 .437.135.511.3.073.165 1.033.748 2.133 1.295 1.1.547 2.09 1.087 2.2 1.2.463.475 2.034 1.205 2.595 1.205.333 0 .605.18.605.4 0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.272.4.605.4.333 0 .918.177 1.3.394.947.536 5.297 2.429 8.695 3.784l3.8 1.515c.55.22 1.313.559 1.695.754a3.88 3.88 0 001.476.353c.43 0 .893.18 1.029.4.136.22.676.4 1.2.4.524 0 1.064.18 1.2.4.136.22.766.4 1.4.4.634 0 1.264.18 1.4.4.136.22.766.4 1.4.4.634 0 1.264.18 1.4.4.136.22.766.4 1.4.4.634 0 1.264.18 1.4.4.136.22.856.4 1.6.4.744 0 1.452.161 1.574.358.121.197.897.457 1.723.579.827.122 2.403.406 3.503.63 24.205 4.932 47.382 4.942 70.7.033 2.975-.626 5.147-1.118 7.1-1.607.99-.248 2.387-.548 3.104-.666.717-.119 1.402-.376 1.523-.571.121-.196.739-.356 1.373-.356s1.264-.18 1.4-.4c.136-.22.777-.4 1.424-.4.647 0 1.176-.18 1.176-.4 0-.22.529-.4 1.176-.4.647 0 1.288-.18 1.424-.4.136-.22.599-.4 1.029-.4a3.88 3.88 0 001.476-.353 27.096 27.096 0 011.695-.76c.55-.223 1.657-.694 2.46-1.046.804-.353 1.563-.641 1.689-.641.125 0 1.268-.469 2.539-1.043a274.333 274.333 0 013.712-1.644c.77-.331 3.2-1.482 5.4-2.56 2.2-1.077 4.225-1.957 4.5-1.956.275.002.5-.135.5-.303 0-.168.675-.616 1.5-.995.825-.38 2.22-1.138 3.1-1.684a82.83 82.83 0 012.8-1.662c.66-.368 2.225-1.363 3.478-2.211 1.253-.848 2.468-1.542 2.7-1.542.232 0 .422-.15.422-.332 0-.183.495-.588 1.1-.9.605-.313 1.449-.883 1.875-1.268.427-.385.997-.7 1.267-.7.27 0 .551-.135.625-.3.073-.165 1.572-1.38 3.332-2.7 1.759-1.32 3.439-2.628 3.734-2.906.295-.278 1.194-.998 1.999-1.6.804-.602 1.847-1.454 2.318-1.894.47-.44 1.687-1.507 2.703-2.372 1.016-.864 1.847-1.755 1.847-1.979 0-.352-9.83-10.249-10.18-10.249-.071 0-1.184.995-2.474 2.212-1.29 1.216-3.696 3.24-5.346 4.498-1.65 1.257-3.232 2.505-3.515 2.774-.283.268-1.048.803-1.7 1.188-.652.385-1.185.842-1.185 1.014 0 .173-.27.314-.6.314-.33 0-.6.18-.6.4 0 .22-.27.4-.6.4-.33 0-.6.18-.6.4 0 .22-.255.4-.567.4-.311 0-.626.14-.7.311-.27.63-8.073 5.52-10.833 6.788-.825.379-1.5.827-1.5.995 0 .168-.36.306-.8.306-.44 0-.8.18-.8.4 0 .22-.36.4-.8.4-.44 0-.8.18-.8.4 0 .22-.36.4-.8.4-.44 0-.8.18-.8.4 0 .22-.345.4-.767.4-.421 0-.826.135-.9.3-.202.456-8.686 4.308-11.733 5.328-.88.294-1.771.679-1.98.854-.209.175-.783.318-1.276.318s-1.008.18-1.144.4c-.136.22-.687.4-1.224.4-.537 0-.976.18-.976.4 0 .22-.529.4-1.176.4-.647 0-1.288.18-1.424.4-.136.22-.777.4-1.424.4-.647 0-1.176.18-1.176.4 0 .22-.619.4-1.376.4-.757 0-1.488.18-1.624.4-.136.22-.766.4-1.4.4-.634 0-1.252.161-1.374.358-.121.197-.897.452-1.723.567-.827.115-2.223.385-3.103.599-.88.214-3.49.753-5.8 1.198-4.016.774-6.404 1.124-14.021 2.058-4.426.543-23.532.543-27.958 0-7.617-.934-10.005-1.284-14.021-2.058-2.31-.445-4.92-.984-5.8-1.198a38.201 38.201 0 00-3.103-.599c-.826-.115-1.602-.37-1.723-.567-.122-.197-.74-.358-1.374-.358-.634 0-1.264-.18-1.4-.4-.136-.22-.867-.4-1.624-.4-.757 0-1.376-.18-1.376-.4 0-.22-.529-.4-1.176-.4-.647 0-1.288-.18-1.424-.4-.136-.22-.777-.4-1.424-.4-.647 0-1.176-.18-1.176-.4 0-.22-.439-.4-.976-.4-.537 0-1.088-.18-1.224-.4-.136-.22-.599-.4-1.029-.4-.43 0-1.139-.18-1.576-.4l-1.59-.8c-.437-.22-.979-.4-1.204-.4-.465 0-2.905-1.059-7.012-3.042-1.546-.747-3.031-1.358-3.3-1.358-.269 0-.489-.18-.489-.4 0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8-.136-.8-.302 0-.167-.564-.552-1.253-.857-2.368-1.049-12.044-7.123-12.28-7.71-.074-.182-.389-.331-.7-.331-.312 0-.567-.18-.567-.4 0-.22-.27-.4-.6-.4-.33 0-.6-.141-.6-.314 0-.172-.495-.611-1.1-.975a26.022 26.022 0 01-2.264-1.586c-4.615-3.667-8.191-6.653-9.328-7.79-1.681-1.681-.887-2.124-6.689 3.732\"/><path fill=\"#eb9444\" d=\"M168.188 99.3c-.103.275-.232 7.34-.287 15.7l-.101 15.2-19.179.104c-14.733.08-19.252.219-19.494.6-.173.273-.318 4.849-.321 10.169l-.006 9.672 8.9.128c10.205.146 11.644.539 14.189 3.872 2.185 2.862 2.132 1.576 2.018 49.123L153.8 248.2l-.994 1.469c-1.865 2.758-2.452 2.915-11.403 3.062-8.873.146-8.861.142-9.206 2.802a76.431 76.431 0 01-.586 3.667c-.188.99-.544 3.06-.789 4.6-.245 1.54-.77 4.736-1.166 7.102-.395 2.366-.63 4.391-.521 4.5.109.109 8.806.198 19.327.198h19.129l.104 16.1.105 16.1h18.8l.2-15.6.2-15.6 7.695-.109 7.696-.108.104 15.708.105 15.709h18.8l.2-15.782.2-15.782 1-.278c.55-.153 1.99-.298 3.2-.321 7.497-.147 22.132-3.018 28.6-5.61 16.083-6.446 23.691-17.304 25.432-36.297 1.727-18.846-6.347-31.377-23.832-36.987-3.821-1.227-3.815-1.139-.223-3.503 6.611-4.351 10.355-9.847 12.362-18.146.539-2.23.621-13.244.111-14.934-.193-.638-.572-2.15-.842-3.36-2.526-11.302-14.004-20.629-29.603-24.056-3.682-.809-9.392-1.764-13.605-2.277l-2.2-.267-.2-15.6-.2-15.6-9.495-.107-9.495-.107-.105 15.307-.105 15.307h-15.2l-.105-15.3-.105-15.3h-9.407c-7.16 0-9.453.119-9.595.5m37.943 53.115c12.949 1.103 20.114 4.115 24.231 10.185 2.145 3.164 3.156 11.733 1.738 14.74-.275.583-.723 1.555-.995 2.16-1.455 3.232-7.893 7.841-12.705 9.094l-2.4.626c-5.162 1.35-23.001 2.557-26.919 1.822l-1.489-.28.104-19.081.104-19.081 2.2-.235c3.789-.404 11.065-.382 16.131.05m4.669 58.191c23.035 2.186 32.188 9.219 30.758 23.631-1.269 12.793-17.829 19.456-46.958 18.894l-6.8-.131v-42.4l2.4-.233c4.691-.455 14.49-.341 20.6.239\"/><path fill=\"#fbfbfb\" d=\"M188.762 16.169c-.13.132-2.56.423-5.4.646-9.523.75-16.039 1.759-25.762 3.986-2.713.622-9.394 2.469-12.181 3.369-1.55.5-3.629 1.149-4.619 1.442-.99.292-1.98.642-2.2.777-.22.134-1.12.474-2 .754-.88.28-2.005.678-2.5.883-.495.206-1.35.554-1.9.774l-2 .8-1.9.758c-5.127 2.04-16.67 7.91-22.5 11.441-17.275 10.466-30.277 21.3-44.204 36.835-2.051 2.289-8.08 9.739-9.197 11.366-.528.77-1.082 1.49-1.231 1.6-.352.26-8.42 12.545-9.522 14.5-.465.825-1.241 2.175-1.723 3-1.324 2.265-7.604 14.796-8.667 17.292a172.43 172.43 0 00-1.931 4.8c-1.25 3.264-1.724 4.422-2.172 5.303-.194.382-.353 1.021-.353 1.42s-.151.896-.337 1.105c-.185.209-.742 1.73-1.239 3.38a257.85 257.85 0 01-1.432 4.621c-.448 1.372-1.265 4.508-3.382 12.979-.535 2.138-1.802 8.935-2.238 12-2.875 20.231-2.502 42.701 1.014 61 .211 1.1.488 2.63.615 3.4.128.77.393 2.03.59 2.8.197.77.574 2.3.838 3.4 1.125 4.688 4.168 15.035 5.176 17.6.173.44.531 1.43.795 2.2.552 1.609.908 2.55 1.546 4.1.25.605.616 1.505.813 2 3.037 7.61 8.699 18.936 12.847 25.7 2.622 4.277 6.858 10.776 7.169 11 .153.11.888 1.1 1.633 2.2 2.007 2.962 6.815 8.974 11.192 13.994 1.816 2.083 13.323 13.59 15.406 15.406 7.995 6.97 15.119 12.36 22.503 17.026 2.58 1.631 4.88 3.102 5.111 3.269.622.451 2.171 1.336 3.98 2.275.88.456 1.69.931 1.8 1.055.732.823 21.377 10.375 22.423 10.375.213 0 .745.18 1.182.4l1.59.8c.437.22 1.121.4 1.52.4s.896.149 1.105.33c.209.182 1.19.563 2.18.846.99.283 2.16.656 2.6.829 2.385.936 14.306 4.117 18.2 4.857 6.241 1.186 11.013 1.974 14.4 2.376 20.282 2.409 42.626 1.541 61-2.37 2.753-.586 11.777-2.835 13-3.24.55-.182 2.35-.732 4-1.221 1.65-.489 3.313-1.051 3.695-1.248.382-.197 1.021-.359 1.42-.359s.896-.143 1.105-.318c.209-.175 1.1-.547 1.98-.827 2.047-.65 3.592-1.263 7.096-2.815 1.042-.462 1.983-.84 2.09-.84.5 0 14.642-6.759 15.014-7.176.11-.123.92-.601 1.8-1.062 3.101-1.625 7.773-4.455 10.672-6.465 1.03-.713 2.065-1.297 2.3-1.297.235 0 .428-.15.428-.332 0-.183.492-.588 1.094-.9.602-.313 1.367-.78 1.7-1.039.333-.26 2.586-1.953 5.006-3.762 2.42-1.81 5.3-4.028 6.4-4.928 7.24-5.93 16.035-14.519 22.698-22.167.604-.693 2.909-3.558 5.122-6.366a981.113 981.113 0 014.602-5.811c.318-.387.578-.837.579-1 0-.162.513-.894 1.139-1.626 1.25-1.463 5.679-8.405 9.104-14.269 1.866-3.195 9.756-19.383 9.756-20.016 0-.106.339-.956.753-1.888a49.39 49.39 0 001.24-3.096c.268-.77.631-1.76.807-2.2.176-.44.536-1.43.8-2.2.264-.77.621-1.76.793-2.2.171-.44.715-2.15 1.208-3.8.492-1.65 1.049-3.45 1.236-4 .467-1.371 2.942-11.298 3.49-14l.69-3.4c1.904-9.384 2.761-19.831 2.756-33.6-.006-14.636-.809-24.11-2.934-34.6-.201-.99-.552-2.79-.78-4-.97-5.143-5.402-20.533-6.478-22.495-.21-.382-.381-.969-.381-1.305 0-.336-.159-.923-.353-1.305-.445-.875-.988-2.2-1.843-4.495-.368-.99-.946-2.43-1.284-3.2-.338-.77-.888-2.03-1.221-2.8-1.237-2.854-6.553-13.466-7.715-15.4-.661-1.1-1.319-2.27-1.462-2.6-.142-.33-1.578-2.634-3.191-5.12-1.612-2.486-2.931-4.691-2.931-4.9 0-.209-.15-.38-.332-.38-.183 0-.588-.492-.9-1.094-.313-.602-.78-1.367-1.039-1.7-.26-.333-1.956-2.586-3.769-5.006-10.415-13.899-25.778-29.197-37.16-37.001-.77-.528-1.49-1.082-1.6-1.231-.325-.439-14.038-9.359-16-10.406-.99-.529-1.89-1.053-2-1.164-.385-.39-11.506-6.017-14.5-7.337-5.296-2.334-8.259-3.56-10.3-4.261-.77-.264-1.76-.633-2.2-.819-3.796-1.604-17.494-5.591-23.2-6.752-1.32-.269-3.03-.646-3.8-.838-3.314-.827-13.413-2.237-20.2-2.821-5.372-.461-26.308-.934-26.638-.601M208.2 28.406c13.513.932 29.52 3.516 37 5.973.55.18 1.81.55 2.8.82.99.271 2.16.631 2.6.801.44.17 1.61.541 2.6.824.99.283 1.971.664 2.18.846.209.181.706.33 1.105.33s1.038.166 1.42.37c.382.203 2.675 1.131 5.095 2.062 11.998 4.618 29.243 14.281 39.263 22.002 3.209 2.472 6.152 4.801 6.781 5.366 2.469 2.217 5.577 4.862 6.013 5.12 1.001.59.566 1.19-4.738 6.547-5.427 5.48-5.964 5.832-7.073 4.633-1.554-1.68-9.735-8.263-13.046-10.498-1.1-.742-2.09-1.473-2.2-1.625-.11-.152-1.73-1.253-3.6-2.447-3.044-1.943-4.344-2.731-8.6-5.209-2.409-1.402-14.876-7.428-17.6-8.506-1.54-.61-3.16-1.256-3.6-1.435-.44-.18-1.52-.556-2.4-.835-.88-.28-1.771-.652-1.98-.827-.209-.175-.783-.318-1.276-.318s-.995-.159-1.115-.354c-.121-.195-.716-.45-1.324-.567a36.667 36.667 0 01-2.605-.646c-4.33-1.25-4.821-1.379-9.3-2.453-19.814-4.751-45.462-5.132-65.28-.97-3.262.685-7.743 1.725-9.52 2.209-.66.18-2.01.54-3 .799-.99.26-2.16.609-2.6.775-.44.166-2.06.695-3.6 1.175-1.54.48-3.16 1.027-3.6 1.216-.44.189-2.421.971-4.401 1.739-5.029 1.949-13.965 6.108-17.599 8.19-5.19 2.975-16.379 10.119-17 10.854-.11.131-.92.773-1.8 1.428-.88.655-3.7 2.949-6.267 5.098S95.147 84.8 95.002 84.8c-.431 0-10.962-10.12-11.214-10.776-.127-.331.018-.788.323-1.013.462-.343 4.48-3.807 6.045-5.211 10.177-9.137 31.357-21.727 46.044-27.37 2.42-.93 4.713-1.857 5.095-2.06.382-.204 1.021-.37 1.42-.37s.896-.149 1.105-.33c.209-.182 1.19-.563 2.18-.846.99-.283 2.16-.654 2.6-.824.44-.17 1.61-.53 2.6-.801.99-.27 2.25-.637 2.8-.814 13.398-4.312 38.393-7.07 54.2-5.979M327.642 85.5c5.177 5.43 12.74 15.566 18.523 24.826 3.71 5.941 8.506 15.375 11.628 22.874 2.472 5.936 2.465 5.919 3.062 7.8.28.88.652 1.771.827 1.98.175.209.318.783.318 1.276s.18 1.008.4 1.144c.22.136.4.676.4 1.2 0 .524.159 1.051.354 1.171.195.121.45.716.567 1.324.117.608.396 1.735.618 2.505.684 2.36 2.063 7.71 2.424 9.4 2.314 10.826 3.1 16.084 4.04 27.021 1.188 13.821-.239 32.741-3.602 47.779-.811 3.63-2.085 8.865-2.384 9.8-.176.55-.721 2.35-1.21 4s-1.051 3.313-1.248 3.695c-.197.382-.359 1.021-.359 1.42s-.143.896-.318 1.105c-.175.209-.547 1.1-.827 1.98-.571 1.798-.632 1.955-2.475 6.4-7.64 18.418-18.252 35.401-30.529 48.863-2.503 2.743-2.01 2.922-7.617-2.769-6.239-6.332-5.978-5.98-5.127-6.94 3.557-4.01 8.476-10.175 10.498-13.154.746-1.1 1.585-2.232 1.863-2.515 1.331-1.357 8.761-13.948 11.379-19.285 3.842-7.83 7.891-18.085 9.596-24.3.197-.715.549-1.975.784-2.8.397-1.396.687-2.539 1.548-6.1 4.863-20.101 5.494-42.545 1.767-62.8-1.15-6.247-1.307-6.983-2.169-10.2-.472-1.76-.948-3.787-1.059-4.504-.112-.717-.363-1.402-.558-1.523-.196-.121-.356-.739-.356-1.373s-.18-1.264-.4-1.4c-.22-.136-.4-.676-.4-1.2 0-.524-.18-1.064-.4-1.2-.22-.136-.4-.651-.4-1.144 0-.493-.143-1.067-.318-1.276-.175-.209-.547-1.1-.827-1.98-.279-.88-.664-1.96-.855-2.4-.191-.44-1.211-2.87-2.266-5.4-5.493-13.161-12.686-25.049-22.507-37.2-1.867-2.31-3.492-4.292-3.611-4.403a39.48 39.48 0 01-1.198-1.313l-.982-1.11 5.577-5.587c6.484-6.496 5.563-6.063 7.829-3.687M79.467 89.281c2.933 2.904 5.333 5.444 5.333 5.643 0 .199-1.681 2.368-3.736 4.819-8.877 10.588-14.655 19.346-20.492 31.057-2.2 4.415-6.572 14.647-6.572 15.382 0 .314-.18.682-.4.818-.22.136-.4.676-.4 1.2 0 .524-.18 1.064-.4 1.2-.22.136-.4.676-.4 1.2 0 .524-.159 1.051-.354 1.171-.195.121-.45.716-.567 1.324-.117.608-.408 1.78-.646 2.605-1.25 4.33-1.379 4.821-2.453 9.3-2.648 11.045-3.713 20.939-3.724 34.6-.009 11.47.165 14.062 1.577 23.4.83 5.493 2.132 11.799 3.386 16.4.18.66.54 2.01.799 3 .26.99.611 2.16.78 2.6.169.44.726 2.15 1.237 3.8 2.093 6.745 7.457 18.872 11.943 27 1.373 2.487 9.524 15.047 9.994 15.4.147.11.699.83 1.228 1.6 1.222 1.78 8.498 10.556 8.899 10.733.166.074.301.375.301.67 0 .684-10.321 11.397-10.98 11.397-.895 0-9.384-10.047-13.012-15.4-.745-1.1-1.48-2.09-1.632-2.2-.448-.324-6.096-9.156-7.802-12.2-.862-1.54-1.879-3.34-2.258-4-2.651-4.614-9.516-19.616-9.516-20.794 0-.307-.144-.648-.321-.757-.176-.109-.572-1.121-.879-2.249-.307-1.128-.703-2.14-.879-2.249-.177-.109-.321-.55-.321-.98 0-.43-.162-1.094-.361-1.476-.199-.382-.579-1.505-.846-2.495-.266-.99-.631-2.16-.811-2.6-1.482-3.623-4.805-20.093-5.931-29.4-2.421-20.008-.162-48.382 5.126-64.4.182-.55.557-1.81.835-2.8.681-2.425 3.532-11.177 4.007-12.3.21-.495.543-1.305.74-1.8.198-.495.634-1.53.969-2.3.335-.77.963-2.3 1.396-3.4 2.524-6.423 12.5-24.625 14.758-26.929.285-.29.518-.682.518-.871 0-.189.234-.581.519-.871.285-.291 1.131-1.429 1.879-2.529 2.116-3.112 7.057-9.439 9.402-12.038.22-.244 1.21-1.37 2.199-2.503 2.307-2.639 1.697-2.888 7.868 3.222m108.038 25.028l.105 15.309 7.295-.109 7.295-.109.2-15.2.2-15.2 9.7-.107 9.7-.107v15.327c0 16.599-.042 16.287 2.215 16.287 1.189 0 7.635.887 9.785 1.346 21.216 4.533 30.934 12.337 34.442 27.654.726 3.173.727 13.317 0 16-2.378 8.784-5.696 13.557-12.571 18.08-1.501.988-2.638 1.886-2.528 1.997.111.11 1.969.794 4.129 1.519 17.107 5.744 24.914 19.277 22.521 39.04-3.098 25.587-18.667 37.054-54.012 39.784-1.661.128-3.234.365-3.496.527-.351.218-.503 4.361-.58 15.874L221.8 307.8h-19.2l-.105-15.7-.104-15.7h-15.182l-.104 15.7-.105 15.7h-19.2l-.105-15.9-.104-15.9-18.896-.006c-10.392-.003-19.125-.152-19.405-.33-.405-.257-.264-1.8.685-7.494.657-3.943 1.395-8.43 1.638-9.97.244-1.54.572-3.34.729-4l.286-1.2 8.186-.2c9.102-.222 10.062-.477 11.858-3.142 1.357-2.013 1.378-2.804 1.249-48.458l-.121-43-.876-1.638c-2.452-4.581-4.599-5.362-14.74-5.362-4.465 0-8.403-.109-8.751-.243-.554-.212-.633-1.506-.633-10.396v-10.153l19.5-.104 19.5-.104.105-15.707.104-15.707 9.696.107L187.4 99l.105 15.309m.591 38.392c-.396.276-.482 4.384-.4 19.125l.104 18.774 8.4.133c24.754.391 36.4-5.731 36.4-19.133 0-10.095-5.72-15.308-20.2-18.41-2.649-.568-23.586-.989-24.304-.489m.004 57.934c-.617.286-.741 41.569-.126 41.949.619.383 17.075.259 22.256-.167 21.127-1.739 31.17-8.443 31.17-20.809 0-11.513-6.996-17.221-25-20.399-2.707-.478-27.424-.979-28.3-.574M95.667 314.701c.133.301 7.925 6.805 10.937 9.13 12.903 9.958 33.774 20.464 48.896 24.612.715.197 1.975.549 2.8.784 20.077 5.709 46.355 7.113 66.5 3.552 6.874-1.215 13.422-2.695 17.6-3.979.55-.169 1.81-.529 2.8-.799.99-.271 2.16-.643 2.6-.826.44-.184 1.61-.598 2.6-.92 16.207-5.266 38.719-18.266 50.644-29.246 3.536-3.256 2.511-3.561 9.141 2.723 6.344 6.012 6.203 5.523 2.515 8.678a870.071 870.071 0 00-4.008 3.445c-.609.531-3.039 2.418-5.4 4.195a626.378 626.378 0 00-5.292 4.013c-1.254.984-9.592 6.278-12 7.62-.99.552-2.61 1.475-3.6 2.052-4.067 2.371-16.769 8.341-20.2 9.494-.88.296-1.78.648-2 .782-.22.135-1.21.489-2.2.787-.99.297-1.971.69-2.18.872-.209.181-.706.33-1.105.33s-1.038.162-1.42.361c-.382.199-1.505.579-2.495.846-.99.266-2.16.631-2.6.811-.783.321-4.616 1.341-7.4 1.97-.77.174-3.02.687-5 1.141-24.247 5.551-51.577 5.14-77.1-1.159-3.643-.899-4.583-1.141-5.9-1.516-.77-.22-1.85-.517-2.4-.66-.55-.144-1.36-.405-1.8-.582-.44-.176-1.61-.553-2.6-.836-.99-.283-1.971-.664-2.18-.846-.209-.181-.706-.33-1.105-.33s-1.038-.164-1.42-.364c-.382-.2-2.855-1.214-5.495-2.254-4.552-1.793-16.314-7.401-20.2-9.631-5.125-2.941-14.658-9.047-15.2-9.735-.11-.14-.83-.688-1.6-1.219-4.856-3.345-14.8-11.769-14.8-12.539 0-.6 10.461-11.058 11.061-11.058.26 0 .532.135.606.301m250.059 21.883c-.481.514-.774 1.034-.652 1.156.223.224.665-.157 1.675-1.442.81-1.029-.006-.802-1.023.286m-2.033 2.216c-.275.44-.395.8-.268.8.3 0 1.375-1.073 1.375-1.371 0-.509-.638-.18-1.107.571m-5.064 5.029c-.424.309-.657.676-.519.814.139.139.552-.048.919-.414.862-.863.596-1.129-.4-.4m-2.169 2.05c-1.252 1.296-.914 1.537.477.341.607-.521.959-1.03.783-1.131-.176-.101-.743.255-1.26.79\"/><path fill=\"#a9a6ae\" d=\"M195.1 15.898c1.815.074 4.785.074 6.6 0 1.815-.075.33-.135-3.3-.135s-5.115.06-3.3.135m-11.9.502l-2.2.27 2.2.035c1.21.02 3.01-.108 4-.285l1.8-.32-1.8.015c-.99.009-2.79.137-4 .285m27.2.001c1.795.339 7.083.534 6.767.249-.092-.082-2.057-.249-4.367-.369-2.865-.15-3.628-.112-2.4.12m-34.6.799l-1.6.286 1.6.017c.88.01 2.05-.127 2.6-.303l1-.32-1 .017c-.55.009-1.72.145-2.6.303m44.2-.021c.986.337 4.29.562 3.967.271-.092-.082-1.247-.254-2.567-.381-1.555-.149-2.048-.111-1.4.11M170.4 18l-1 .32 1 .012c.55.006 1.36-.143 1.8-.332l.8-.344-.8.012c-.44.006-1.25.156-1.8.332m55.8 0c.44.189 1.34.335 2 .325l1.2-.02-1.2-.305c-.66-.168-1.56-.314-2-.325l-.8-.019.8.344m-60.6.8l-1 .32 1 .034c.55.019 1.27-.141 1.6-.354.764-.494-.058-.494-1.6 0m65.8 0c.44.189 1.16.344 1.6.344h.8l-.8-.344c-.44-.189-1.16-.344-1.6-.344h-.8l.8.344m-69.6.8c-.504.217-.578.344-.2.344.33 0 .96-.155 1.4-.344.504-.217.578-.344.2-.344-.33 0-.96.155-1.4.344m73.8 0c.33.213.96.378 1.4.366l.8-.022-.8-.344c-1.196-.514-2.195-.514-1.4 0m-77.4.8c-.504.217-.578.344-.2.344.33 0 .96-.155 1.4-.344.504-.217.578-.344.2-.344-.33 0-.96.155-1.4.344m81.2 0c.44.189 1.07.344 1.4.344.378 0 .304-.127-.2-.344-.44-.189-1.07-.344-1.4-.344-.378 0-.304.127.2.344m-84.6.8c-.533.345-.533.388 0 .388.33 0 .87-.175 1.2-.388.533-.345.533-.388 0-.388-.33 0-.87.175-1.2.388m88.2 0c.44.189 1.07.344 1.4.344.378 0 .304-.127-.2-.344-.44-.189-1.07-.344-1.4-.344-.378 0-.304.127.2.344m-91.4.8c-.795.514.204.514 1.4 0l.8-.344-.8-.022c-.44-.012-1.07.153-1.4.366m93.633-.256c.092.079.707.264 1.367.412.876.196 1.038.159.6-.138-.54-.365-2.368-.62-1.967-.274M148.8 22.818c-.438.297-.276.334.6.138 1.471-.329 1.79-.558.767-.55-.422.003-1.037.189-1.367.412m101.764.425c1.299.42 2.438.689 2.529.597.181-.18-4-1.465-4.555-1.4-.186.022.726.383 2.026.803M144 24.228c-1.43.513-2.33.936-2 .942.33.005 1.86-.428 3.4-.963 1.54-.535 2.44-.959 2-.942-.44.017-1.97.45-3.4.963m111.2.318c0 .187 3.789 1.462 4.275 1.438.471-.022-1.883-1.006-3.175-1.327-.605-.15-1.1-.2-1.1-.111m-65.4 3.905c-7.628.529-16.395 1.625-20.8 2.602-2.677.594-.907.46 3.6-.273 16.926-2.751 36.311-2.756 53.8-.014 4.838.758 6.485.883 3.8.287-10.519-2.333-28.011-3.46-40.4-2.602M164 32l-1 .32 1 .012c.55.006 1.36-.143 1.8-.332l.8-.344-.8.012c-.44.006-1.25.156-1.8.332m69.4 0c.44.189 1.25.338 1.8.332l1-.012-1-.32c-.55-.176-1.36-.326-1.8-.332l-.8-.012.8.344m-73.2.8l-.8.344h.8c.44 0 1.16-.155 1.6-.344l.8-.344h-.8c-.44 0-1.16.155-1.6.344m77.2 0c.44.189 1.16.338 1.6.332.643-.009.604-.075-.2-.332-1.368-.438-2.419-.438-1.4 0m-118.916 1.666c-1.384.68-2.453 1.298-2.377 1.375.077.076 1.389-.478 2.916-1.233 1.527-.754 2.597-1.373 2.377-1.375-.22-.002-1.532.553-2.916 1.233M157 33.6l-.8.344h.8c.44 0 1.16-.155 1.6-.344l.8-.344h-.8c-.44 0-1.16.155-1.6.344m83.6 0c.44.189 1.16.344 1.6.344h.8l-.8-.344c-.44-.189-1.16-.344-1.6-.344h-.8l.8.344m-86.6.8c-.795.514.204.514 1.4 0l.8-.344-.8-.022c-.44-.012-1.07.153-1.4.366m89.8 0c1.196.514 2.195.514 1.4 0-.33-.213-.96-.378-1.4-.366l-.8.022.8.344m37 .6c.99.53 1.98.964 2.2.964.22 0-.41-.434-1.4-.964s-1.98-.964-2.2-.964c-.22 0 .41.434 1.4.964m-129.6.2c-.795.514.204.514 1.4 0l.8-.344-.8-.022c-.44-.012-1.07.153-1.4.366m95.4 0c1.196.514 2.195.514 1.4 0-.33-.213-.96-.378-1.4-.366l-.8.022.8.344m-98 .8c-.292.473.099.473 1.2 0 .771-.331.769-.345-.076-.372-.482-.015-.988.152-1.124.372m100.8 0c1.101.473 1.492.473 1.2 0-.136-.22-.642-.387-1.124-.372-.845.027-.847.041-.076.372m34.4.306c.568.595 3.463 2.164 3.649 1.978.085-.085-.791-.659-1.947-1.275-1.156-.617-1.922-.933-1.702-.703m-138 .488a22.85 22.85 0 01-1.557.582c-.417.134-.672.328-.568.432.104.104 1.165-.157 2.357-.58 1.192-.423 1.808-.771 1.368-.772-.44-.001-1.16.151-1.6.338m107.368.434c1.192.423 2.253.684 2.357.58.104-.104-.151-.298-.568-.431a30.242 30.242 0 01-1.676-.61c-.505-.202-1.225-.354-1.6-.338-.374.016.295.376 1.487.799m-140.468.201c-.605.328-1.1.681-1.1.784 0 .386.632.144 1.6-.613 1.189-.93 1.011-.991-.5-.171m28.5.965c-.33.19-2.94 1.268-5.8 2.393-4.887 1.924-7.571 3.166-6.91 3.199.159.008 1.419-.495 2.8-1.118 1.38-.622 3.95-1.685 5.71-2.361 1.76-.676 3.92-1.507 4.8-1.847.901-.349 1.251-.618.8-.616-.44.002-1.07.159-1.4.35m116.2.266c.88.34 3.04 1.171 4.8 1.847 1.76.676 4.33 1.739 5.71 2.361 1.381.623 2.641 1.126 2.8 1.118.661-.032-2.023-1.275-6.91-3.199-2.86-1.126-5.513-2.214-5.895-2.417-.382-.204-1.012-.361-1.4-.349-.388.011.015.299.895.639m-150.3 1.969c-1.495.811-1.404 1.149.1.371.66-.341 1.2-.706 1.2-.81 0-.258-.043-.243-1.3.439m183.7-.45c0 .11.54.48 1.2.821.66.341 1.2.531 1.2.421 0-.11-.54-.48-1.2-.821-.66-.341-1.2-.531-1.2-.421M98.625 45.995C94.981 48.412 92 50.477 92 50.583c0 .166 13.081-8.331 13.556-8.806.793-.792-1.272.464-6.931 4.218m196.175-3.49c.424.453 11.2 7.474 11.2 7.297 0-.222-8.963-6.249-10.4-6.993-.55-.284-.91-.421-.8-.304m-106 1.86c-1.21.129 3.65.235 10.8.235s12.01-.117 10.8-.26c-2.686-.318-18.557-.3-21.6.025m-65.7 1.86c-1.485.762-2.7 1.476-2.7 1.586 0 .178 5.56-2.484 5.967-2.858.547-.502-.93.072-3.267 1.272m57.5-1.025l-1.2.305 1.2.018c.66.01 2.01-.126 3-.303l1.8-.32-1.8-.003c-.99-.001-2.34.135-3 .303m35.2.018c1.1.172 2.54.306 3.2.3l1.2-.013-1.2-.305c-.66-.168-2.1-.303-3.2-.299l-2 .006 2 .311m-41.8.849c-.99.205-2.79.556-4 .782-1.21.226-2.83.569-3.6.762-.77.193-3.02.744-5 1.225-1.98.481-3.69.963-3.8 1.07-.275.269 1.693-.093 4.8-.883 4.823-1.226 7.51-1.788 13.4-2.801 2.099-.361 2.65-.546 1.6-.538-.88.007-2.41.179-3.4.383m48.2-.044c.88.182 1.96.329 2.4.326l.8-.005-.8-.344c-.44-.189-1.52-.336-2.4-.326l-1.6.018 1.6.331m52.233-.274c.412.368 2.767 1.451 2.767 1.272 0-.231-2.218-1.421-2.647-1.421-.157 0-.211.067-.12.149m-48.8.8c.092.082 1.067.258 2.167.392 1.346.164 1.739.124 1.2-.121-.761-.346-3.717-.584-3.367-.271m5.567 1.054c2.37.526 5.332 1.219 6.8 1.59 1.307.33 1.984.518 5.9 1.635.825.235 1.95.509 2.5.608l1 .181-.968-.421c-.994-.432-5.173-1.602-9.432-2.64-1.32-.322-3.051-.758-3.846-.971-.796-.212-1.876-.364-2.4-.339-.706.034-.59.127.446.357M118 48.884c-.77.455-2.21 1.274-3.2 1.82-2.639 1.456-8.8 5.339-8.8 5.546 0 .253 1.528-.583 3.402-1.861 1.642-1.12 3.141-2 6.998-4.11 1.21-.662 2.555-1.446 2.989-1.742 1.233-.84.17-.574-1.389.347m161.811-.347c.434.296 1.779 1.08 2.989 1.742 4.231 2.314 5.335 2.987 10.349 6.304 7.532 4.982 12.025 8.383 18.707 14.163 3.695 3.195 3.86 2.551-2.222 8.62l-5.166 5.155-4.534-3.783c-7.284-6.077-18.11-13.896-18.583-13.422-.1.1 1.175 1.027 2.833 2.061 1.658 1.034 3.24 2.1 3.516 2.37.275.27 1.4 1.102 2.5 1.848 3.354 2.276 11.507 8.84 13.046 10.505 1.109 1.199 1.646.847 7.073-4.633 5.304-5.357 5.739-5.957 4.738-6.547-.436-.258-3.544-2.903-6.013-5.12-.629-.565-3.572-2.894-6.781-5.366-3.223-2.484-14.31-9.794-17.463-11.515-1.21-.661-2.88-1.588-3.712-2.06-1.676-.952-2.511-1.162-1.277-.322M155.6 50.4c-.824.264-.859.326-.2.354.44.019 1.07-.141 1.4-.354.701-.453.214-.453-1.2 0m-65.615 1.632L88.6 53.263l1.288-.85c1.142-.754 2.005-1.613 1.62-1.613-.076 0-.761.554-1.523 1.232M153 51.2c-.771.331-.769.345.076.372.482.015.988-.152 1.124-.372.292-.473-.099-.473-1.2 0m154.605-.12c.003.176.633.727 1.4 1.224 1.798 1.164 1.795.896-.005-.477-.77-.587-1.398-.924-1.395-.747M247.8 52c.136.22.642.387 1.124.372.845-.027.847-.041.076-.372-1.101-.473-1.492-.473-1.2 0M85.734 55.197c-1.356 1.083-2.59 2.17-2.741 2.415-.152.245 1.003-.581 2.566-1.834 2.467-1.98 3.151-2.62 2.741-2.564-.055.007-1.21.899-2.566 1.983M252.4 53.6c.33.213.87.388 1.2.388.533 0 .533-.043 0-.388-.33-.213-.87-.388-1.2-.388-.533 0-.533.043 0 .388m58.4-.282c0 .102 1.575 1.45 3.5 2.995 1.925 1.545 3.95 3.216 4.5 3.714 2.154 1.952 2.917 2.553 2.65 2.088-.474-.825-10.65-9.23-10.65-8.797m-52.346 2.469c.336.336 3.146 1.429 3.146 1.224 0-.11-.652-.473-1.449-.806-1.476-.616-2.033-.754-1.697-.418m-156.073 2.737c-1.66 1.142-3.73 2.613-4.6 3.27-2.017 1.524-7.043 5.482-7.626 6.006-1.528 1.373-5.581 4.867-6.044 5.211-.305.225-.45.682-.323 1.013.252.656 10.783 10.776 11.214 10.776.145 0 2.441-1.825 5.103-4.055 2.662-2.231 5.52-4.526 6.352-5.1.832-.575 1.519-1.191 1.528-1.371.019-.409-5.348 3.731-9.547 7.366-1.754 1.518-3.338 2.76-3.52 2.76-.504 0-10.518-10.148-10.518-10.66 0-.383 2.29-2.507 6.999-6.491 1.96-1.658 9.105-7.021 11.701-8.782 1.375-.933 2.5-1.78 2.5-1.882 0-.277.027-.293-3.219 1.939m34.419-1.245c-5.136 2.393-10.017 4.838-9.897 4.958.075.074 1.927-.727 4.117-1.782a1750.39 1750.39 0 016.18-2.962c1.21-.574 2.02-1.046 1.8-1.049-.22-.002-1.21.373-2.2.835m130.987 2.91c3.292 1.634 6.06 2.897 6.151 2.806.203-.203-11.127-5.798-11.715-5.786-.233.005 2.271 1.346 5.564 2.98M79.8 60.233l-2.4 2.232 2.5-2.092c2.223-1.861 2.743-2.375 2.4-2.372-.055 0-1.18 1.005-2.5 2.232m45.3 2.796c-.605.328-1.1.681-1.1.784 0 .386.632.144 1.6-.613 1.189-.93 1.011-.991-.5-.171m-51.059 2.235c-1.407 1.343-2.372 2.373-2.143 2.289.595-.219 5.394-4.755 5.016-4.742-.173.007-1.466 1.11-2.873 2.453m250.122-.464c1.163 1.1 2.221 2 2.352 2 .13 0-.715-.9-1.878-2-1.163-1.1-2.221-2-2.352-2-.13 0 .715.9 1.878 2m-48.963-.833c.963.785 1.6 1.041 1.6.643 0-.104-.585-.475-1.3-.824l-1.3-.634 1 .815m-154.4 1.565c-3.233 1.887-12.4 8.012-12.4 8.285 0 .11 1.845-1.034 4.1-2.543 2.255-1.509 5.675-3.688 7.6-4.843 2.964-1.779 3.921-2.461 3.4-2.424-.055.004-1.27.69-2.7 1.525m157-.089c.956.739 3 1.842 3 1.62 0-.24-3.141-2.265-3.491-2.25-.17.007.051.29.491.63m51.491 4.297c.94.957 1.787 1.673 1.883 1.592.231-.195-2.843-3.332-3.264-3.332-.181 0 .441.783 1.381 1.74m-259.893-.138c-1.04 1.149-.578 1.278.516.144.503-.52.756-.946.562-.946-.194 0-.679.361-1.078.802m-2.801 2.993c-.438.514-2.121 2.39-3.739 4.17-1.619 1.779-2.744 3.235-2.5 3.235.243 0 .444-.135.446-.3.005-.293 1.494-1.971 5.142-5.791.993-1.04 1.725-1.971 1.627-2.069-.098-.099-.538.241-.976.755m265.87.166c.193.522 3.99 4.516 4.145 4.36.072-.072-.861-1.163-2.073-2.425-1.213-1.262-2.145-2.133-2.072-1.935m5.558 6.27c.756.897 1.456 1.566 1.555 1.486.099-.079-.52-.813-1.375-1.63L336.65 77.4l1.375 1.631M57.943 82.5c-.953 1.155-1.824 2.19-1.938 2.3-.571.556-1.276 1.6-1.08 1.6.123 0 1.327-1.35 2.675-3 1.348-1.65 2.367-3 2.263-3-.104 0-.968.945-1.92 2.1m282.882-.2c.486.605 1.775 2.225 2.866 3.6 1.09 1.375 2.078 2.5 2.194 2.5.254 0 .158-.129-3.04-4.1-1.373-1.705-2.588-3.1-2.7-3.1-.112 0 .194.495.68 1.1m-21.012 6.887l-5.577 5.587.982 1.11c.54.61 1.075 1.201 1.19 1.313 2.35 2.304 9.975 12.446 13.76 18.302 1.742 2.695 3.24 4.826 3.329 4.737.16-.16-5.011-8.11-7.828-12.036-1.975-2.753-5.758-7.465-8.6-10.713l-2.375-2.714 5.334-5.386c2.934-2.963 5.473-5.387 5.643-5.387.733 0 11.071 12.741 14.686 18.1.705 1.045 1.369 1.9 1.477 1.9.855 0-9.82-13.915-14.192-18.5-2.266-2.376-1.345-2.809-7.829 3.687M71.599 86.059a380.851 380.851 0 01-2.199 2.503c-2.42 2.683-7.379 9.046-9.38 12.038-1.993 2.978-.906 1.735 2.621-3 3.919-5.259 10.623-13.2 11.144-13.2.307 0 10.615 10.288 10.615 10.594 0 .164-1.054 1.493-2.341 2.952-5.042 5.714-16.079 20.967-15.553 21.493.092.093 1.404-1.76 2.915-4.116 3.365-5.247 6.713-9.733 11.631-15.58 2.061-2.451 3.748-4.62 3.748-4.819C84.8 94.45 74.245 84 73.766 84c-.202 0-1.177.927-2.167 2.059M51.827 90.2c-.587.77-.924 1.398-.747 1.395.176-.003.727-.633 1.224-1.4 1.164-1.798.896-1.795-.477.005m294.913-.284c.493.693 1.104 1.388 1.357 1.544.253.157.057-.283-.437-.976-.493-.693-1.104-1.388-1.357-1.544-.253-.157-.057.283.437.976m2.497 3.284c1.159 1.796 1.163 1.801 1.161 1.367-.001-.202-.466-.907-1.033-1.567l-1.031-1.2.903 1.4M46.376 98.035c-1.781 2.66-3.174 4.901-3.094 4.98.08.08 1.619-2.096 3.42-4.835 1.802-2.739 3.194-4.98 3.095-4.98-.1 0-1.639 2.176-3.421 4.835M350.822 95.4c.005.529 1.12 1.991 1.347 1.765.097-.097-.167-.624-.587-1.171-.421-.547-.762-.814-.76-.594m1.578 2.322c0 .258 4.683 7.506 5.09 7.878.449.411-.836-1.799-2.76-4.747-2.122-3.249-2.33-3.529-2.33-3.131M187.381 114.2c0 8.36.053 11.837.118 7.726.065-4.11.065-10.95.001-15.2-.065-4.249-.118-.886-.119 7.474m15.019.08c-.11 8.404-.063 15.143.105 14.975.168-.168.258-7.044.2-15.28L202.599 99l-.199 15.28M57.673 103.8c-.251.55-.39 1-.31 1 .08 0 .44-.45.8-1 .361-.55.5-1 .31-1-.189 0-.55.45-.8 1m284.689 1.329c.243.455.639.948.88 1.097.314.194.312.036-.004-.555-.243-.455-.639-.948-.88-1.097-.314-.194-.312-.036.004.555m-286.276.971c-.244.495-.83 1.485-1.304 2.2-.473.715-.778 1.3-.678 1.3.101 0 .84-.99 1.643-2.2.804-1.21 1.308-2.2 1.121-2.2-.187 0-.539.405-.782.9m-15.5 1.2l-.634 1.3.815-1c.785-.963 1.041-1.6.643-1.6-.104 0-.475.585-.824 1.3m303.459.4c.26.495.956 1.62 1.546 2.5.591.88 1.858 2.991 2.816 4.692.959 1.7 1.808 3.026 1.888 2.947.079-.08-.225-.796-.675-1.592l-1.608-2.838c-2.237-3.948-5.543-8.706-3.967-5.709m14.364-.2c.005.165.376.75.824 1.3l.815 1-.634-1.3c-.603-1.235-1.025-1.655-1.005-1m-319.423 2.6l-.634 1.3.815-1c.785-.963 1.041-1.6.643-1.6-.104 0-.475.585-.824 1.3m13.328 2.194c-2.101 3.442-3.57 6.183-3.404 6.349.081.081.511-.526.957-1.348 1.564-2.886 2.634-4.705 3.423-5.818.439-.618.715-1.205.614-1.306-.1-.101-.816.855-1.59 2.123m307.695-1.994c.005.165.376.75.824 1.3l.815 1-.634-1.3c-.603-1.235-1.025-1.655-1.005-1m-323.988 5.321c-.714 1.339-1.231 2.502-1.15 2.583.081.081.731-.948 1.445-2.288.713-1.34 1.231-2.502 1.15-2.583-.081-.081-.731.949-1.445 2.288m327.18.479c.003.312 3.57 7.242 3.583 6.961.02-.415-3.205-7.061-3.426-7.061-.087 0-.158.045-.157.1m-10.593 6.717c1.239 2.47 2.424 4.942 2.634 5.493.209.55.477.904.596.786.259-.259-4.55-10.195-5.098-10.533-.211-.131.63 1.784 1.868 4.254M47.923 120.1c-.814 1.287-4.662 9.332-5.596 11.7a131.81 131.81 0 01-1.399 3.4 67.97 67.97 0 00-.915 2.2 61.08 61.08 0 01-.733 1.8c-.833 1.949-2.151 6.062-1.993 6.22.088.088.387-.511.665-1.33 1.218-3.593 2.378-6.609 3.608-9.386.462-1.042.84-1.983.84-2.09 0-.318 2.229-5.087 4.389-9.393 1.918-3.821 2.378-5.089 1.134-3.121m17.585.8c-.321.495-.801 1.35-1.068 1.9-.68 1.403.554-.094 1.401-1.7.698-1.326.482-1.456-.333-.2m269.299 2.1c.692 1.32 1.443 2.58 1.669 2.8.59.575-1.485-3.445-2.27-4.4-.362-.44-.092.28.601 1.6m-272.223 3.06c-.589 1.177-.888 1.96-.665 1.74.659-.65 2.137-3.478 1.927-3.687-.105-.106-.674.77-1.262 1.947m274.216.476c0 .075.859 1.83 1.908 3.9 1.646 3.247 5.045 10.987 5.85 13.321.143.417.346.672.451.568.177-.177-1.059-3.49-2.509-6.725-3.199-7.137-5.7-11.991-5.7-11.064m-276.911 4.751c-2.412 4.955-4.376 9.56-4.165 9.771.074.074.738-1.259 1.475-2.962a220.575 220.575 0 012.86-6.273c.836-1.747 1.459-3.238 1.385-3.313-.075-.074-.774 1.175-1.555 2.777m296.129-1.636c-.038.529 1.239 3.225 1.434 3.03.113-.113-.159-.897-.605-1.743-.447-.846-.82-1.425-.829-1.287m1.582 3.954c0 .223.159.718.353 1.1.423.832 1.401 3.209 2.59 6.295.338.88.625 1.383.636 1.119.012-.265-.181-.985-.429-1.6-.527-1.311-.769-1.932-1.957-5.019-.853-2.215-1.193-2.755-1.193-1.895m14.828 3.871c-.015.482.152.988.372 1.124.473.292.473-.099 0-1.2-.331-.771-.345-.769-.372.076m-345.982-.009c-.025.257-.162.797-.305 1.2-.201.569-.147.63.238.275.273-.251.41-.791.305-1.2-.105-.408-.212-.532-.238-.275m334.782 5.609c.09 1.039.716 1.92.744 1.048.015-.482-.152-.988-.372-1.124-.22-.136-.387-.102-.372.076M23.851 145.56c-.358 1.095-.64 2.226-.626 2.515.014.289.375-.539.802-1.84.427-1.301.709-2.432.626-2.515-.083-.083-.444.745-.802 1.84m321.361-.36c0 .33.175.87.388 1.2.345.533.388.533.388 0 0-.33-.175-.87-.388-1.2-.345-.533-.388-.533-.388 0m16.816.276c.09 1.039.716 1.92.744 1.048.015-.482-.152-.988-.372-1.124-.22-.136-.387-.102-.372.076m13.414 1.15c.537 2.137 1.306 4.353 1.331 3.836.035-.695-1.173-4.862-1.409-4.862-.099 0-.063.462.078 1.026m-322.596 1.241c-.025.257-.162.797-.305 1.2-.201.569-.147.63.238.275.273-.251.41-.791.305-1.2-.105-.408-.212-.532-.238-.275m309.982.009c.09 1.039.716 1.92.744 1.048.015-.482-.152-.988-.372-1.124-.22-.136-.387-.102-.372.076M35.8 149.2c-.15.473-.183.95-.073 1.06.11.11.323-.187.473-.66.15-.473.183-.95.073-1.06-.11-.11-.323.187-.473.66m-13.151.215a3.854 3.854 0 00-.215 1.318c.019.367.193.136.387-.513.377-1.262.244-1.887-.172-.805m324.179.461c-.015.482.152.988.372 1.124.473.292.473-.099 0-1.2-.331-.771-.345-.769-.372.076m-294.782.391c-.025.257-.162.797-.305 1.2-.201.569-.147.63.238.275.273-.251.41-.791.305-1.2-.105-.408-.212-.532-.238-.275m311.588.133c.012.33.177.96.366 1.4l.344.8.022-.8c.012-.44-.153-1.07-.366-1.4-.345-.533-.385-.533-.366 0m-230.134.698c2.255.072 5.945.072 8.2 0 2.255-.071.41-.129-4.1-.129s-6.355.058-4.1.129M35 152c-.15.473-.183.95-.073 1.06.11.11.323-.187.473-.66.15-.473.183-.95.073-1.06-.11-.11-.323.187-.473.66m342.044.2c.329 1.471.558 1.79.55.767-.003-.422-.189-1.037-.412-1.367-.297-.438-.334-.276-.138.6m-355.215.429c-.148.586-.191 1.143-.097 1.237.095.094.292-.308.439-.895.148-.586.191-1.143.097-1.237-.095-.094-.292.308-.439.895m325.799-.353c-.015.482.152.988.372 1.124.473.292.473-.099 0-1.2-.331-.771-.345-.769-.372.076m-152.928.021a73.8 73.8 0 005.8 0c1.595-.076.29-.138-2.9-.138s-4.495.062-2.9.138m-144.213 2.999c-2.116 7.325-3.457 13.226-3.17 13.951.125.314.234.141.251-.401.018-.524.226-1.694.464-2.6.237-.905.612-2.366.833-3.246.764-3.049 1.229-4.805 1.535-5.8 1.1-3.582 1.307-4.426 1.127-4.606-.111-.111-.579 1.105-1.04 2.702m313.947-2.096c.012.33.177.96.366 1.4l.344.8.022-.8c.012-.44-.153-1.07-.366-1.4-.345-.533-.385-.533-.366 0m-330.161 1.353c-.15.392-.262 1.013-.248 1.38.017.442.156.341.412-.299.212-.531.324-1.152.248-1.38-.076-.227-.261-.093-.412.299m314.127.357c0 .573.187 1.158.416 1.3.273.169.322-.133.144-.876-.368-1.533-.56-1.678-.56-.424m29.256-.51c0 .33.155.96.344 1.4.217.504.344.578.344.2 0-.33-.155-.96-.344-1.4-.217-.504-.344-.578-.344-.2m-356.627 1.429c-.148.586-.191 1.143-.097 1.237.095.094.292-.308.439-.895.148-.586.191-1.143.097-1.237-.095-.094-.292.308-.439.895m344.227.371c0 .44.155 1.16.344 1.6l.344.8v-.8c0-.44-.155-1.16-.344-1.6l-.344-.8v.8m-331.827 1.629c-.148.586-.178 1.155-.068 1.265.11.11.32-.279.468-.865.147-.587.177-1.156.067-1.266-.11-.11-.32.279-.467.866m315.882-.029c.117.66.597 2.64 1.065 4.4.877 3.292 1.176 4.726 2.42 11.6.398 2.2.742 3.405.764 2.677.022-.727-.126-2.077-.328-3-.202-.922-.571-2.757-.82-4.077-.604-3.206-2.865-12.348-3.115-12.6-.11-.11-.103.34.014 1m29.145-.2c0 .33.155.96.344 1.4.217.504.344.578.344.2 0-.33-.155-.96-.344-1.4-.217-.504-.344-.578-.344-.2m-358.227 1.429c-.148.586-.178 1.155-.068 1.265.11.11.32-.279.468-.865.147-.587.177-1.156.067-1.266-.11-.11-.32.279-.467.866m345.827.371c0 .44.155 1.16.344 1.6l.344.8v-.8c0-.44-.155-1.16-.344-1.6l-.344-.8v.8M32.6 161.2c-.152.691-.186 1.347-.076 1.457.11.11.324-.366.476-1.057.152-.691.186-1.347.076-1.457-.11-.11-.324.366-.476 1.057m346.656.2c0 .44.155 1.16.344 1.6l.344.8v-.8c0-.44-.155-1.16-.344-1.6l-.344-.8v.8M19.45 162.85c-.333 1.667-.01 1.99.35.35.152-.691.193-1.341.091-1.442-.102-.102-.3.389-.441 1.092m347.406.15c0 .44.155 1.16.344 1.6l.344.8v-.8c0-.44-.155-1.16-.344-1.6l-.344-.8v.8m-335.034 1.622c-.15.803-.184 1.55-.074 1.66.11.11.324-.457.474-1.26.151-.803.184-1.549.074-1.659-.11-.11-.323.456-.474 1.259M268.94 167.6c0 1.87.069 2.635.153 1.7.084-.935.084-2.465 0-3.4s-.153-.17-.153 1.7m111.128-2.2c-.006.44.143 1.16.332 1.6.438 1.019.438-.032 0-1.4-.257-.804-.323-.843-.332-.2m-361.446 1.622c-.15.803-.184 1.55-.074 1.66.11.11.324-.457.474-1.26.151-.803.184-1.549.074-1.659-.11-.11-.323.456-.474 1.259m349.058-.222c0 .55.144 1.45.32 2l.32 1v-1c0-.55-.144-1.45-.32-2l-.32-1v1m-336.416.65a35.01 35.01 0 01-.275 2.2c-.193 1.236-.174 1.267.219.364.237-.542.36-1.532.275-2.2-.092-.717-.181-.866-.219-.364M380.868 170c-.006.55.143 1.36.332 1.8l.344.8-.012-.8c-.006-.44-.156-1.25-.332-1.8l-.32-1-.012 1m-334.192.81c-.146.545-.248 1.53-.227 2.19.031.957.11.836.393-.6.387-1.967.26-3.183-.166-1.59m321.81.39c-.003.77.138 1.85.314 2.4.45 1.404.465-.063.023-2.2l-.331-1.6-.006 1.4m-350.632.754c-.154.964-.196 1.837-.093 1.94.269.269.754-2.549.546-3.172-.095-.286-.299.268-.453 1.232m12.237 2.646c-2.626 19.075-2.574 35.943.159 51 .598 3.296.485 1.428-.266-4.4-1.894-14.684-1.705-32.861.477-46.009.238-1.434.364-2.964.279-3.4-.084-.435-.376.829-.649 2.809m15.791.95c-.155.743-.262 1.823-.238 2.4.029.692.166.437.403-.75.198-.99.305-2.07.238-2.4-.066-.33-.247.008-.403.75m335.746.083c.016.752.192 1.727.392 2.167.245.539.285.146.121-1.2-.29-2.381-.552-2.876-.513-.967m-12.245 1.167c.067 1.21.365 4.63.662 7.6 1.005 10.028.631 26.885-.834 37.6-.726 5.306-.854 7.329-.266 4.2 2.597-13.82 2.885-34.637.68-49.2l-.363-2.4.121 2.2m-352.118-.4c-.04.55-.166 1.72-.28 2.6-.179 1.394-.151 1.473.223.614.237-.542.363-1.712.281-2.6-.082-.888-.183-1.164-.224-.614m336.617 4.4c.122 1.65.289 3.075.37 3.167.276.31.055-3.759-.269-4.967-.197-.732-.236-.031-.101 1.8m-308.788.2c-.157.88-.265 2.32-.241 3.2.038 1.378.094 1.267.402-.8.411-2.754.271-4.828-.161-2.4m337.385 1.6c-.018 1.1.116 2.72.298 3.6l.331 1.6.006-1.4c.004-.77-.13-2.39-.297-3.6l-.304-2.2-.034 2m-366.217 4.542c-.171 2.499-.227 4.626-.126 4.728.258.257.779-7.054.591-8.274-.085-.548-.294 1.048-.465 3.546M354.69 190c.118 2.97.281 5.475.362 5.567.28.316.077-6.971-.249-8.967-.208-1.267-.249-.02-.113 3.4m-310.431.66c-.318 3.763-.265 15.874.084 19.14.142 1.32.257-3.135.257-9.9 0-6.765-.019-12.3-.041-12.3-.023 0-.158 1.377-.3 3.06m147.66.438c1.825.074 4.705.074 6.4-.001 1.695-.075.201-.136-3.319-.135-3.52 0-4.906.062-3.081.136M383.37 199.6c0 4.73.058 6.665.128 4.3.071-2.365.071-6.235 0-8.6-.07-2.365-.128-.43-.128 4.3m-28.489 6.04a287.298 287.298 0 01-.268 5.4c-.18 3.053-.173 3.086.213.96.22-1.21.341-3.64.268-5.4-.101-2.462-.15-2.684-.213-.96M16.283 211.6c.119 2.53.284 4.675.367 4.767.277.307.084-5.343-.252-7.367-.222-1.341-.26-.485-.115 2.6m179.397-1.302c1.914.073 5.154.073 7.2 0 2.046-.072.48-.132-3.48-.133-3.96 0-5.634.059-3.72.133m13.22.378c.385.1 1.015.1 1.4 0 .385-.101.07-.183-.7-.183s-1.085.082-.7.183m173.781 3.08c-.154 1.076-.258 2.696-.229 3.6.036 1.143.159.729.404-1.356.4-3.398.256-5.24-.175-2.244M44.901 215.4c-.004 1.1.131 2.54.299 3.2l.305 1.2.013-1.2c.006-.66-.128-2.1-.3-3.2l-.311-2-.006 2m308.976 2.35c-.17 1.513-.226 2.835-.123 2.937.289.289.731-3.192.573-4.511-.087-.723-.26-.118-.45 1.574m44.923 1.074c0 .453.18.712.4.576.22-.136.4-.507.4-.824 0-.317-.18-.576-.4-.576-.22 0-.4.371-.4.824M17.076 221c.129 1.32.3 2.475.38 2.567.307.354.069-3.41-.264-4.167-.223-.508-.266.076-.116 1.6m28.567.469c-.024.699.147 2.229.378 3.4 1.376 6.957 1.478 7.428 2.801 12.931.889 3.702 2.221 7.902 1.775 5.6-.234-1.209-.387-1.849-1.576-6.6-.357-1.43-.806-3.23-.996-4-.342-1.383-.788-3.743-1.813-9.6-.296-1.691-.544-2.446-.569-1.731m336.239.481c-.155.743-.262 1.823-.238 2.4.029.692.166.437.403-.75.198-.99.305-2.07.238-2.4-.066-.33-.247.007-.403.75m-28.612.3a32.272 32.272 0 01-.281 2.6c-.193 1.236-.174 1.267.219.364.236-.542.363-1.712.281-2.6-.121-1.312-.162-1.381-.219-.364M17.675 225.8c.011.44.157 1.34.325 2l.305 1.2.02-1.2c.01-.66-.136-1.56-.325-2l-.344-.8.019.8m334.189 4.205c-.899 4.632-1.619 7.712-2.665 11.395-.25.88-.536 2.05-.635 2.6-.661 3.657 1.728-4.647 2.992-10.4.266-1.21.67-2.939.899-3.841.229-.903.355-2.071.281-2.596-.075-.524-.467.754-.872 2.842m29.114-1.827c-.151.803-.184 1.549-.074 1.659.11.11.323-.456.474-1.259.15-.803.184-1.55.074-1.66-.11-.11-.324.457-.474 1.26M31.059 230.6c.134 1.1.31 2.075.392 2.167.313.35.075-2.606-.271-3.367-.245-.539-.285-.146-.121 1.2m336.83-.6a8.054 8.054 0 00-.247 2c.026.861.084.814.416-.34.212-.736.323-1.636.248-2-.098-.466-.22-.367-.417.34m-349.421.8c.02 1.039.65 2.746.664 1.8.006-.44-.143-1.16-.332-1.6-.211-.49-.339-.568-.332-.2m261.625 2c0 .77.082 1.085.183.7.1-.385.1-1.015 0-1.4-.101-.385-.183-.07-.183.7m100.18-.247c-.15.392-.262 1.013-.248 1.38.017.442.156.341.412-.299.212-.531.324-1.152.248-1.38-.076-.227-.261-.093-.412.299M31.668 233.8c.006.44.156 1.25.332 1.8l.32 1 .012-1c.006-.55-.143-1.36-.332-1.8l-.344-.8.012.8m335.332 1c-.152.691-.186 1.347-.076 1.457.11.11.324-.366.476-1.057.152-.691.186-1.347.076-1.457-.11-.11-.324.366-.476 1.057m-347.766.4c.012.33.177.96.366 1.4l.344.8.022-.8c.012-.44-.153-1.07-.366-1.4-.345-.533-.385-.533-.366 0m360.195 1.829c-.148.586-.191 1.143-.097 1.237.095.094.292-.308.439-.895.148-.586.191-1.143.097-1.237-.095-.094-.292.308-.439.895m-346.961.371c.006.44.156 1.25.332 1.8l.32 1 .012-1c.006-.55-.143-1.36-.332-1.8l-.344-.8.012.8m333.732 1c-.152.691-.186 1.347-.076 1.457.11.11.324-.366.476-1.057.152-.691.186-1.347.076-1.457-.11-.11-.324.366-.476 1.057m-346.166.8c.012.33.177.96.366 1.4l.344.8.022-.8c.012-.44-.153-1.07-.366-1.4-.345-.533-.385-.533-.366 0m358.595 1.429c-.148.586-.191 1.143-.097 1.237.095.094.292-.308.439-.895.148-.586.191-1.143.097-1.237-.095-.094-.292.308-.439.895M33.234 241c-.012.44.153 1.07.366 1.4.514.795.514-.204 0-1.4l-.344-.8-.022.8m332.166.6c-.152.691-.186 1.347-.076 1.457.11.11.324-.366.476-1.057.152-.691.186-1.347.076-1.457-.11-.11-.324.366-.476 1.057m-344.544.8c0 .33.155.96.344 1.4.217.504.344.578.344.2 0-.33-.155-.96-.344-1.4-.217-.504-.344-.578-.344-.2m215.922 1.1L235.4 245l1.5-1.378c.825-.759 1.5-1.434 1.5-1.5 0-.306-.338-.018-1.622 1.378m141.051.329c-.148.586-.178 1.155-.068 1.265.11.11.32-.279.468-.865.147-.587.177-1.156.067-1.266-.11-.11-.32.279-.467.866M34.034 244c.012.33.177.96.366 1.4l.344.8.022-.8c.012-.44-.153-1.07-.366-1.4-.345-.533-.385-.533-.366 0m330.595.629c-.148.586-.178 1.155-.068 1.265.11.11.32-.279.468-.865.147-.587.177-1.156.067-1.266-.11-.11-.32.279-.467.866m30.271-.741c-.568.203-.689 1.312-.143 1.312.337 0 .988-1.213.752-1.402-.06-.049-.334-.008-.609.09m-344.072 1.188c.09 1.039.716 1.92.744 1.048.015-.482-.152-.988-.372-1.124-.22-.136-.387-.102-.372.076m-29.172.524c0 .33.155.96.344 1.4.217.504.344.578.344.2 0-.33-.155-.96-.344-1.4-.217-.504-.344-.578-.344-.2m325.773 1.629c-.371 1.132-.586 2.147-.479 2.255.108.107.477-.753.821-1.913.814-2.74.534-3.021-.342-.342m29.6-.2c-.148.586-.191 1.143-.097 1.237.095.094.292-.308.439-.895.148-.586.191-1.143.097-1.237-.095-.094-.292.308-.439.895m-342.201.047c-.015.482.152.988.372 1.124.473.292.473-.099 0-1.2-.331-.771-.345-.769-.372.076m329.001.353c-.148.586-.178 1.155-.068 1.265.11.11.32-.279.468-.865.147-.587.177-1.156.067-1.266-.11-.11-.32.279-.467.866m-312.217.171c0 .33.175.87.388 1.2.345.533.388.533.388 0 0-.33-.175-.87-.388-1.2-.345-.533-.388-.533-.388 0m-29.178 1c-.012.44.153 1.07.366 1.4.514.795.514-.204 0-1.4l-.344-.8-.022.8m353.665 1.79c-.703 2.252-.586 2.968.144.883.333-.95.549-1.897.48-2.104-.069-.208-.35.342-.624 1.221M52.412 250c0 .33.175.87.388 1.2.345.533.388.533.388 0 0-.33-.175-.87-.388-1.2-.345-.533-.388-.533-.388 0m293.788.8c-.15.473-.183.95-.073 1.06.11.11.323-.187.473-.66.15-.473.183-.95.073-1.06-.11-.11-.323.187-.473.66m-309.772 1.476c-.015.482.152.988.372 1.124.473.292.473-.099 0-1.2-.331-.771-.345-.769-.372.076m326.018-.409c-.025.257-.162.797-.305 1.2-.201.569-.147.63.238.275.273-.251.41-.791.305-1.2-.105-.408-.212-.532-.238-.275m-338.659 1.334c.482 1.904 2.179 6.597 2.196 6.07.019-.594-1.928-6.55-2.245-6.866-.112-.112-.089.246.049.796m164.165-.287c.174.172 2.37.261 4.882.198l4.566-.116-4.882-.198c-2.684-.109-4.739-.057-4.566.116m11.561.181c1.163.081 2.963.081 4-.002 1.038-.082.087-.148-2.113-.147-2.2.001-3.049.068-1.887.149m175.138 2.065c-.358 1.095-.64 2.226-.626 2.515.014.289.375-.539.802-1.84.427-1.301.709-2.432.626-2.515-.083-.083-.444.745-.802 1.84m-337.423-.484c-.015.482.152.988.372 1.124.473.292.473-.099 0-1.2-.331-.771-.345-.769-.372.076M54 254.284c0 .23.291 1.115.648 1.967.356.852.811 1.979 1.011 2.504.2.526.448.871.552.768.103-.104-.28-1.344-.852-2.756-1.085-2.68-1.359-3.181-1.359-2.483m307.262 1.188c-1.084 3.191-2.338 6.501-3.383 8.928-1.41 3.275-1.881 4.531-1.749 4.663.178.179 3.563-7.84 4.67-11.063.264-.77.663-1.787.887-2.261.223-.473.336-1.071.25-1.328-.086-.257-.389.22-.675 1.061m-323.243 1.209c-.01.265.183.985.431 1.6a143.377 143.377 0 011.742 4.519c1.103 2.98 4.309 10.033 4.481 9.86.089-.089-.316-1.218-.899-2.511-1.136-2.516-2.036-4.599-2.615-6.049-.197-.495-.523-1.305-.722-1.8-.2-.495-.821-2.07-1.381-3.5-.559-1.43-1.026-2.383-1.037-2.119m18.407 3.624c-.014.278.143.818.349 1.2.207.382 1.49 2.997 2.851 5.811 1.362 2.813 2.536 5.055 2.61 4.981.073-.073-.903-2.285-2.171-4.915a929.613 929.613 0 01-2.959-6.182c-.36-.77-.666-1.173-.68-.895m285.18 2.198c-3.538 7.95-11.976 22.979-14.138 25.182-.278.283-1.117 1.415-1.863 2.515-2.022 2.979-6.941 9.144-10.498 13.154-.851.96-1.112.608 5.127 6.94 5.607 5.691 5.114 5.512 7.617 2.769 5.398-5.919 15.681-19.463 14.776-19.463-.108 0-.942 1.096-1.852 2.436-4.829 7.112-14.481 18.929-15.25 18.672-.187-.062-2.666-2.436-5.508-5.276l-5.168-5.162 1.22-1.435c7.136-8.393 12.981-16.402 17.499-23.977 3.566-5.978 9.512-17.912 9.12-18.304-.082-.081-.568.796-1.082 1.949m10.81 13.823c-2.531 5.001-5.78 10.822-7.166 12.841-1.433 2.087-2.629 4.355-1.706 3.233.896-1.088 5.278-8.305 6.8-11.2 2.557-4.865 4.906-9.684 4.78-9.809-.077-.077-1.295 2.144-2.708 4.935m-289.233-1.989c1.952 3.892 9.844 16 12.035 18.463l1.245 1.4-.912-1.4c-.502-.77-1.032-1.49-1.179-1.6-.513-.385-8.681-13.023-9.953-15.4-1.507-2.815-2.509-4.001-1.236-1.463m303.384 1.746c-.403.945-.87 2.032-1.037 2.417-.167.385-.225.7-.129.7.272 0 2.255-4.477 2.066-4.666-.092-.092-.497.605-.9 1.549m-334.145-.379c-.032.438 4.047 8.76 4.212 8.595.076-.076-.835-2.109-2.026-4.519-1.19-2.409-2.174-4.243-2.186-4.076m106.706.196c5.35.063 13.99.063 19.2 0 5.209-.064.832-.115-9.728-.115s-14.823.052-9.472.115m82.662.6c-.317.862-.406 31.434-.09 31.238.165-.102.3-7.18.3-15.728 0-12.06.112-15.589.5-15.745.392-.158.389-.209-.013-.233-.281-.018-.595.193-.697.468m-175.39.059c0 .339 2.476 4.862 2.869 5.241.228.22-.237-.905-1.032-2.5-1.244-2.493-1.837-3.378-1.837-2.741m140.4 15.721c-.11 8.624-.063 15.543.105 15.375.167-.167.257-7.223.2-15.68L187 276.6l-.2 15.68m176.464-9.416c-.915 1.798-1.603 3.33-1.528 3.405.075.075.885-1.335 1.8-3.133s1.603-3.33 1.528-3.405c-.075-.075-.885 1.335-1.8 3.133M49.6 282.49c0 .808 9.202 15.507 9.709 15.509.17 0-.953-1.88-2.496-4.18-1.543-2.299-3.167-4.819-3.609-5.6l-1.652-2.919c-1.066-1.884-1.952-3.16-1.952-2.81m-11.414 5.01c.349.715.72 1.3.824 1.3.398 0 .142-.637-.643-1.6l-.815-1 .634 1.3M379.6 287c0 .33.18.6.4.6.22 0 .4-.27.4-.6 0-.33-.18-.6-.4-.6-.22 0-.4.27-.4.6m-338.25 6c.324.66.881 1.56 1.239 2 .608.748.612.722.061-.4-.324-.66-.881-1.56-1.239-2-.608-.748-.612-.722-.061.4m316.05.6c-.341.66-.531 1.2-.421 1.2.11 0 .48-.54.821-1.2.341-.66.531-1.2.421-1.2-.11 0-.48.54-.821 1.2m-280.523 1.543c.487.692 1.48 1.886 5.829 7.012 2.064 2.433 2.468 1.519-3.453 7.799-5.276 5.595-5.489 5.733-6.685 4.346-4.05-4.693-7.738-9.223-9.978-12.255-2.859-3.868-3.905-4.925-1.728-1.745 3.71 5.418 12.079 15.3 12.958 15.3.659 0 10.98-10.713 10.98-11.397 0-.295-.138-.596-.306-.67-.169-.073-1.989-2.158-4.044-4.633-3.371-4.058-4.962-5.731-3.573-3.757M44.412 298c.679 1.333 3.571 5.6 3.795 5.6.206 0-3.333-5.607-3.913-6.2-.216-.22-.163.05.118.6m309.627 1.024c-.462.783-.659 1.312-.437 1.175.434-.268 1.732-2.599 1.448-2.599-.094 0-.549.641-1.011 1.424m-4.37 6.215c-.759 1.215-.303 1.377.486.173.365-.556.523-1.012.35-1.012-.172 0-.548.378-.836.839m-299.202 1.794c1.824 2.541 2.282 2.691.665.217-.733-1.119-1.478-2.039-1.657-2.043-.179-.004.268.818.992 1.826m293.371 6.141c-1.893 2.405-3.667 4.619-3.94 4.918-1.645 1.799-2.418 2.822-1.735 2.296.42-.323 2.565-2.838 4.766-5.588 4.972-6.211 4.811-6 4.561-6-.115 0-1.758 1.968-3.652 4.374m-289.4-.874c1.426 1.861 6.071 7.3 6.234 7.3.103 0-.385-.675-1.083-1.5a231.57 231.57 0 01-3.266-4c-1.098-1.375-2.092-2.5-2.208-2.5-.117 0 .028.315.323.7m34.856 7.405c-2.912 2.918-5.294 5.507-5.294 5.753 0 .8 10.725 9.845 14.8 12.481l1.4.905-1.163-.922c-9.841-7.805-14.637-11.906-14.637-12.517 0-.74 10.29-10.72 10.756-10.432.244.151.444.084.444-.149 0-1.113-1.424-.01-6.306 4.881m214.066-4.796c-.605.674-2.209 2.049-5.86 5.02-1.705 1.387-3.1 2.613-3.1 2.724 0 .333 1.983-1.201 5.982-4.626 2.081-1.781 3.914-3.191 4.075-3.133.415.15 10.743 10.34 10.743 10.599 0 .118-.495.651-1.1 1.186-2.039 1.802-7.911 6.712-9.474 7.921-.853.66-2.018 1.578-2.589 2.041-1.605 1.301-12.319 8.559-12.634 8.559-.154 0-.757.339-1.341.753-1.892 1.341-4.532 2.786-11.552 6.326-3.79 1.911-6.824 3.54-6.743 3.621.171.171 9.975-4.612 12.633-6.163.99-.578 2.61-1.502 3.6-2.054 2.408-1.342 10.746-6.636 12-7.62.55-.431 2.932-2.237 5.292-4.013 2.361-1.777 4.791-3.664 5.4-4.195.61-.531 2.413-2.081 4.008-3.445 3.688-3.155 3.829-2.666-2.512-8.678-5.59-5.301-6.086-5.652-6.828-4.823m-205.953 1.742c2.79 2.689 7.393 6.429 7.393 6.008 0-.173-4.301-3.819-7.6-6.443-1.234-.981-1.209-.93.207.435m263.542 1.095c-.248.283-.587.943-.753 1.466-.353 1.113.404.46 1.307-1.127.544-.956.18-1.178-.554-.339M62.2 321.6c.859.88 1.637 1.6 1.728 1.6.337 0-2.542-3.134-2.909-3.166-.21-.019.322.686 1.181 1.566m272.9 1.78c-1.045 1.151-1.9 2.224-1.9 2.385 0 .161.225.042.5-.263s1.302-1.398 2.283-2.429c.981-1.03 1.611-1.854 1.4-1.83-.211.024-1.238.985-2.283 2.137m-229.597-.125c.552.696 9.476 7.145 9.886 7.145.14 0 1.28.688 2.533 1.529 2.81 1.887 6.878 4.204 6.878 3.918 0-.116-1.305-.971-2.9-1.898-2.766-1.608-13.165-8.512-15.7-10.423-.66-.497-.974-.619-.697-.271m187.673.122c-1.026.994-10.057 7.054-14.476 9.713-2.365 1.423-4.3 2.677-4.3 2.787 0 .506 8.333-4.634 14.325-8.837 5.948-4.172 5.456-3.792 5.218-4.03-.105-.105-.45.06-.767.367m-223.59 6.009c3.177 3.182 5.828 5.733 5.893 5.668.15-.15-11.144-11.454-11.444-11.454-.124 0 2.374 2.604 5.551 5.786m284.874-3.144c-.729.824-.26 1.215.521.434.34-.34.619-.722.619-.847 0-.42-.594-.205-1.14.413m-25.133 3.241c-1.8 1.824-3.146 3.317-2.991 3.317.385 0 6.667-6.343 6.443-6.505-.099-.071-1.652 1.363-3.452 3.188m20.892 1.925c-.845.774-1.431 1.513-1.302 1.642.225.225 1.469-.89 2.632-2.357.87-1.098.337-.811-1.33.715m-28.019 4.805c-1.76 1.637-3.335 2.979-3.5 2.982-.165.003-.3.204-.3.447 0 .244 1.484-.881 3.298-2.5 4.326-3.859 4.414-3.945 4.031-3.923-.181.01-1.769 1.357-3.529 2.994m-244.826.48c.866.931 1.661 1.606 1.767 1.5.106-.106.115-.238.021-.293-.094-.055-.889-.73-1.766-1.499l-1.596-1.4 1.574 1.692m190.226 2.343c-3.19 1.617-5.644 2.946-5.452 2.952.473.016 10.02-4.58 11.135-5.361 1.725-1.209.066-.505-5.683 2.409m-140.8-2.045c0 .218 6.452 3.395 11.2 5.516 3.461 1.545 8.853 3.573 9.031 3.396.107-.108-.936-.611-2.318-1.119-3.728-1.37-8.39-3.406-13.106-5.723-5.123-2.518-4.807-2.382-4.807-2.07m-47.2 1.56c0 .115 1.485 1.439 3.3 2.942 4.132 3.423 4.7 3.857 4.7 3.592 0-.116-1.125-1.11-2.5-2.208a231.57 231.57 0 01-4-3.266c-.825-.698-1.5-1.175-1.5-1.06m20.808.56c.009.307 3.1 2.407 8.992 6.109 5.266 3.309 11.798 6.915 12.057 6.657.077-.078-1.703-1.163-3.958-2.412-6.081-3.368-7.045-3.952-12.293-7.445-2.643-1.759-4.802-3.068-4.798-2.909m240.659 2.156c-.844.88-1.454 1.679-1.357 1.776.167.167 3.49-2.966 3.49-3.29 0-.455-.769.09-2.133 1.514m-26.412 1.328c-3.002 2.42-4.854 4.112-3.455 3.157 1.225-.837 6.8-5.41 6.8-5.578 0-.274-.027-.254-3.345 2.421m-57.959 1.296c-2.587 1.009-4.619 1.919-4.516 2.022.213.213 8.615-3.051 9.2-3.574.543-.485.501-.471-4.684 1.552M148 346.4c.33.213.87.388 1.2.388.533 0 .533-.043 0-.388-.33-.213-.87-.388-1.2-.388-.533 0-.533.043 0 .388m102 0c-.533.345-.533.388 0 .388.33 0 .87-.175 1.2-.388.533-.345.533-.388 0-.388-.33 0-.87.175-1.2.388m58.785.818l-1.385 1.217 1.495-.917c.822-.505 1.497-1.053 1.5-1.218.008-.463-.126-.387-1.61.918m-218.68-.171c.126.204 1.086.985 2.132 1.737 1.047.751 1.772 1.155 1.613.896-.16-.258-1.119-1.04-2.132-1.737-1.013-.696-1.738-1.1-1.613-.896m59.895-.079c0 .272 4.034 1.531 4.241 1.324.105-.104-.706-.483-1.801-.841-2.101-.687-2.44-.754-2.44-.483m95.498.867c-.129.129-.924.409-1.766.623-.843.213-2.162.569-2.932.791-4.891 1.412-11.549 2.799-19.6 4.083-.673.107-.501.177.523.214.837.029 2.277-.112 3.2-.314.922-.202 2.757-.571 4.077-.82 7.565-1.426 19.536-4.678 17.567-4.772-.459-.022-.939.066-1.069.195m-89.976.952c1.56.683 9.59 2.666 14.678 3.625 1.32.249 3.155.618 4.077.82.923.202 2.363.343 3.2.314 1.024-.037 1.196-.107.523-.214-8.129-1.297-14.484-2.623-19.8-4.133-2.574-.731-3.857-.929-2.678-.412m150.089.633c-.764.539-1.214.979-1 .978.214-.001.929-.445 1.589-.986 1.541-1.263 1.205-1.259-.589.008m25.441 1.013c-.852.862-1.382 1.567-1.178 1.567.421 0 3.326-2.579 3.326-2.954 0-.54-.673-.106-2.148 1.387m-235.452.564c0 .098 1.305 1.056 2.9 2.129 2.939 1.977 5.231 3.293 4.5 2.584-.612-.593-7.4-4.917-7.4-4.713m207.029.412c-.424.32-.691.662-.594.76.097.097.624-.167 1.171-.587.547-.421.814-.762.594-.76-.22.002-.747.266-1.171.587m-3.329 2.231c-2.316 1.64-2.144 1.803.3.284 1.1-.684 2-1.307 2-1.384 0-.359-.739-.006-2.3 1.1m-119.1.343c1.208.324 5.277.545 4.967.269-.092-.081-1.517-.248-3.167-.37-1.831-.135-2.532-.096-1.8.101m35.6.017l-2 .274 2 .016c1.1.008 2.54-.122 3.2-.29l1.2-.305-1.2.015c-.66.009-2.1.139-3.2.29m110.26.642c-.729.824-.26 1.215.521.434.34-.34.619-.722.619-.847 0-.42-.594-.205-1.14.413m-137.66.218c1.21.144 6.25.261 11.2.261 4.95 0 9.99-.117 11.2-.261 1.21-.143-3.83-.26-11.2-.26-7.37 0-12.41.117-11.2.26m-58.662 1.187c.846.446 1.63.718 1.743.605.195-.195-2.501-1.472-3.03-1.434-.138.009.441.382 1.287.829m165.562.179c-1.888 1.132-2.323 1.723-.6.815 1.209-.638 2.816-1.81 2.5-1.824-.11-.005-.965.449-1.9 1.009m-191.7-.063c0 .08.45.44 1 .8.55.361 1 .5 1 .31 0-.189-.45-.55-1-.8-.55-.251-1-.39-1-.31m163.2.697c-2.769 1.262-3.87 1.705-7.6 3.062-4.594 1.672-5.406 2.037-4.58 2.057.451.012.991-.122 1.2-.297.209-.175 1.1-.547 1.98-.827.88-.279 1.96-.659 2.4-.843.44-.185 2.24-.901 4-1.592 3.281-1.287 5.511-2.396 4.8-2.386-.22.003-1.21.375-2.2.826m-134.8.096c0 .086 1.935.91 4.3 1.83 2.365.921 4.613 1.841 4.995 2.044.382.204 1.012.361 1.4.349.388-.011-.015-.299-.895-.639s-3.04-1.168-4.8-1.84c-1.76-.673-3.371-1.375-3.58-1.561-.382-.341-1.42-.474-1.42-.183m186.807 3.34c-.667.262-1.607 1.127-1.607 1.479 0 .279 1.553-.576 2.313-1.275.568-.522.301-.6-.706-.204m-175.1 1.128c.409.43 3.135 1.37 3.893 1.342.33-.012-.03-.254-.8-.537-2.37-.871-3.414-1.143-3.093-.805m108.493.976c-.771.331-.769.345.076.372.482.015.988-.152 1.124-.372.292-.473-.099-.473-1.2 0m-137.4.162c0 .218 9.889 5.043 10.286 5.018.26-.017-9.875-5.168-10.186-5.177-.055-.002-.1.07-.1.159m33.8.638c.136.22.642.387 1.124.372.845-.027.847-.041.076-.372-1.101-.473-1.492-.473-1.2 0m101 0c-.824.264-.859.326-.2.354.44.019 1.07-.141 1.4-.354.701-.453.214-.453-1.2 0m-98.4.8c.33.213.96.378 1.4.366l.8-.022-.8-.344c-1.196-.514-2.195-.514-1.4 0m95.8 0c-.771.331-.769.345.076.372.482.015.988-.152 1.124-.372.292-.473-.099-.473-1.2 0m-93 .8c.33.213.96.378 1.4.366l.8-.022-.8-.344c-1.196-.514-2.195-.514-1.4 0m90 0c-.795.514.204.514 1.4 0l.8-.344-.8-.022c-.44-.012-1.07.153-1.4.366m34.4.6c-.55.314-.82.572-.6.572.22 0 .85-.258 1.4-.572.55-.314.82-.572.6-.572-.22 0-.85.258-1.4.572m-121.2.2c.33.213.96.378 1.4.366l.8-.022-.8-.344c-1.196-.514-2.195-.514-1.4 0m83.8 0l-.8.344.8.022c.44.012 1.07-.153 1.4-.366.795-.514-.204-.514-1.4 0m-80.6.8c.33.213.96.378 1.4.366l.8-.022-.8-.344c-1.196-.514-2.195-.514-1.4 0m77 0l-.8.344h.8c.44 0 1.16-.155 1.6-.344l.8-.344h-.8c-.44 0-1.16.155-1.6.344m-73.4.8c.55.176 1.36.326 1.8.332l.8.012-.8-.344c-.44-.189-1.25-.338-1.8-.332l-1 .012 1 .32m69.8 0l-.8.344.8-.012c.44-.006 1.25-.156 1.8-.332l1-.32-1-.012c-.55-.006-1.36.143-1.8.332m-66 .8c.66.168 1.65.309 2.2.313l1 .007-1-.32c-.55-.176-1.54-.317-2.2-.313l-1.2.008 1.2.305m61.8 0l-1 .32 1-.007c.55-.004 1.54-.145 2.2-.313l1.2-.305-1.2-.008c-.66-.004-1.65.137-2.2.313m-56.841.799c13.231 2.852 37.489 2.92 52.841.148 3.29-.594 1.448-.482-4.4.267-13.228 1.695-30.738 1.693-43.2-.005-4.915-.669-7.317-.857-5.241-.41m81.719 5.896c-.947.327-1.651.665-1.565.752.087.086 1.221-.193 2.522-.62 1.301-.427 2.005-.765 1.565-.751-.44.014-1.575.292-2.522.619m-108.678.717c.88.317 1.87.571 2.2.564.33-.006-.12-.271-1-.588-.88-.317-1.87-.571-2.2-.564-.33.006.12.271 1 .588m104.6.606c-.438.297-.276.334.6.138 1.471-.329 1.79-.558.767-.55-.422.003-1.037.189-1.367.412m-101.2.364c.33.223.945.409 1.367.412 1.023.008.704-.221-.767-.55-.876-.196-1.038-.159-.6.138m97.4.629c-.88.29-1.33.539-1 .552.33.014 1.41-.23 2.4-.542.99-.312 1.44-.561 1-.552-.44.008-1.52.252-2.4.542m-94.4.189c.44.189 1.07.344 1.4.344.378 0 .304-.127-.2-.344-.44-.189-1.07-.344-1.4-.344-.378 0-.304.127.2.344m3 .8c.33.213.96.378 1.4.366l.8-.022-.8-.344c-1.196-.514-2.195-.514-1.4 0m87.6 0c-.804.257-.843.323-.2.332.44.006 1.16-.143 1.6-.332 1.019-.438-.032-.438-1.4 0m-84.2.8c.44.189 1.07.344 1.4.344.378 0 .304-.127-.2-.344-.44-.189-1.07-.344-1.4-.344-.378 0-.304.127.2.344m80.8 0l-.8.344h.8c.44 0 1.16-.155 1.6-.344l.8-.344h-.8c-.44 0-1.16.155-1.6.344m-77.2.8c.44.189 1.16.344 1.6.344h.8l-.8-.344c-.44-.189-1.16-.344-1.6-.344h-.8l.8.344m73.6 0c-.504.217-.578.344-.2.344.33 0 .96-.155 1.4-.344.504-.217.578-.344.2-.344-.33 0-.96.155-1.4.344m50.6.4c0 .22.27.4.6.4.33 0 .6-.18.6-.4 0-.22-.27-.4-.6-.4-.33 0-.6.18-.6.4m-120 .4c.55.176 1.36.326 1.8.332l.8.012-.8-.344c-.44-.189-1.25-.338-1.8-.332l-1 .012 1 .32m65 0l-.8.344h.8c.44 0 1.16-.155 1.6-.344l.8-.344h-.8c-.44 0-1.16.155-1.6.344m-60.2.8c.55.176 1.36.326 1.8.332l.8.012-.8-.344c-.44-.189-1.25-.338-1.8-.332l-1 .012 1 .32m55 0l-.8.344.8-.019c.44-.011 1.34-.157 2-.325l1.2-.305-1.2-.02c-.66-.01-1.56.136-2 .325m-50.567.546c.092.08 1.157.254 2.367.386 1.437.156 1.922.116 1.4-.118-.757-.339-4.121-.578-3.767-.268M220 382c-1.404.45.063.465 2.2.023l1.6-.331-1.4-.006c-.77-.003-1.85.138-2.4.314m-37.167.549c.092.082 1.877.25 3.967.373 2.641.156 3.312.117 2.2-.126-1.569-.343-6.494-.54-6.167-.247m27.367.273c-.942.182.045.221 2.4.096 2.2-.118 4.075-.282 4.167-.366.29-.265-4.899-.052-6.567.27m33.638 12.223c-.181.471-.076.579.39.4.351-.135.713-.245.805-.245.092 0 .167-.18.167-.4 0-.652-1.093-.455-1.362.245\"/><path fill=\"#8c8c94\" d=\"M183.111.293c.94.085 2.38.084 3.2-.002.819-.086.049-.155-1.711-.154-1.76.002-2.43.072-1.489.156m29.989 0c.935.084 2.465.084 3.4 0s.17-.153-1.7-.153c-1.87 0-2.635.069-1.7.153M173.2.8c0 .22.99.4 2.2.4 1.21 0 2.2-.18 2.2-.4 0-.22-.99-.4-2.2-.4-1.21 0-2.2.18-2.2.4m48.4 0c0 .22.9.4 2 .4s2-.18 2-.4c0-.22-.9-.4-2-.4s-2 .18-2 .4m-54.241.9c-.158.275-.145.371.029.214.175-.157.65-.108 1.056.11.81.433 2.756.103 2.756-.467 0-.555-3.514-.424-3.841.143M228 1.553c0 .505 1.613.859 2.685.59.5-.126.81-.389.689-.586-.287-.463-3.374-.467-3.374-.004m-64.993.835c-.287.465 1.566.999 2.17.626.233-.144.423-.431.423-.638 0-.497-2.284-.487-2.593.012m70.593.025c0 .598 1.087.922 1.9.566.385-.168.848-.273 1.03-.233.181.041.215-.111.076-.336-.331-.536-3.006-.534-3.006.003m-74.779.766c-.456.288-.354.423.477.631 1.102.277 1.902.01 1.902-.634 0-.48-1.619-.478-2.379.003M238.1 3.3c.092.275.677.5 1.3.5s1.208-.225 1.3-.5c.113-.339-.304-.5-1.3-.5s-1.413.161-1.3.5m-83.033.567c-.574.573-.214.933.933.933.8 0 1.2-.2 1.2-.6 0-.605-1.61-.857-2.133-.333M242 4.2c0 .493.315.62 1.3.525.715-.069 1.3-.305 1.3-.525 0-.22-.585-.456-1.3-.525-.985-.095-1.3.032-1.3.525m-91.2.8c-.55.314-1.394.578-1.876.586-.482.008-.988.194-1.124.414-.144.232.251.4.943.4.655 0 1.263-.217 1.351-.482.099-.297.805-.445 1.833-.384 1.283.075 1.673-.045 1.673-.518 0-.778-1.452-.787-2.8-.016m95.078-.344c-.491.491.178.944 1.395.944 1.043 0 1.151-.089.727-.6-.51-.614-1.665-.802-2.122-.344m3.206 1.219c.111.289.733.525 1.382.525 1.468 0 1.158-.647-.42-.879-.842-.123-1.108-.026-.962.354M144.8 6.8c0 .22.45.4 1 .4s1-.18 1-.4c0-.22-.45-.4-1-.4s-1 .18-1 .4m107.6 0c0 .22.45.4 1 .4s1-.18 1-.4c0-.22-.45-.4-1-.4s-1 .18-1 .4m-110.2.8c-.14.227.196.4.776.4.563 0 1.024-.18 1.024-.4 0-.22-.349-.4-.776-.4-.427 0-.888.18-1.024.4m113 .006c0 .224.54.366 1.2.315.66-.05 1.2-.233 1.2-.406 0-.173-.54-.315-1.2-.315-.66 0-1.2.183-1.2.406M139.6 8.4c0 .22.36.4.8.4.44 0 .8-.18.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8.18-.8.4m118.4 0c0 .22.45.4 1 .4s1-.18 1-.4c0-.22-.45-.4-1-.4s-1 .18-1 .4m-121.4.8c-.14.227.196.4.776.4.563 0 1.024-.18 1.024-.4 0-.22-.349-.4-.776-.4-.427 0-.888.18-1.024.4m124.2 0c0 .22.36.4.8.4.44 0 .8-.18.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8.18-.8.4m-126.6.8c-.14.227.196.4.776.4.563 0 1.024-.18 1.024-.4 0-.22-.349-.4-.776-.4-.427 0-.888.18-1.024.4m129 0c0 .22.36.4.8.4.44 0 .8-.18.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8.18-.8.4m-131.6.8c0 .22.45.4 1 .4s1-.18 1-.4c0-.22-.45-.4-1-.4s-1 .18-1 .4m134 0c0 .22.461.4 1.024.4.58 0 .916-.173.776-.4-.136-.22-.597-.4-1.024-.4-.427 0-.776.18-.776.4m-135.8.8c.136.22.507.4.824.4.317 0 .576-.18.576-.4 0-.22-.371-.4-.824-.4-.453 0-.712.18-.576.4m138.2 0c0 .22.45.4 1 .4s1-.18 1-.4c0-.22-.45-.4-1-.4s-1 .18-1 .4m-140.4.8c0 .22.36.4.8.4.44 0 .8-.18.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8.18-.8.4m142.626-.042c-.122.197.03.455.337.573.587.225 1.037-.035 1.037-.598 0-.446-1.095-.427-1.374.025M125 13.2c-.136.22-.597.4-1.024.4-.856 0-1.036.592-.315 1.038.253.156.678-.013.944-.377.266-.364.868-.661 1.339-.661s.856-.18.856-.4c0-.22-.349-.4-.776-.4-.427 0-.888.18-1.024.4m147.4 0c0 .22.461.4 1.024.4.58 0 .916-.173.776-.4-.136-.22-.597-.4-1.024-.4-.427 0-.776.18-.776.4m2.217.772c-.126.205-.047.486.176.624.478.295 1.207-.079 1.207-.62 0-.486-1.083-.489-1.383-.004m-153.417.823c-.33.191-.915.445-1.3.564-.957.295-.886 1.041.1 1.041.44 0 .8-.167.8-.372s.391-.43.869-.5c.477-.07.942-.353 1.033-.628.187-.568-.607-.624-1.502-.105m155.287.071c.097.294.587.594 1.089.668.62.09.857-.038.737-.4-.097-.294-.587-.594-1.089-.668-.62-.09-.857.038-.737.4m2.152.628c-.481.482-.219.906.561.906.44 0 .8-.161.8-.357 0-.45-1.04-.869-1.361-.549m-91.539.399c.935.084 2.465.084 3.4 0s.17-.153-1.7-.153c-1.87 0-2.635.069-1.7.153m19.4.001a29.38 29.38 0 003.8 0c1.045-.082.19-.15-1.9-.15s-2.945.068-1.9.15m-88.644.384c-.451.45-.275.922.344.922.33 0 .6-.169.6-.376 0-.505-.625-.866-.944-.546m95.249.005c.497.096 1.217.092 1.6-.008.382-.1-.025-.179-.905-.174-.88.004-1.193.086-.695.182m67.551-.005c-.451.45-.275.922.344.922.33 0 .6-.169.6-.376 0-.505-.625-.866-.944-.546m-102.151.409c.609.092 1.509.09 2-.005.492-.095-.005-.171-1.105-.168-1.1.003-1.503.081-.895.173m39.6 0c.609.092 1.509.09 2-.005.492-.095-.005-.171-1.105-.168-1.1.003-1.503.081-.895.173m-45.8.796c.497.096 1.217.092 1.6-.008.382-.1-.025-.179-.905-.174-.88.004-1.193.086-.695.182m52.4 0c.497.096 1.217.092 1.6-.008.382-.1-.025-.179-.905-.174-.88.004-1.193.086-.695.182m57.695.117c0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.45.4 1 .4s1 .18 1 .4c0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.315.396.7.391.833-.01-.937-1.567-1.8-1.582-.275-.005-.5-.189-.5-.409 0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.349-.4-.776-.4-.427 0-.888-.18-1.024-.4-.136-.22-.597-.4-1.024-.4-.427 0-.776-.18-.776-.4 0-.22-.36-.4-.8-.4-.44 0-.8.18-.8.4m-168.8.8c0 .22-.36.4-.8.4-.44 0-.8.18-.8.4 0 .22-.45.4-1 .4s-1 .18-1 .4c0 .22-.283.4-.629.4-.345 0-.9.272-1.232.604-.332.332-.769.501-.971.376-.203-.125-.368-.07-.368.122s-.63.596-1.4.898c-1.415.555-1.868 1.2-.843 1.2.307 0 .66-.267.785-.593.13-.338.493-.492.843-.357.338.129.615.036.615-.207 0-.244.36-.443.8-.443.44 0 .8-.18.8-.4 0-.22.36-.4.8-.4.44 0 .8-.18.8-.4 0-.22.349-.4.776-.4.427 0 .888-.18 1.024-.4.136-.22.597-.4 1.024-.4.427 0 .776-.18.776-.4 0-.22.36-.4.8-.4.44 0 .8-.18.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8.18-.8.4m53.905-.117c.497.096 1.217.092 1.6-.008.382-.1-.025-.179-.905-.174-.88.004-1.193.086-.695.182m62.195-.007c.385.1 1.015.1 1.4 0 .385-.101.07-.183-.7-.183s-1.085.082-.7.183m4.4.8c.385.1 1.015.1 1.4 0 .385-.101.07-.183-.7-.183s-1.085.082-.7.183m-73.9.524c-1.089.277-1.107.307-.2.325.55.01 1.36-.136 1.8-.325.986-.424.066-.424-1.6 0m76.8-.019c.768.348 2.91.575 2.567.272-.092-.081-.887-.257-1.767-.391-1.115-.169-1.358-.133-.8.119m-80.2.819c-.804.257-.843.323-.2.332.44.006 1.16-.143 1.6-.332 1.019-.438-.032-.438-1.4 0m83.8 0c.44.189 1.16.338 1.6.332.643-.009.604-.075-.2-.332-1.368-.438-2.419-.438-1.4 0m51.8 2c0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.341.4.757.4.417 0 .865.281.997.625s.422.514.643.377c.716-.443.433-.841-.997-1.402-.77-.302-1.4-.696-1.4-.875 0-.179-.36-.325-.8-.325-.44 0-.8.18-.8.4m-190 1.6c0 .22.27.4.6.4.33 0 .6-.18.6-.4 0-.22-.27-.4-.6-.4-.33 0-.6.18-.6.4m-1.6.702c0 .167-.495.531-1.1.809-1.538.708-3.069 2.053-2.727 2.396.158.157.465-.031.682-.419.217-.388.583-.588.814-.445.231.143.535.101.676-.092.14-.193.79-.652 1.444-1.019 1.357-.763 1.781-1.532.844-1.532-.348 0-.633.136-.633.302m196.4.223c0 .289.63.773 1.4 1.075.77.302 1.4.696 1.4.875 0 .179.345.325.767.325.421 0 .847.225.945.5.098.275.315.374.481.219.562-.523-2.713-2.939-3.404-2.512-.214.132-.389-.04-.389-.383a.614.614 0 00-.6-.624c-.33 0-.6.236-.6.525M94.63 28.824c-.681.686-.692.776-.1.776.369 0 .67-.18.67-.4 0-.22.27-.4.6-.4.33 0 .6-.18.6-.4 0-.642-.935-.418-1.77.424m171.97-.44c3.127 1.301 5.139 2.018 4.8 1.712-.525-.474-4.579-2.103-5.153-2.071-.246.014-.087.175.353.359m36.2.016c0 .22.27.4.6.4.33 0 .6.18.6.4 0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.27.4.6.4.33 0 .6.18.6.4 0 .22.27.4.6.4.33 0 .6.18.6.4 0 .22.27.4.6.4.33 0 .6-.18.6-.4 0-.22-.27-.4-.6-.4-.33 0-.6-.18-.6-.4 0-.22-.27-.4-.6-.4-.33 0-.6-.18-.6-.4 0-.22-.27-.4-.6-.4-.33 0-.6-.191-.6-.424 0-.233-.165-.321-.368-.196-.202.125-.639-.044-.971-.376-.689-.689-1.461-.797-1.461-.204m-110 .4c-2.065.152.606.255 6.8.261 7.39.007 9.153-.07 6.4-.281-4.421-.338-8.433-.332-13.2.02m-11.4.8c-1.547.277-1.527.287.6.303 1.21.01 2.65-.127 3.2-.303 1.32-.423-1.439-.423-3.8 0m32.6 0c.55.176 1.9.317 3 .314l2-.006-1.6-.331c-2.199-.455-4.836-.437-3.4.023m-122.4.871c-.77.447-1.46.974-1.533 1.171-.074.197-.402.358-.729.358-.638 0-1.95 1.121-1.656 1.415.246.246 2.311-.748 2.315-1.115.002-.165.273-.3.603-.3.33 0 .6-.136.6-.302 0-.167.54-.542 1.2-.834.66-.292 1.2-.696 1.2-.898 0-.523-.411-.419-2 .505m82.8-.033c-.99.193-2.97.546-4.4.783-8.117 1.348-23.733 5.442-21.124 5.539.592.022 1.188-.14 1.324-.36.136-.22.766-.4 1.4-.4.634 0 1.264-.18 1.4-.4.136-.22.766-.4 1.4-.4.634 0 1.252-.161 1.374-.358.121-.197.897-.452 1.723-.567.827-.115 2.313-.416 3.303-.667 3.206-.816 7.186-1.564 13.8-2.597 2.42-.378 4.475-.76 4.567-.849.285-.277-2.876-.094-4.767.276m45.633-.276c.092.089 2.147.471 4.567.849 6.614 1.033 10.594 1.781 13.8 2.597.99.251 2.476.552 3.303.667.826.115 1.602.37 1.723.567.122.197.74.358 1.374.358.634 0 1.264.18 1.4.4.136.22.766.4 1.4.4.634 0 1.264.18 1.4.4.136.22.732.382 1.324.36 2.682-.099-13.312-4.268-21.324-5.558a187.22 187.22 0 01-4.731-.826c-1.954-.381-4.542-.511-4.236-.214m53.167.827c0 .317 2.9 1.444 3.128 1.216.113-.113.107-.205-.012-.205-.12 0-.87-.272-1.667-.605-.797-.333-1.449-.516-1.449-.406m36.4 1.315c0 .437 1.634 1.395 1.91 1.12.127-.128-.115-.495-.539-.815-.859-.65-1.371-.764-1.371-.305m-224 2.042c-.33.405-1.019.957-1.532 1.226C82.157 36.577 80.962 38 82.029 38c.53 0 1.571-1.008 1.571-1.521 0-.209.54-.487 1.2-.619.704-.141 1.2-.492 1.2-.85 0-.349.352-.61.824-.61.453 0 .712-.18.576-.4-.379-.614-1.136-.468-1.8.346M312 34c0 .22.27.4.6.4.33 0 .6.267.6.592 0 .326.437.702.971.836.534.135 1.297.678 1.695 1.208.775 1.032 1.334 1.246 1.334.511 0-.471-1.515-1.947-1.999-1.947-.152 0-.8-.45-1.439-1-1.241-1.067-1.762-1.244-1.762-.6m-165.8 3.2c-.771.331-.769.345.076.372.482.015.988-.152 1.124-.372.292-.473-.099-.473-1.2 0m105.6 0c.136.22.642.387 1.124.372.845-.027.847-.041.076-.372-1.101-.473-1.492-.473-1.2 0m-140.6.836c-.664.543-.731.679-.2.404 1.305-.674 2.028-1.228 1.6-1.225-.22.002-.85.371-1.4.821m-31.514.683C78.41 39.912 78.123 40.4 78.7 40.4c.599-.001 2.575-1.974 2.426-2.422-.09-.269-.688.039-1.44.741M143.8 38c-.771.331-.769.345.076.372.482.015.988-.152 1.124-.372.292-.473-.099-.473-1.2 0m110.4 0c.136.22.642.387 1.124.372.845-.027.847-.041.076-.372-1.101-.473-1.492-.473-1.2 0m63.8.229c0 .378 1.114 1.371 1.538 1.371.217 0 .476.225.574.5.098.275.312.376.476.224.339-.315-1.536-2.324-2.17-2.324-.23 0-.418.103-.418.229m-209.6 1.407c-.664.543-.731.679-.2.404 1.305-.674 2.028-1.228 1.6-1.225-.22.002-.85.371-1.4.821m181.2-.416c1.387.941 2.178 1.215 1.2.416-.55-.45-1.18-.819-1.4-.821-.22-.002-.13.181.2.405m-150.4.38c-.485.314-.428.389.3.394.495.003.9-.174.9-.394 0-.501-.424-.501-1.2 0m119.6-.047c0 .195.405.45.9.568l1.9.454c.564.135.302-.1-.6-.538-1.841-.895-2.2-.974-2.2-.484M75.661 41.855c-.736.77-1.237 1.503-1.112 1.628.264.263 2.651-2.191 2.651-2.725 0-.499-.038-.472-1.539 1.097m29.939-.619c-.664.543-.731.679-.2.404 1.305-.674 2.028-1.228 1.6-1.225-.22.002-.85.371-1.4.821m215.6-.436c0 .22.146.4.325.4.178 0 .73.378 1.226.84 1.272 1.185 1.552.627.31-.616-1.056-1.056-1.861-1.326-1.861-.624m-186.4.503c-.55.246-1.81.799-2.8 1.227-4.406 1.907-13.303 6.3-13.124 6.48.109.109 1.602-.524 3.316-1.406 1.715-.882 3.364-1.604 3.663-1.604.3 0 .545-.18.545-.4 0-.22.236-.4.525-.4.289 0 1.414-.427 2.5-.949a103.976 103.976 0 014.175-1.866c2.171-.904 3.344-1.612 2.58-1.558-.209.015-.83.229-1.38.476m128.22-.168c.209.184 1.37.747 2.58 1.25 1.21.504 3.089 1.344 4.175 1.866 1.086.522 2.211.949 2.5.949.289 0 .525.18.525.4 0 .22.245.4.545.4.299 0 1.948.722 3.663 1.604 1.714.882 3.206 1.515 3.314 1.407.315-.314-16.467-8.211-17.451-8.211-.127 0-.06.151.149.335m30.38.272c.44.359 1.16.828 1.6 1.044l.8.393-.8-.651c-.44-.359-1.16-.828-1.6-1.044l-.8-.393.8.651m32.06 2.293c1.271 2.068 3.74 3.85 3.74 2.7 0-.22-.145-.4-.322-.4-.177 0-1.009-.63-1.85-1.4-1.598-1.463-2.087-1.744-1.568-.9m-253.132.816a95.597 95.597 0 01-2.579 2.084c-2.158 1.679-8.662 8.22-8.418 8.465.111.111 1.941-1.524 4.066-3.632 2.126-2.108 4.045-3.833 4.266-3.833.48 0 4.107-3.563 3.869-3.801-.092-.092-.633.231-1.204.717M187 43.987c-.66.175-2.179.34-3.376.366-1.197.026-3.177.219-4.4.43a455.58 455.58 0 01-5.024.827c-4.546.721-10.444 2.097-9.854 2.3.301.103 1.201-.001 2-.231 8.019-2.311 24.188-3.882 36.456-3.543 12.409.343 19.46 1.178 31.398 3.718.66.14 1.075.121.923-.043-.635-.684-11.066-2.592-18.923-3.462-4.54-.503-27.592-.788-29.2-.362m142.632 3.032c-.018.231.553.984 1.268 1.674.715.689 2.168 2.093 3.228 3.119 1.061 1.026 2.02 1.774 2.132 1.662.272-.273-5.229-5.874-5.769-5.874-.233 0-.515-.225-.626-.5-.111-.275-.216-.311-.233-.081M161.2 48.4c-.787.509.616.509 1.8 0 .733-.315.716-.346-.2-.366-.55-.012-1.27.153-1.6.366m75.4 0c1.196.514 2.195.514 1.4 0-.33-.213-.96-.378-1.4-.366l-.8.022.8.344m-78.4.8c-.295.478.489.478 1.6 0 .714-.307.685-.347-.276-.372-.592-.015-1.188.152-1.324.372m81.4 0c.788.509 1.715.509 1.4 0-.136-.22-.642-.397-1.124-.394-.712.005-.764.079-.276.394m65.8-.103c.617.657 8.6 6.523 8.6 6.319 0-.198-5.383-4.308-7.6-5.802-.77-.519-1.22-.752-1-.517m-188.335.75c-.625.339-1.062.69-.971.78.238.238 2.299-.771 2.303-1.127.004-.381.018-.384-1.332.347m163.738-.357c.004.365 2.062 1.379 2.305 1.135.092-.091-.39-.454-1.071-.806-.68-.352-1.236-.5-1.234-.329M91.4 50.635l-1.2 1.031 1.3-.86c.715-.473 1.3-.938 1.3-1.033 0-.3-.169-.195-1.4.862m64-.635c-.295.478.489.478 1.6 0 .714-.307.685-.347-.276-.372-.592-.015-1.188.152-1.324.372m87.2 0c1.101.473 1.492.473 1.2 0-.136-.22-.642-.387-1.124-.372-.845.027-.847.041-.076.372m-89.8.8c0 .469.307.469 1.4 0 .709-.305.675-.347-.3-.372-.605-.015-1.1.152-1.1.372m92.6 0c1.101.473 1.492.473 1.2 0-.136-.22-.642-.387-1.124-.372-.845.027-.847.041-.076.372m-131.4.8c-.55.43-1.137.786-1.305.791-.703.021-10.884 6.864-16.134 10.845-4.292 3.255-4.653 3.549-9.223 7.51-3.686 3.194-3.846 2.559 2.168 8.56 5.972 5.959 5.121 5.681 8.44 2.753 6.882-6.072 17.315-13.439 25.565-18.05 2.481-1.386 4.442-2.59 4.357-2.674-.231-.231-6.633 3.225-8.73 4.712-.584.414-1.177.753-1.317.753-.333 0-8.985 5.963-9.996 6.89-.427.39-.93.71-1.119.71-.188 0-.792.45-1.342 1s-1.129 1-1.286 1c-.158 0-.737.405-1.288.9s-2.079 1.8-3.396 2.9c-1.317 1.1-2.807 2.405-3.312 2.9-1.192 1.169-.554 1.589-6.262-4.12-5.934-5.933-5.743-5.134-1.954-8.18 2.321-1.866 5.161-4.22 5.334-4.422.11-.128 1.46-1.178 3-2.334a220.697 220.697 0 003.454-2.63c2.363-1.907 14.897-9.814 15.557-9.814.214 0 .389-.18.389-.4 0-.595-.482-.474-1.6.4m169.6-.4c0 .22.19.4.422.4.673 0 12.488 7.493 12.711 8.061.074.186.355.339.625.339s.84.32 1.267.711c.426.391 1.405 1.144 2.175 1.674.77.53 1.959 1.425 2.643 1.99A140.46 140.46 0 00305.449 66c1.216.955 5.049 4.118 6.147 5.072.552.479 1.409 1.22 1.904 1.647 1.26 1.085 1.404.859-3.89 6.12-5.526 5.492-5.145 5.363-8.01 2.716-1.21-1.118-2.83-2.51-3.6-3.094a43.95 43.95 0 01-2.396-1.961c-.548-.495-1.12-.9-1.271-.9-.152 0-.514-.231-.804-.513-.291-.282-1.159-.949-1.929-1.481-.77-.532-1.49-1.089-1.6-1.239-.575-.779-11.964-7.9-14.5-9.066-.825-.379-1.5-.827-1.5-.995 0-.168-.31-.306-.689-.306-.866 0-.194.487 3.273 2.37 1.311.712 2.869 1.641 3.462 2.063.593.422 1.192.767 1.331.767.961 0 11.859 7.951 18.557 13.538l4.534 3.783 5.166-5.155c2.841-2.835 5.166-5.361 5.166-5.614 0-.686-7.069-6.738-13.188-11.291-3.853-2.866-14.638-10.056-15.106-10.07-.168-.005-.756-.361-1.306-.791-1.118-.874-1.6-.995-1.6-.4m-133.4.4c-.136.22-.599.4-1.029.4-.43 0-1.184.208-1.676.462-1.879.972-2.302 1.138-2.895 1.138-.336 0-.923.159-1.305.353-.632.322-1.683.775-3.895 1.682-3.367 1.38-6.291 2.808-6.113 2.986.118.117 1.271-.264 2.564-.847a234.71 234.71 0 015.949-2.593c.76-.32 7.034-2.608 9.6-3.5l1.2-.418-1.076-.031c-.592-.018-1.188.148-1.324.368m97.6 0c1.101.473 1.492.473 1.2 0-.136-.22-.642-.387-1.124-.372-.845.027-.847.041-.076.372M88 53.046c-.99.773-2.07 1.692-2.4 2.042-.33.35.525-.212 1.9-1.249 1.375-1.037 2.5-1.965 2.5-2.062 0-.278-.094-.218-2 1.269m163-.385l5.2 2.013c4.683 1.813 8.33 3.419 12.7 5.594 1.045.52 1.897.807 1.893.639-.004-.169-.949-.744-2.1-1.279a8241.59 8241.59 0 01-4.893-2.273c-4.399-2.044-6.557-2.955-7.001-2.955-.225 0-.767-.18-1.204-.4l-1.59-.8c-.437-.22-1.146-.4-1.576-.4-.43 0-.893-.18-1.029-.4-.136-.22-.642-.391-1.124-.379-.615.014-.399.205.724.64m85.803 1.239c.002.165.474.518 1.049.785 1.022.475 1.03.468.335-.3-.722-.797-1.39-1.031-1.384-.485M314.4 55.714c0 .104 1.028 1.066 2.284 2.137 1.256 1.072 2.155 1.74 1.999 1.485-.344-.559-4.283-3.89-4.283-3.622m-232.449 2.32L80.2 59.668l1.9-1.482c1.736-1.354 2.159-1.786 1.751-1.786-.081 0-.936.735-1.9 1.634m257.649-1.5c0 .073.9.986 2 2.027 2.375 2.249 2.681 1.885.416-.496-1.328-1.396-2.416-2.086-2.416-1.531M77.775 61.7L76.6 63l1.3-1.175c1.212-1.095 1.484-1.425 1.175-1.425-.069 0-.654.585-1.3 1.3M320 60.486c0 .089 1.485 1.488 3.3 3.111 1.815 1.622 2.67 2.27 1.9 1.44-1.432-1.543-5.2-4.84-5.2-4.551m-268.942 4.37c-1.948 1.976-3.435 3.7-3.304 3.831.217.217 7.446-6.872 7.446-7.302 0-.562-.95.234-4.142 3.471M74.4 64.6c-.972.99-1.677 1.8-1.567 1.8.11 0 .995-.81 1.967-1.8.972-.99 1.677-1.8 1.567-1.8-.11 0-.995.81-1.967 1.8m271.2-1.589c0 .115.765 1.006 1.7 1.978.935.973 2.322 2.431 3.083 3.24.761.809 1.453 1.264 1.537 1.01.085-.254-1.217-1.807-2.893-3.451-2.888-2.832-3.427-3.269-3.427-2.777M46.221 70.224c-.423.563-1.178 1.5-1.679 2.083-1.539 1.791-.682 1.497 1.24-.426 1.687-1.686 2.248-2.681 1.513-2.681-.168 0-.651.461-1.074 1.024m306.179.227c0 .643 1.281 2.349 1.764 2.349.148 0 .654.358 1.124.796 1.73 1.612 1.104.415-.86-1.645-1.202-1.26-2.028-1.871-2.028-1.5M64.4 74.6c-.972.99-1.677 1.8-1.567 1.8.11 0 .995-.81 1.967-1.8.972-.99 1.677-1.8 1.567-1.8-.11 0-.995.81-1.967 1.8m271.593 1.7c1.844 2.035 3.428 3.7 3.521 3.7.254 0-4.468-5.253-5.753-6.4-.616-.55.388.665 2.232 2.7m-294.25-.527c-.873.915-1.15 1.488-.906 1.873.287.454.352.456.357.014.003-.296.546-1.043 1.206-1.66.66-.617 1.2-1.229 1.2-1.36 0-.525-.66-.122-1.857 1.133m314.657-.378c0 .2.997 1.469 1.9 2.421.275.29.5.72.5.955 0 .236.18.429.4.429.22 0 .4.23.4.512 0 .281.36.771.8 1.088.44.317.8.809.8 1.092 0 .484 2.064 2.908 2.477 2.908.104 0 .19-.262.19-.582 0-.321-.15-.49-.334-.377-.183.114-.333-.031-.333-.321 0-.291-.45-1.013-1-1.607-.55-.593-1-1.226-1-1.407 0-.181-.36-.589-.8-.906-.44-.317-.8-.807-.8-1.088 0-.282-.18-.512-.4-.512a.41.41 0 01-.4-.418c0-.23-.442-.86-.982-1.4-.941-.941-1.418-1.206-1.418-.787M61.375 78.1L60.2 79.4l1.3-1.175c1.212-1.095 1.484-1.425 1.175-1.425-.069 0-.654.585-1.3 1.3m-22.71 1.604c-.624.7-.941 1.337-.703 1.417.502.167 1.638-.867 1.638-1.492 0-.236.18-.429.4-.429.22 0 .4-.18.4-.4 0-.701-.568-.405-1.735.904m20.721.48c-.212.3-.986 1.282-1.72 2.181-.733.899-1.256 1.635-1.162 1.635.298 0 3.59-4.039 3.425-4.204-.086-.087-.331.088-.543.388m280.214.341c0 .069.573.654 1.274 1.3L342.149 83l-.975-1.278c-.827-1.085-1.574-1.653-1.574-1.197M36.72 82.368a11.32 11.32 0 00-1.152 1.7c-.271.513-.847 1.242-1.278 1.62-.538.471-.687.912-.475 1.4.286.659.323.653.495-.084.102-.437.524-1.033.938-1.322.414-.29.752-.877.752-1.305 0-.427.193-.777.429-.777.553 0 1.571-1.018 1.571-1.571 0-.658-.552-.512-1.28.339m283.308 7.019l-5.334 5.386 2.375 2.714c5.816 6.646 12.99 16.501 16.596 22.799 3.756 6.56 5.663 10.298 8.834 17.314.829 1.834 3.186 7.867 4.453 11.4.694 1.936 1.011 2.468 1.026 1.724.012-.592-.158-1.188-.378-1.324-.22-.136-.4-.599-.4-1.029 0-.43-.18-1.139-.4-1.576l-.8-1.59c-.22-.437-.4-.969-.4-1.182 0-.607-3.489-8.623-5.582-12.823-2.442-4.903-4.559-8.946-4.816-9.2-.111-.11-.444-.63-.74-1.155l-1.288-2.292c-.813-1.446-7.582-11.425-7.974-11.753-.131-.11-.671-.83-1.2-1.6-.529-.77-1.06-1.49-1.181-1.6-.12-.11-.939-1.099-1.819-2.198a73.106 73.106 0 00-3.065-3.56c-2.924-3.12-3.05-2.723 2.661-8.353l5.08-5.007 1.294 1.459a323.35 323.35 0 012.462 2.815c.642.745 1.351 1.555 1.574 1.8.223.244 1.03 1.254 1.794 2.244.764.99 1.617 2.038 1.896 2.33.279.291 1.079 1.371 1.779 2.4.7 1.028 1.386 1.96 1.525 2.07.139.11.86 1.1 1.603 2.2s1.496 2.06 1.674 2.133c.178.074.323.311.323.528 0 .217.513 1.147 1.141 2.067 1.896 2.78 5.659 9.093 5.659 9.495 0 .207.197.377.438.377.929 0-6.792-12.262-12.467-19.8-3.315-4.403-10.276-12.6-10.7-12.6-.17 0-2.709 2.424-5.643 5.387m-247.03-4.429c-.219.307-1.936 2.332-3.816 4.5C64.35 95.031 54 109.18 54 110.213c0 .133-.54 1.028-1.2 1.987-.66.959-1.204 1.892-1.209 2.072-.005.18-.361.778-.791 1.328-.828 1.058-.996 1.6-.498 1.6.167 0 .542-.54.834-1.199.291-.66 1.865-3.288 3.497-5.84s2.967-4.72 2.967-4.817c0-.098.36-.564.8-1.036.44-.472.8-1.095.8-1.383 0-.289.141-.525.314-.525.172 0 .608-.495.967-1.1.562-.946 4.565-6.221 6.603-8.7 1.376-1.674 4.757-5.623 5.716-6.676l1-1.097 5.1 5.012c2.805 2.756 5.1 5.082 5.1 5.168 0 .086-.405.57-.9 1.075s-1.8 1.998-2.9 3.318c-1.1 1.32-2.099 2.49-2.219 2.6-.121.11-.652.83-1.181 1.6-.529.77-1.069 1.49-1.2 1.6-.131.11-.671.83-1.2 1.6-.529.77-1.071 1.49-1.204 1.6-.689.568-8.174 12.119-9.202 14.2-.326.66-.684 1.29-.796 1.4-.457.45-2.792 5.34-2.628 5.504.098.097.754-.966 1.459-2.362a89.322 89.322 0 012.827-5.082c.849-1.398 1.544-2.618 1.544-2.711 0-1.056 11.14-16.282 15.659-21.403 2.913-3.302 3.232-2.373-2.882-8.399-5.513-5.433-5.555-5.464-6.179-4.589m-18.823 1.71c-.616.808-.916 1.343-.666 1.188.512-.316 2.244-2.656 1.966-2.656-.099 0-.684.661-1.3 1.468M363.6 85.4c0 .372 1.665 1.868 1.861 1.672.317-.317-.81-1.872-1.357-1.872-.277 0-.504.09-.504.2m-17.609 2.988c.466.653 1.051 1.314 1.3 1.468.25.155-.05-.38-.666-1.188-1.337-1.753-1.841-1.976-.634-.28M32.5 88.198c-.275.313-.5.846-.5 1.185 0 .339-.147.617-.326.617-.427 0-2.158 3.249-1.88 3.527.275.275 1.377-1.169 1.393-1.827.007-.275.193-.5.413-.5.22 0 .4-.27.4-.6 0-.33.159-.6.353-.6.195 0 .465-.315.601-.7.135-.385.351-.925.48-1.2.314-.674-.312-.608-.934.098m333.113-.298c.017.419 1.021 1.7 1.331 1.7.457 0 .271-.842-.315-1.429-.628-.627-1.036-.736-1.016-.271m1.587 2.529c0 .449.979 1.571 1.371 1.571.434 0 .228-.858-.342-1.429-.681-.68-1.029-.728-1.029-.142M348.4 91.6c.47.66.944 1.2 1.054 1.2.11 0-.184-.54-.654-1.2-.47-.66-.944-1.2-1.054-1.2-.11 0 .184.54.654 1.2M49.692 92.629c-.495.754-.82 1.371-.723 1.371.278 0 1.935-2.429 1.77-2.594-.082-.082-.553.468-1.047 1.223M368.8 93c0 .33.18.6.4.6.22 0 .4-.27.4-.6 0-.33-.18-.6-.4-.6-.22 0-.4.27-.4.6M28.697 94.795c-.776.907-.905 1.605-.297 1.605.22 0 .4-.255.4-.567 0-.311.207-.635.46-.72.253-.084.387-.373.297-.642-.109-.327-.396-.218-.86.324m340.903-.366c0 .639 1.195 1.712 1.519 1.364.155-.166.056-.383-.219-.481-.275-.098-.5-.434-.5-.745 0-.312-.18-.567-.4-.567-.22 0-.4.193-.4.429m1.6 2.496c0 .371.18.675.4.675.22 0 .4.36.4.8 0 .44.18.8.4.8.22 0 .4.27.4.6 0 .33.27.6.6.6.33 0 .6-.186.6-.413 0-.226-.27-.516-.6-.642-.33-.127-.6-.489-.6-.805 0-.315-.36-.96-.8-1.432-.678-.728-.8-.756-.8-.183M26.3 98.372c-.605.856-1.1 1.752-1.1 1.992s-.18.436-.4.436c-.22 0-.4.27-.4.6 0 1.067.795.637 1.481-.8.367-.77.833-1.4 1.036-1.4.203 0 .262-.277.133-.615-.135-.35.019-.713.357-.843.326-.125.593-.388.593-.585 0-.743-.637-.287-1.7 1.215m326.1-1.467c0 .393 2.423 4.295 2.667 4.295.109 0-.209-.675-.706-1.5-1.353-2.244-1.961-3.11-1.961-2.795m21.2 4.495c0 .33.289.6.643.6.414 0 .559.219.407.615-.135.35.019.713.357.843.326.125.593.568.593.985 0 .416.18.757.4.757.22 0 .4.36.4.8 0 .44.18.8.4.8.22 0 .4.36.4.8 0 .44.18.8.4.8.22 0 .4.27.4.6 0 .33.18.6.4.6.22 0 .4-.27.4-.6 0-.33-.18-.6-.4-.6-.22 0-.4-.36-.4-.8 0-.44-.135-.801-.3-.803-.359-.004-1.3-1.941-1.3-2.677 0-.286-.168-.52-.374-.52s-.602-.63-.88-1.4c-.506-1.398-1.546-1.936-1.546-.8m-350 1.6c0 .33.18.6.4.6.22 0 .4-.27.4-.6 0-.33-.18-.6-.4-.6-.22 0-.4.27-.4.6m18.824.718a120.02 120.02 0 01-1.131 1.782c-.322.495-.498.9-.392.9.282 0 2.385-3.247 2.214-3.419-.08-.079-.391.252-.691.737M22.4 105.4c-.302.77-.696 1.4-.875 1.4-.179 0-.325.36-.325.8 0 .44-.18.8-.4.8-.22 0-.4.36-.4.8 0 .44-.18.8-.4.8-.22 0-.4.45-.4 1s-.18 1-.4 1c-.22 0-.4.36-.4.8 0 .44-.18.8-.4.8-.22 0-.4.36-.4.8 0 .44.18.8.4.8.22 0 .4-.36.4-.8 0-.44.18-.8.4-.8.22 0 .4-.349.4-.776 0-.427.18-.888.4-1.024.22-.136.4-.597.4-1.024 0-.427.18-.776.4-.776.22 0 .4-.36.4-.8 0-.44.18-.8.4-.8.22 0 .4-.36.4-.8 0-.44.199-.8.443-.8.243 0 .336-.277.207-.615-.135-.35.019-.713.357-.843.326-.125.593-.478.593-.785 0-1.025-.645-.572-1.2.843m334.924-.4c.338.66.914 1.56 1.28 2 .366.44.261.08-.234-.8-1.09-1.942-1.906-2.878-1.046-1.2m21.476 5.8c0 .44.18.8.4.8.22 0 .4.36.4.8 0 .44.18.8.4.8.22 0 .4.45.4 1s.18 1 .4 1c.22 0 .4.341.4.757 0 .417.267.86.593.985.338.13.492.493.357.843-.129.338-.036.615.207.615.244 0 .443-.36.443-.8 0-.44-.18-.8-.4-.8-.22 0-.4-.36-.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4-.373-.4-.829 0-.455-.272-1.1-.604-1.432-.332-.332-.501-.769-.376-.971.125-.203.037-.368-.196-.368s-.424-.36-.424-.8c0-.44-.18-.8-.4-.8-.22 0-.4.36-.4.8m-29.533 6.311a543.41 543.41 0 002.586 5.3c3.084 6.273 4.948 10.345 6.364 13.906.376.944.781 1.618.9 1.499.12-.119.031-.622-.196-1.117-.498-1.081-1.014-2.299-1.99-4.692-1.219-2.989-7.285-15.207-7.55-15.207-.136 0-.188.14-.114.311m-332.989.745c-.32.319.041.944.546.944.207 0 .376-.27.376-.6 0-.619-.472-.795-.922-.344m30.218 5.995c-1.727 3.492-3.563 7.429-4.08 8.749-.518 1.32-1.093 2.571-1.278 2.78-.186.209-.338.65-.338.98 0 .845.565.117 1.211-1.56.95-2.467 3.161-7.267 5.605-12.17 1.307-2.624 2.297-4.851 2.198-4.949-.098-.098-1.591 2.678-3.318 6.17M15.351 119.9a15.24 15.24 0 01-.655 1.599c-.47.983-.213 1.544.505 1.101.249-.155.354-.54.233-.856a.627.627 0 01.373-.802c.666-.256.821-1.742.18-1.742-.226 0-.513.315-.636.7m367.449-.1c0 .33.18.6.4.6.22 0 .4-.27.4-.6 0-.33-.18-.6-.4-.6-.22 0-.4.27-.4.6m.8 1.724c0 .435.256.889.569 1.009.348.133.485.538.353 1.043-.152.581-.025.824.431.824.356 0 .644-.045.641-.1-.106-1.755-1.994-4.384-1.994-2.776m-351.328 1.095c-.94 1.97-.808 2.305.175.443.446-.846.74-1.608.654-1.695-.087-.086-.46.477-.829 1.252M13.6 123.976c0 .427-.18.888-.4 1.024-.22.136-.4.597-.4 1.024 0 .427.18.776.4.776.22 0 .4-.385.4-.856s.297-1.073.661-1.339c.364-.266.533-.691.377-.944-.446-.721-1.038-.541-1.038.315m371.826 1.181c-.292.473.147 1.643.617 1.643.473 0 .461-1.489-.015-1.783a.44.44 0 00-.602.14m1.055 2.545c-.373.45-.394.705-.074.902.592.366.895.019.728-.835-.122-.625-.186-.632-.654-.067M12 128.4c0 .44.18.8.4.8.22 0 .4-.36.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4.36-.4.8m375.467 1.067c-.398.398-.322 1.333.108 1.333.206 0 .348-.36.315-.8-.068-.904-.061-.895-.423-.533m-376.267.909c0 .453.18.824.4.824.22 0 .4-.259.4-.576 0-.317-.18-.688-.4-.824-.22-.136-.4.123-.4.576m-.8 2.224c0 .55.18 1 .4 1 .22 0 .4-.45.4-1s-.18-1-.4-1c-.22 0-.4.45-.4 1m377.6-.2c0 .44.18.8.4.8.22 0 .4-.36.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4.36-.4.8m-329.945 1.645c-.201.525-.856 2.035-1.454 3.355-.598 1.32-1.353 3.03-1.678 3.8-.325.77-.755 1.713-.957 2.095-.201.382-.366.969-.366 1.305 0 .336-.18.968-.4 1.405l-.8 1.59c-.22.437-.4 1.146-.4 1.576 0 .43-.18.893-.4 1.029-.22.136-.391.732-.379 1.324.012.658.611-.553 1.542-3.124 1.759-4.852 3.683-9.674 5.089-12.749.54-1.183.89-2.243.776-2.356-.113-.113-.371.224-.573.75m-48.188.222c-.415.415-.314 1.733.133 1.733.22 0 .4-.45.4-1 0-1.047-.092-1.174-.533-.733m378.933.533c0 .44.18.8.4.8.22 0 .4-.36.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4.36-.4.8M9.067 136.667c-.415.415-.314 1.733.133 1.733.22 0 .4-.45.4-1 0-1.047-.092-1.174-.533-.733m380.533.733c0 .55.18 1 .4 1 .22 0 .4-.45.4-1s-.18-1-.4-1c-.22 0-.4.45-.4 1m-349.308.042c-.161.16-.292.567-.292.905 0 .45.118.495.445.168.245-.245.376-.652.292-.905-.085-.253-.285-.329-.445-.168m318.908 1.511c0 .33.18.711.4.847.22.136.4-.023.4-.353 0-.33-.18-.711-.4-.847-.22-.136-.4.023-.4.353M390.4 140c0 .44.18.8.4.8.22 0 .4-.36.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4.36-.4.8M8 140.4c0 .44.18.8.4.8.22 0 .4-.36.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4.36-.4.8m30.679 1.357c-.164.417-.204.852-.088.967.364.365.685-.233.533-.993-.141-.696-.162-.695-.445.026m352.521.843c0 .55.18 1 .4 1 .22 0 .4-.45.4-1s-.18-1-.4-1c-.22 0-.4.45-.4 1m-384 .376c0 .563.18 1.024.4 1.024.22 0 .4-.349.4-.776 0-.427-.18-.888-.4-1.024-.227-.14-.4.196-.4.776m353.628.1c-.015.482.152.988.372 1.124.473.292.473-.099 0-1.2-.331-.771-.345-.769-.372.076M37.027 146.8c-.615 1.87-1.265 3.94-1.445 4.6-1.23 4.513-2.1 7.85-2.452 9.4l-.774 3.4c-.842 3.684-1.859 9.935-2.148 13.2-.305 3.443.048 2.274.784-2.6.789-5.217 1.296-7.906 2.587-13.7.208-.935.491-2.24.63-2.9.138-.66.404-1.56.591-2 .358-.844.715-2.341 1.073-4.504.118-.717.376-1.402.571-1.523.196-.121.356-.649.356-1.173s.18-1.064.4-1.2c.22-.136.4-.651.4-1.144 0-.493.197-1.093.438-1.334.24-.24.363-.771.272-1.18-.095-.429-.637.693-1.283 2.658m355.052-1.6c-.051.66.091 1.2.315 1.2.223 0 .406-.54.406-1.2 0-.66-.142-1.2-.315-1.2-.173 0-.356.54-.406 1.2M6.4 145.8c0 .55.18 1 .4 1 .22 0 .4-.45.4-1s-.18-1-.4-1c-.22 0-.4.45-.4 1m355.228-.324c-.015.482.152.988.372 1.124.473.292.473-.099 0-1.2-.331-.771-.345-.769-.372.076m.812 2.6c-.022.592.14 1.188.36 1.324.22.136.4.766.4 1.4 0 .634.18 1.264.4 1.4.22.136.4.766.4 1.4 0 .634.18 1.264.4 1.4.22.136.4.856.4 1.6 0 .744.161 1.452.358 1.574.197.121.455.897.574 1.723.119.827.391 2.313.605 3.303 1.107 5.126 1.869 9.715 2.853 17.2.446 3.388.729 4.695.76 3.507.028-1.04-.142-3.2-.377-4.8-.235-1.599-.61-4.167-.834-5.707-1.361-9.36-6.174-28.706-6.299-25.324m30.36.324c0 .66.18 1.2.4 1.2.22 0 .4-.54.4-1.2 0-.66-.18-1.2-.4-1.2-.22 0-.4.54-.4 1.2M5.937 148c-.119.33-.446 1.23-.727 2-.679 1.862-.724 3.283-.11 3.494.351.121.5-.362.5-1.627 0-.99.196-1.866.435-1.945.239-.08.364-.68.276-1.334-.096-.716-.244-.95-.374-.588m370.875 2.4c0 .33.175.87.388 1.2.345.533.388.533.388 0 0-.33-.175-.87-.388-1.2-.345-.533-.388-.533-.388 0M393.6 152c0 .73.208 1.2.531 1.2.362 0 .475-.381.354-1.2-.097-.66-.335-1.2-.53-1.2s-.355.54-.355 1.2m-45.572.276c.09 1.039.716 1.92.744 1.048.015-.482-.152-.988-.372-1.124-.22-.136-.387-.102-.372.076m-297.361.791c-.147.146-.256.641-.242 1.1.024.766.057.756.409-.125.392-.979.31-1.453-.167-.975m326.989.133c0 .33.155.96.344 1.4.217.504.344.578.344.2 0-.33-.155-.96-.344-1.4-.217-.504-.344-.578-.344-.2m-356.627 1.429c-.148.586-.191 1.143-.097 1.237.095.094.292-.308.439-.895.148-.586.191-1.143.097-1.237-.095-.094-.292.308-.439.895m373.384.704c-.009 1.053.144 1.481.487 1.367.745-.248.802-1.212.124-2.108-.565-.748-.599-.707-.611.741m-45.585-.457c.068 1.268.714 2.178.744 1.048.015-.592-.152-1.188-.372-1.324-.22-.136-.387-.012-.372.276m-344.961.191c-.524.523-.272 2.133.333 2.133.4 0 .6-.4.6-1.2 0-1.147-.36-1.507-.933-.933m45.761 1.633c.025.975.067 1.009.372.3.469-1.093.469-1.4 0-1.4-.22 0-.387.495-.372 1.1m328.828-.3c0 .33.155.96.344 1.4.217.504.344.578.344.2 0-.33-.155-.96-.344-1.4-.217-.504-.344-.578-.344-.2M20.25 157.65c-.333 1.667-.01 1.99.35.35.152-.691.193-1.341.091-1.442-.102-.102-.3.389-.441 1.092m329.378.026c.068 1.268.714 2.178.744 1.048.015-.592-.152-1.188-.372-1.324-.22-.136-.387-.012-.372.276M3.012 159.319c-.334 1.648-.065 2.294.657 1.572.325-.325.341-.836.054-1.774l-.402-1.317-.309 1.519m392.351-.768c-.327.853-.052 1.953.537 2.149.326.109.5-.253.5-1.043 0-1.335-.673-2.053-1.037-1.106m-346.296.116c-.147.146-.256.641-.242 1.1.024.766.057.756.409-.125.392-.979.31-1.453-.167-.975m330.201 1.133c-.006.44.143 1.16.332 1.6.438 1.019.438-.032 0-1.4-.257-.804-.323-.843-.332-.2m-28.84 1.076c.068 1.268.714 2.178.744 1.048.015-.592-.152-1.188-.372-1.324-.22-.136-.387-.012-.372.276m-302.136.566c-.161.16-.281.756-.267 1.325l.026 1.033.386-.966c.416-1.04.33-1.867-.145-1.392m347.871 1.509c-.327.853-.052 1.953.537 2.149.326.109.5-.253.5-1.043 0-1.335-.673-2.053-1.037-1.106m-393.87.09c-.448.447-.349 2.559.12 2.559.226 0 .52-.28.651-.622.286-.745-.355-2.354-.771-1.937m348.941.759c.038 1.366.704 2.642.732 1.4.012-.55-.153-1.27-.366-1.6-.32-.495-.384-.46-.366.2m-303.602.307c-.018.169-.375 1.969-.794 4-2.576 12.482-3.012 17.045-3.007 31.493.003 12.015.416 17.423 2.093 27.4.675 4.016 1.786 8.432 1.98 7.87.101-.292-.029-1.372-.289-2.4-4.725-18.739-4.7-46.6.061-65.94.226-.918.316-1.908.199-2.2-.116-.291-.226-.392-.243-.223m349.36 3.595c-.276 1.47-.048 2.298.632 2.298.479 0 .481-2.415.002-3.172-.269-.425-.433-.199-.634.874m-44.826.298c2.246 11.184 2.834 17.695 2.834 31.4 0 11.176-.278 15.791-1.41 23.4-.355 2.39-.587 3.739-1.409 8.2-.162.88-.181 1.498-.043 1.373.316-.288 1.654-7.159 2.213-11.373l.874-6.6c.526-3.981.262-27.994-.363-33-.804-6.448-2.215-14.099-2.678-14.525-.164-.151-.172.355-.018 1.125m28.727 0c0 .77.082 1.085.183.7.1-.385.1-1.015 0-1.4-.101-.385-.183-.07-.183.7M1.2 169.4c0 .99.18 1.8.4 1.8.22 0 .4-.81.4-1.8s-.18-1.8-.4-1.8c-.22 0-.4.81-.4 1.8m16.901-.4c.004.88.086 1.193.182.695.096-.497.092-1.217-.008-1.6-.1-.382-.179.025-.174.905m363.6 4c.004.88.086 1.193.182.695.096-.497.092-1.217-.008-1.6-.1-.382-.179.025-.174.905m16.145.361c-.29 1.152.112 3.439.604 3.439.193 0 .35-.99.35-2.2 0-2.261-.526-2.945-.954-1.239m-380.545.839c.004.88.086 1.193.182.695.096-.497.092-1.217-.008-1.6-.1-.382-.179.025-.174.905M.4 175.4c0 1.21.18 2.2.4 2.2.22 0 .4-.99.4-2.2 0-1.21-.18-2.2-.4-2.2-.22 0-.4.99-.4 2.2m382.114 3.6c.003 1.1.081 1.503.173.895.092-.609.09-1.509-.005-2-.095-.492-.171.005-.168 1.105M16.52 180.8c0 1.21.075 1.705.167 1.1a8.899 8.899 0 000-2.2c-.092-.605-.167-.11-.167 1.1m382.28 1.776c0 1.749.169 3.024.4 3.024.228 0 .4-1.192.4-2.776 0-1.527-.18-2.888-.4-3.024-.253-.156-.4.863-.4 2.776m-369.36.342c-.185 1.495-.237 2.818-.114 2.941.354.354.746-2.342.592-4.077-.121-1.365-.187-1.21-.478 1.136M.14 184c0 1.87.069 2.635.153 1.7.084-.935.084-2.465 0-3.4S.14 182.13.14 184m15.718 3.25c-.142 1.357-.229 4.556-.194 7.109.059 4.324.083 4.164.356-2.359.309-7.404.261-8.803-.162-4.75m367.482.75c0 1.87.069 2.635.153 1.7.084-.935.084-2.465 0-3.4s-.153-.17-.153 1.7m-13.179 11.4c-.001 7.04.122 11.63.272 10.2.353-3.354.354-17.029.002-20.4-.149-1.43-.273 3.16-.274 10.2M28.66 195.5c-.133 3.245-.094 7.88.088 10.3.29 3.857.339 3.129.392-5.9.067-11.543-.117-13.234-.48-4.4m371.064.3c.002 1.32.077 1.812.166 1.093.089-.719.087-1.799-.004-2.4s-.164-.013-.162 1.307m-16 4c.002 1.32.077 1.812.166 1.093.089-.719.087-1.799-.004-2.4s-.164-.013-.162 1.307m15.969-.2c0 .77.082 1.085.183.7.1-.385.1-1.015 0-1.4-.101-.385-.183-.07-.183.7m-383.936 6c0 2.97.063 4.185.14 2.7a63.146 63.146 0 000-5.4c-.077-1.485-.14-.27-.14 2.7m383.967-2.2c.002 1.32.077 1.812.166 1.093.089-.719.087-1.799-.004-2.4s-.164-.013-.162 1.307m-16.384 7.8c0 1.87.069 2.635.153 1.7.084-.935.084-2.465 0-3.4s-.153-.17-.153 1.7m-367.231 1.6c0 .99.078 1.395.173.9a5.661 5.661 0 000-1.8c-.095-.495-.173-.09-.173.9M.14 215.2c0 1.87.069 2.635.153 1.7.084-.935.084-2.465 0-3.4s-.153-.17-.153 1.7m29.123-.6c-.009.88.132 2.32.314 3.2.329 1.591.331 1.588.337-.6.003-1.21-.138-2.65-.314-3.2-.276-.861-.323-.778-.337.6m339.821 4.2c-.895 7.256-1.548 11.248-2.747 16.8-.214.99-.486 2.476-.605 3.303-.119.826-.377 1.602-.574 1.723-.197.122-.358.83-.358 1.574 0 .744-.18 1.464-.4 1.6-.22.136-.4.766-.4 1.4 0 .634-.18 1.264-.4 1.4-.22.136-.4.766-.4 1.4 0 .634-.18 1.264-.4 1.4-.22.136-.382.732-.36 1.324.095 2.559 3.799-11.346 5.547-20.824 1.111-6.024 2.11-13.947 1.954-15.5-.079-.787-.454 1.138-.857 4.4m29.584-3.542c-.248 2.094-.117 2.742.556 2.742.207 0 .376-1.08.376-2.4 0-2.938-.599-3.158-.932-.342m-15.775.742c0 .77.082 1.085.183.7.1-.385.1-1.015 0-1.4-.101-.385-.183-.07-.183.7m-366.446 2.233c.026 1.082.188 2.507.359 3.167.182.703.222-.042.097-1.8-.246-3.441-.526-4.282-.456-1.367m366.067 2.367c.003 1.1.081 1.503.173.895.092-.609.09-1.509-.005-2-.095-.492-.171.005-.168 1.105m-352.482.576c-.018.757.162 2.467.399 3.8.237 1.333.606 3.414.819 4.624 1.24 7.024 3.977 18.391 5.112 21.232l.387.968.026-1.076c.014-.592-.155-1.188-.375-1.324-.22-.136-.4-.766-.4-1.4 0-.634-.16-1.252-.356-1.373-.195-.121-.452-.806-.571-1.523a47.886 47.886 0 00-.666-3.104 165.75 165.75 0 01-1.625-7.2c-.864-4.201-1.154-5.822-1.787-10-.735-4.844-.919-5.538-.963-3.624m-29.365.691C.24 222.294.359 226 .8 226c.22 0 .4-.99.4-2.2 0-2.225-.052-2.414-.533-1.933m397.176 1.166c-.455 1.186-.263 2.567.357 2.567.433 0 .6-.444.6-1.6 0-1.616-.51-2.132-.957-.967M17.301 225c.004.88.086 1.193.182.695.096-.497.092-1.217-.008-1.6-.1-.382-.179.025-.174.905m364.4 1.6c.004.88.086 1.193.182.695.096-.497.092-1.217-.008-1.6-.1-.382-.179.025-.174.905M1.2 229.776c0 1.003.18 1.824.4 1.824.22 0 .4-.709.4-1.576 0-.867-.18-1.688-.4-1.824-.244-.151-.4.463-.4 1.576m16.893.224c0 .77.082 1.085.183.7.1-.385.1-1.015 0-1.4-.101-.385-.183-.07-.183.7m378.974-.933c-.536.535-.277 2.4.333 2.4.413 0 .6-.415.6-1.334 0-1.264-.343-1.656-.933-1.066m-16.174 2.133c0 .77.082 1.085.183.7.1-.385.1-1.015 0-1.4-.101-.385-.183-.07-.183.7m-29.471 2.729c-.164.73-.2 1.427-.08 1.547.301.301.778-1.72.557-2.359-.098-.284-.313.081-.477.812m-332.529.471c0 .77.082 1.085.183.7.1-.385.1-1.015 0-1.4-.101-.385-.183-.07-.183.7m361.363-.316c-.135.504-.229 1.276-.21 1.716.019.44.199.098.4-.76.39-1.662.224-2.5-.19-.956m-378.25.616c.009 1.653.627 2.421.941 1.17.276-1.102-.027-2.27-.59-2.27-.196 0-.354.495-.351 1.1m394.026.8c.017.825.122 1.274.234.998.111-.277.367-.401.568-.277.201.124.366-.324.366-.997 0-.821-.197-1.224-.6-1.224-.432 0-.591.419-.568 1.5m-347.998.9c-.012.55.153 1.27.366 1.6.509.787.509-.616 0-1.8-.315-.733-.346-.716-.366.2m-28.572 1c.134.88.31 1.675.391 1.767.303.343.076-1.799-.272-2.567-.252-.558-.288-.315-.119.8m331.2-.053c-.165.631-.206 1.242-.091 1.357.322.323.716-.966.544-1.781-.112-.533-.231-.422-.453.424M379.4 238.4c-.152.691-.193 1.341-.091 1.442.102.102.3-.389.441-1.092.141-.703.181-1.352.091-1.442-.091-.091-.289.401-.441 1.092m16.3-.135c-.301.121-.478.864-.446 1.868.035 1.05.122 1.31.237.702.141-.746.263-.837.539-.4.248.391.36.103.364-.935.003-.825-.039-1.486-.094-1.468-.055.017-.325.122-.6.233M2.8 239.576c0 1.457.624 1.931.949.72.381-1.423.294-1.896-.349-1.896-.397 0-.6.397-.6 1.176m46.028.1c-.015.592.152 1.188.372 1.324.478.295.478-.489 0-1.6-.307-.714-.347-.685-.372.276m301.218.191c-.025.257-.162.797-.305 1.2-.201.569-.147.63.238.275.273-.251.41-.791.305-1.2-.105-.408-.212-.532-.238-.275m28.583 1.962c-.148.586-.191 1.143-.097 1.237.095.094.292-.308.439-.895.148-.586.191-1.143.097-1.237-.095-.094-.292.308-.439.895m-329.023.847c-.003.482.174.988.394 1.124.509.315.509-.612 0-1.4-.315-.488-.389-.436-.394.276m-45.933.736c.07.557.307 1.013.527 1.013.22 0 .457-.456.527-1.013.09-.721-.062-1.012-.527-1.012s-.617.291-.527 1.012m345.573-.745c-.025.257-.162.797-.305 1.2-.201.569-.147.63.238.275.273-.251.41-.791.305-1.2-.105-.408-.212-.532-.238-.275m45.154.566c0 .975.935.837 1.129-.166.077-.395-.127-.667-.5-.667-.371 0-.629.342-.629.833m-373.544.367c0 .33.155.96.344 1.4.217.504.344.578.344.2 0-.33-.155-.96-.344-1.4-.217-.504-.344-.578-.344-.2m29.57 1.676c-.014.592.154 1.188.374 1.324.22.136.4.676.4 1.2 0 .524.18 1.064.4 1.2.22.136.4.676.4 1.2 0 .524.18 1.064.4 1.2.22.136.4.599.4 1.029 0 .43.159 1.094.353 1.476.195.382.531 1.145.747 1.695.366.933.754 1.883 1.673 4.1 1.339 3.231 3.666 7.995 3.827 7.834.106-.106-.238-1.08-.764-2.163A93.483 93.483 0 0157.087 262c-.327-.77-.953-2.21-1.393-3.2-.838-1.887-1.251-3.018-3.726-10.2-.895-2.596-1.527-3.959-1.542-3.324m297.836.471c-.165.631-.206 1.242-.091 1.357.322.323.716-.966.544-1.781-.112-.533-.231-.422-.453.424m45.838.141c-.564.201-.693 1.712-.147 1.712.195 0 .458-.397.584-.883.267-1.017.239-1.07-.437-.829m-389.7.679c0 .868.444 1.833.843 1.833.196 0 .357-.54.357-1.2 0-.8-.2-1.2-.6-1.2-.33 0-.6.255-.6.567m342.871 2.475a154.836 154.836 0 01-3.325 8.858l-.78 1.9c-.18.44-1.06 2.401-1.955 4.358-.896 1.957-1.549 3.638-1.452 3.734.192.192 3.473-6.681 4.627-9.692.53-1.382 1.293-3.173 1.661-3.895a3.88 3.88 0 00.353-1.476c0-.43.18-.893.4-1.029.22-.136.4-.651.4-1.144 0-.493.197-1.093.438-1.334.24-.24.375-.752.3-1.138-.088-.447-.329-.138-.667.858M5.529 250.245c.087.745.319 1.355.515 1.355.56 0 .416-2.292-.158-2.512-.374-.143-.472.173-.357 1.157M392.8 250c0 .44.18.8.4.8.22 0 .4-.36.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4.36-.4.8m-355.972 2.3c.11 1.173.718 1.826.744.8.015-.605-.152-1.1-.372-1.1s-.387.135-.372.3m325.039-.033c-.147.146-.256.641-.242 1.1.024.766.057.756.409-.125.392-.979.31-1.453-.167-.975M6.4 253.4c0 .55.18 1 .4 1 .22 0 .4-.45.4-1s-.18-1-.4-1c-.22 0-.4.45-.4 1m385.6-.2c0 .44.18.8.4.8.22 0 .4-.36.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4.36-.4.8m-354.372 1.476c.09 1.039.716 1.92.744 1.048.015-.482-.152-.988-.372-1.124-.22-.136-.387-.102-.372.076M7.2 256.4c0 .66.18 1.2.4 1.2.22 0 .4-.54.4-1.2 0-.66-.18-1.2-.4-1.2-.22 0-.4.54-.4 1.2m384-.4c0 .44.18.8.4.8.22 0 .4-.36.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4.36-.4.8M8 258.976c0 .563.18 1.024.4 1.024.22 0 .4-.349.4-.776 0-.427-.18-.888-.4-1.024-.227-.14-.4.196-.4.776m382.4-.376c0 .33.18.6.4.6.22 0 .4-.27.4-.6 0-.33-.18-.6-.4-.6-.22 0-.4.27-.4.6m-381.6 3c0 .44.18.8.4.8.22 0 .4-.36.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4.36-.4.8m349.754-.157c-.375 1.07-2.525 6.131-3.194 7.518-.308.639-.56 1.404-.56 1.7 0 .297-.18.539-.4.539-.22 0-.4.241-.4.536 0 .295-.9 2.304-2.001 4.466-1.1 2.161-1.918 4.012-1.817 4.113.202.203 5.251-9.869 6.374-12.715.774-1.963 1.684-4.09 2.352-5.499.235-.495.311-1.016.169-1.158-.142-.141-.378.083-.523.5M40.8 263.139c0 .259.165.784.366 1.166.202.382.633 1.325.958 2.095 2.466 5.836 5.932 12.878 6.204 12.605.1-.099-.818-2.211-2.038-4.693-1.221-2.482-2.881-6.042-3.689-7.912-1.542-3.567-1.801-4.035-1.801-3.261M9.6 264.2c0 .55.18 1 .4 1 .22 0 .4-.45.4-1s-.18-1-.4-1c-.22 0-.4.45-.4 1m379.055-.4c-.14.365 0 .6.358.6.323 0 .587-.27.587-.6 0-.33-.161-.6-.357-.6-.197 0-.461.27-.588.6m-377.988 2.067c-.415.415-.314 1.733.133 1.733.22 0 .4-.45.4-1 0-1.047-.092-1.174-.533-.733m377.2 0c-.514.514-.268 1.308.333 1.078.33-.127.6-.481.6-.788 0-.588-.485-.739-.933-.29M370.1 268.7c-.487 1.237-.822 2.311-.745 2.389.077.077.547-.863 1.045-2.089.498-1.226.833-2.301.745-2.389-.088-.087-.558.852-1.045 2.089m-358.9.3c0 .55.18 1 .4 1 .22 0 .4-.45.4-1s-.18-1-.4-1c-.22 0-.4.45-.4 1m375.867-.733c-.147.146-.267.609-.267 1.028 0 .677.067.695.6.162.33-.33.6-.793.6-1.028 0-.48-.525-.571-.933-.162m-49.248 2.896c-.352.68-.5 1.236-.329 1.234.365-.004 1.379-2.062 1.135-2.305-.091-.092-.454.39-.806 1.071M12 271c0 .33.18.6.4.6.22 0 .4-.27.4-.6 0-.33-.18-.6-.4-.6-.22 0-.4.27-.4.6m374 0c0 .33.27.6.6.6.33 0 .6-.27.6-.6 0-.33-.27-.6-.6-.6-.33 0-.6.27-.6.6m-355.393 1.679c.6 1.435.993 2.083.993 1.637 0-.432-1.215-3.116-1.411-3.116-.11 0 .078.666.418 1.479m30.593-.912c0 .311.135.626.3.7.165.073.679.853 1.142 1.733 2.025 3.846 3.642 6.603 5.532 9.435 2.752 4.121 6.197 9.114 6.84 9.911 6.674 8.27 7.877 9.654 8.395 9.654.206 0-3.533-4.586-4.239-5.2-2.262-1.965-13.504-18.7-16.323-24.3-1.271-2.526-1.647-2.967-1.647-1.933m324.5.526c-.275.096-.5.609-.5 1.14 0 .532-.18.967-.4.967-.22 0-.4.45-.4 1s-.18 1-.4 1c-.22 0-.4.27-.4.6 0 .33.27.6.6.6.373 0 .6-.378.6-1 0-.55.18-1 .4-1 .22 0 .4-.525.4-1.167 0-.641.207-1.235.46-1.32.253-.084.388-.342.3-.573-.088-.231-.385-.342-.66-.247m-372.9.907c0 .44.18.8.4.8.22 0 .4-.36.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4.36-.4.8m321.223 4.901c-4.39 7.46-10.224 15.635-15.699 21.999-1.088 1.265-1.868 2.3-1.733 2.3.351 0 1.765-1.486 3.613-3.796.878-1.098 2.001-2.447 2.496-2.996.495-.55.9-1.124.9-1.275 0-.152.231-.514.513-.804.282-.291.949-1.159 1.481-1.929.532-.77 1.088-1.49 1.235-1.6.525-.392 7.171-10.742 7.171-11.167 0-.238.136-.433.302-.433.167 0 .557-.585.868-1.3.311-.715.737-1.414.947-1.554a.642.642 0 00.232-.699c-.082-.245-1.129 1.219-2.326 3.254M13.6 275.433c0 .707.861.584 1.108-.158.087-.261-.126-.475-.475-.475a.635.635 0 00-.633.633m.871 1.988c.181.869.89.922 1.053.079.084-.438-.112-.7-.524-.7-.384 0-.605.259-.529.621m368.329 1.336c0 .197.27.461.6.588.365.14.6 0 .6-.358a.595.595 0 00-.6-.587c-.33 0-.6.161-.6.357m-367.345.643c.127.33.391.6.588.6.196 0 .357-.27.357-.6 0-.33-.264-.6-.587-.6-.358 0-.498.235-.358.6m33.906 2.1c1.066 2.076 2.206 3.696 2.226 3.162.007-.186-.319-.816-.724-1.4-.406-.584-.99-1.647-1.298-2.362-.308-.715-.699-1.3-.869-1.3-.17 0 .129.855.665 1.9m-33.083-.844c-.32.319.041.944.546.944.207 0 .376-.27.376-.6 0-.619-.472-.795-.922-.344M382 281c0 .33.18.6.4.6.22 0 .4-.27.4-.6 0-.33-.18-.6-.4-.6-.22 0-.4.27-.4.6m-32.946.773c-.36.55-.654 1.072-.654 1.161 0 .562-9.662 15.694-10.386 16.266-.139.11-.682.83-1.208 1.6a43.518 43.518 0 01-1.981 2.643 140.46 140.46 0 00-1.625 2.006c-.99 1.26-4.174 5.136-4.395 5.351-.113.11-.892.979-1.733 1.932l-1.527 1.731-4.464-4.331c-2.455-2.383-3.568-3.342-2.472-2.132 1.095 1.21 3.134 3.28 4.532 4.6l2.541 2.4 1.612-1.8c7.594-8.475 14.833-18.488 20.787-28.754 1.797-3.098 2.478-4.97.973-2.673m-331.746 1.399c.032.425.201.684.375.577.444-.274.397-1.349-.058-1.349-.206 0-.349.348-.317.772m.692 1.416c0 .323.36 1.229.8 2.012.44.783.8 1.689.8 2.012 0 .323.18.588.4.588.22 0 .4.36.4.8 0 .44.135.801.3.803.359.004 1.3 1.941 1.3 2.677 0 .286.168.52.374.52s.602.63.88 1.4c.519 1.434 1.146 1.872 1.146.8 0-.33-.18-.6-.4-.6-.22 0-.4-.36-.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4-.36-.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4-.36-.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4-.36-.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4-.36-.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4-.36-.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4-.45-.4-1s-.18-1-.4-1c-.22 0-.4.265-.4.588m33.609.832c.005.209.361.83.791 1.38.43.55.786 1.14.791 1.312.044 1.551 11.63 17.21 19.377 26.188 1.134 1.315 1.417 1.187 4.437-2 1.511-1.595 3.831-4.023 5.155-5.396 1.995-2.067 2.315-2.582 1.866-3-.343-.318-.447-.332-.282-.038.285.509-9.166 10.534-9.93 10.534-.42 0-3.302-3.049-5.214-5.514a74.728 74.728 0 00-2.033-2.459c-.678-.785-2.176-2.687-3.329-4.227a423.478 423.478 0 00-2.567-3.406c-.259-.333-.726-1.098-1.039-1.7-.312-.602-.695-1.094-.851-1.094-.156 0-.508-.54-.781-1.2-.273-.66-.655-1.2-.849-1.2-.193 0-.351-.174-.351-.386 0-.361-4.113-6.956-4.861-7.794-.214-.24-.336-.24-.33 0M378.8 287.8c0 .33.18.6.4.6.22 0 .4-.27.4-.6 0-.33-.18-.6-.4-.6-.22 0-.4.27-.4.6m-340.785 0c.002.22.371.85.821 1.4.543.664.679.731.404.2-.674-1.305-1.228-2.028-1.225-1.6m322.238 1.5l-.72 1.3.825-1c.731-.887 1.056-1.6.728-1.6-.062 0-.437.585-.833 1.3m-320.638 1.3c.002.22.371.85.821 1.4.543.664.679.731.404.2-.674-1.305-1.228-2.028-1.225-1.6m337.573.7c-.284.605-.668 1.1-.852 1.1-.185 0-.336.36-.336.8 0 .44-.18.8-.4.8-.22 0-.4.36-.4.8 0 .44-.146.8-.325.8-.179 0-.573.63-.875 1.4-.302.77-.675 1.4-.828 1.4-.153 0-.39.315-.526.7a15.73 15.73 0 01-.48 1.2c-.134.288.036.5.401.5.366 0 .633-.337.633-.8 0-.44.18-.8.4-.8.22 0 .4-.371.4-.824 0-.453.18-.712.4-.576.22.136.4-.123.4-.576 0-.453.18-.824.4-.824.22 0 .4-.36.4-.8 0-.44.18-.8.4-.8.22 0 .4-.36.4-.8 0-.44.18-.8.4-.8.22 0 .4-.345.4-.767 0-.421.207-.835.46-.92.253-.084.367-.414.252-.733-.146-.409-.36-.255-.724.52m-18.535.8l-.72 1.3.825-1c.731-.887 1.056-1.6.728-1.6-.062 0-.437.585-.833 1.3m-2.336 3.8c-1.232 1.869-2 3.3-1.771 3.3.096 0 .529-.601.962-1.335a73.158 73.158 0 011.486-2.4c.384-.586.611-1.065.505-1.065-.106 0-.638.675-1.182 1.5m-313.087.7c.494.88 1.07 1.78 1.28 2 .599.628-.771-1.906-1.514-2.8-.366-.44-.261-.08.234.8m-18.83 1.2c0 .367.194.602.43.523.237-.078.43-.314.43-.523 0-.209-.193-.444-.43-.523-.236-.079-.43.156-.43.523m.8 1.209c0 .114.474.924 1.053 1.8C27.266 302.339 28 302.84 28 302c0-.22-.18-.4-.4-.4-.22 0-.4-.36-.4-.8 0-.44-.18-.8-.4-.8-.22 0-.4-.27-.4-.6 0-.33-.27-.6-.6-.6-.33 0-.6.094-.6.209m346 2.791c0 .33.18.6.4.6.22 0 .4-.27.4-.6 0-.33-.18-.6-.4-.6-.22 0-.4.27-.4.6m-19.616 1.423c-.479.673-.805 1.29-.723 1.371.082.082.553-.468 1.047-1.223 1.115-1.7.863-1.815-.324-.148M48.037 304c1.159 1.796 1.163 1.801 1.161 1.367-.001-.202-.466-.907-1.033-1.567l-1.031-1.2.903 1.4m267.422-.465c-.624.689-.612.783.194 1.5.856.761.858.76.328-.103-.44-.716-.441-.977-.008-1.5.732-.881.298-.795-.514.103M28 303.6c0 .22.146.4.325.4.179 0 .574.632.877 1.404.399 1.019.666 1.279.974.95.301-.322.278-.507-.076-.637-.275-.101-.5-.452-.5-.779 0-.58-.914-1.738-1.371-1.738-.126 0-.229.18-.229.4m2.4 4.029c0 .449.979 1.571 1.371 1.571.434 0 .228-.858-.342-1.429-.681-.68-1.029-.728-1.029-.142m317.2 1.171c-.47.66-.764 1.2-.654 1.2.11 0 .584-.54 1.054-1.2.47-.66.764-1.2.654-1.2-.11 0-.584.54-1.054 1.2m17.969 1.9c-1.156 1.705-2.207 3.19-2.336 3.3-.129.11-.489.695-.801 1.3-.312.605-.717 1.1-.9 1.1-.182 0-.332.18-.332.4 0 .22.27.4.6.4.354 0 .603-.369.606-.9.005-.728.08-.785.394-.3.32.496.389.459.394-.212.003-.446.366-1.071.806-1.388.44-.317.8-.857.8-1.2 0-.343.36-.883.8-1.2.44-.317.8-.814.8-1.105 0-.291.36-.915.8-1.387.706-.758 1.089-1.908.635-1.908-.091 0-1.11 1.395-2.266 3.1M52 309.6c.47.66.944 1.2 1.054 1.2.11 0-.184-.54-.654-1.2-.47-.66-.944-1.2-1.054-1.2-.11 0 .184.54.654 1.2m-20 .429c0 .639 1.195 1.712 1.519 1.364.155-.166.056-.383-.219-.481-.275-.098-.5-.434-.5-.745 0-.312-.18-.567-.4-.567-.22 0-.4.193-.4.429m312.783 2.471c-.743.935-1.035 1.446-.648 1.136.728-.585 2.442-2.836 2.159-2.836-.088 0-.768.765-1.511 1.7m-311.17-.275c.02.605 1.156 1.939 1.423 1.672.134-.134-.134-.65-.596-1.146-.462-.496-.834-.733-.827-.526m1.939 2.564c-.116.323.199.998.7 1.5.853.852 1.748 1.202 1.748.682 0-.379-1.115-1.371-1.542-1.371-.22 0-.466-.315-.548-.7-.118-.559-.19-.582-.358-.111m306.203 1.492c-.848 1.035-1.333 1.753-1.078 1.595.544-.336 3.078-3.476 2.805-3.476-.102 0-.879.847-1.727 1.881m-252.261 3.625c-2.802 2.808-5.094 5.293-5.094 5.522 0 .633 9.878 8.961 15 12.645 2.583 1.858 10.357 7.002 11.96 7.913a198.36 198.36 0 012.74 1.599c.825.492 1.5.696 1.5.455 0-.242-.185-.44-.411-.44-.352 0-6.635-3.78-7.789-4.686-.22-.173-.895-.569-1.5-.882-.605-.312-1.1-.717-1.1-.9 0-.182-.236-.332-.525-.332-.288 0-.911-.36-1.383-.8-.472-.44-1.046-.8-1.275-.8a.41.41 0 01-.417-.4c0-.22-.178-.4-.395-.4-.218 0-.713-.257-1.1-.571-.388-.315-1.875-1.48-3.305-2.589-1.43-1.11-3.07-2.428-3.644-2.929a52.173 52.173 0 00-2.37-1.911c-.729-.55-2.149-1.76-3.156-2.689-1.006-.928-1.965-1.693-2.13-1.7-.772-.029.053-1.033 4.719-5.744 5.802-5.856 5.008-5.413 6.689-3.732 1.137 1.137 4.713 4.123 9.328 7.79.64.508 1.659 1.222 2.264 1.586.605.364 1.1.803 1.1.975 0 .173.27.314.6.314.33 0 .6.18.6.4 0 .22.255.4.567.4.311 0 .626.149.7.331.236.587 9.912 6.661 12.28 7.71.689.305 1.253.69 1.253.857 0 .166.345.302.767.302.421 0 .835.207.92.46.084.253.384.383.666.289.282-.094-1.257-1.137-3.42-2.319-2.163-1.181-4.958-2.841-6.211-3.689-1.253-.848-2.391-1.541-2.528-1.541-.516 0-12.016-8.457-14.933-10.981a1119.11 1119.11 0 01-3.174-2.769c-2.671-2.338-1.883-2.667-7.793 3.256m214.281-4.665c-.182.294-.13.379.133.216.452-.28 10.492 9.282 10.492 9.992 0 .224-.831 1.115-1.847 1.979a103.748 103.748 0 00-2.703 2.372c-.471.44-1.514 1.292-2.318 1.894-.805.602-1.704 1.322-1.999 1.6-.398.376-5.468 4.223-7.1 5.387-.091.065-.086.2.013.299.348.347 9.322-6.705 15.654-12.301 1.444-1.276 1.801-.711-4.125-6.54-5.616-5.522-5.749-5.628-6.2-4.898m-246.557.935c1.218 1.623 3.582 4.221 3.572 3.925-.005-.165-.95-1.302-2.1-2.525-1.149-1.224-1.812-1.854-1.472-1.4m245.414-.228c-.137.221-1.91 1.779-3.94 3.462-4.608 3.819-4.212 3.51-8.404 6.552-1.931 1.401-3.391 2.658-3.245 2.793.147.135.347.02.445-.255.098-.275.434-.5.745-.5.312 0 .567-.18.567-.4 0-.22.27-.4.6-.4.33 0 .6-.141.6-.314 0-.172.533-.629 1.185-1.014s1.417-.92 1.7-1.188c.283-.269 1.865-1.52 3.515-2.78 3.676-2.809 6.99-5.847 6.697-6.14-.119-.119-.329-.037-.465.184M38 318.505c0 .278.447.841.992 1.25.546.41.896.903.777 1.095-.119.193-.026.35.207.35.233 0 .424.188.424.418 0 .581 1.994 2.521 2.288 2.227.132-.132-.149-.577-.624-.989-.475-.413-.864-.954-.864-1.203 0-.249-.18-.453-.4-.453-.22 0-.4-.27-.4-.6 0-.33-.18-.6-.4-.6-.22 0-.4-.193-.4-.429 0-.449-.979-1.571-1.371-1.571-.126 0-.229.227-.229.505m321.3.893c-.275.313-.5.724-.5.915 0 .191-.472.784-1.048 1.317-.576.534-1.458 1.6-1.96 2.37-.501.77-1.56 2.075-2.352 2.901-.792.825-1.44 1.598-1.44 1.717 0 .118-.358.6-.796 1.07-.862.925-.768 1.512.123.772.301-.249.665-.335.81-.19.145.145.263-.087.263-.515 0-.428.36-1.038.8-1.355.44-.317.8-.821.8-1.12 0-.298.72-1.234 1.6-2.08.88-.846 1.6-1.832 1.6-2.192 0-.36.18-.544.4-.408.22.136.4.033.4-.229 0-.263.332-.768.737-1.124.871-.764 1.828-2.454 1.377-2.432-.173.009-.539.271-.814.583m-22.496 2.702c-1.407 1.595-2.055 2.45-1.441 1.9 1.179-1.056 4.421-4.8 4.156-4.8-.086 0-1.307 1.305-2.715 2.9m-273.3 1.3c2.443 2.804 10.662 10.967 13.298 13.208.771.656-.527-.661-2.883-2.925a342.896 342.896 0 01-8.57-8.6c-2.357-2.466-3.187-3.223-1.845-1.683M42.8 325.023c0 .123.795 1.008 1.768 1.966.972.958 1.662 1.848 1.533 1.977s-.024.234.232.234c.882 0 .464-.824-1.322-2.611-1.706-1.705-2.211-2.063-2.211-1.566m240 6.039a174.994 174.994 0 01-6.777 4.012c-1.857 1.031-3.141 1.953-2.854 2.049.288.096.638.018.777-.174.14-.192.974-.726 1.854-1.187 2.665-1.397 4.496-2.478 7.517-4.438 3.464-2.248 3.255-2.092 3.05-2.262-.092-.076-1.697.824-3.567 2m-235.742-1.187c-.143.143 1.013 1.508 2.568 3.032 3.682 3.61 4.081 3.211.468-.467-1.527-1.554-2.892-2.708-3.036-2.565m300.142 4.207c-1.288 1.641-10.026 10.445-12.5 12.594-1.045.908-1.9 1.757-1.9 1.887 0 .773 1.238-.173 4.404-3.367 1.965-1.982 3.803-3.557 4.084-3.5.282.057.465-.126.408-.408-.057-.281 1.518-2.119 3.5-4.084 3.271-3.243 4.148-4.411 3.304-4.4-.165.002-.75.577-1.3 1.278m-25.4 2.983c-2.75 2.587-2.757 2.598-.357.595 2.234-1.866 3.679-3.284 3.306-3.244-.082.008-1.409 1.201-2.949 2.649m-241.501 2.646c2.48 2.165 3.246 2.568 1.101.579-1.1-1.02-2.136-1.862-2.301-1.872-.166-.01.374.572 1.2 1.293m-24.843-.634c-.255.256 4.003 4.523 4.513 4.523.194 0-.193-.585-.858-1.3-2.157-2.316-3.435-3.443-3.655-3.223m241.119.823c-.426.385-1.27.955-1.875 1.268-.605.312-1.1.717-1.1.9 0 .182-.182.332-.405.332-.222 0-1.617.783-3.1 1.74a245.188 245.188 0 01-3.83 2.432c-.624.381-1.041.785-.928.899.114.113 1.017-.351 2.007-1.032.99-.682 1.909-1.239 2.041-1.239.343 0 8.615-5.578 8.615-5.809 0-.405-.682-.161-1.425.509m-30.775.519c-6.174 2.848-10.877 4.754-15.6 6.32-2.315.768-2.927 1.099-2.213 1.2.543.077 1.053-.058 1.133-.3.081-.241.571-.439 1.09-.439.518 0 1.054-.18 1.19-.4.136-.22.651-.4 1.144-.4.493 0 1.067-.143 1.276-.318.209-.175 1.1-.56 1.98-.854 1.804-.604 3.761-1.431 8.4-3.551 3.694-1.687 3.585-1.628 3.367-1.837-.092-.088-.887.172-1.767.579m51.37.681l-.97 1.1 1.2-1c.66-.55 1.275-1.045 1.367-1.1.091-.055-.012-.1-.231-.1-.218 0-.833.495-1.366 1.1m-182.37.322c0 .123.855.588 1.9 1.034 1.045.446 2.663 1.156 3.596 1.577.932.422 1.88.767 2.105.767.225 0 .767.18 1.204.4l1.59.8c.437.22 1.146.4 1.576.4.43 0 .893.18 1.029.4.136.22.672.4 1.19.4.519 0 1.009.198 1.09.439.08.242.59.377 1.133.3.714-.101.102-.432-2.213-1.2-3.586-1.189-8.535-3.122-11.712-4.574-2.235-1.022-2.488-1.097-2.488-.743m-72 4.368c0 .46 5.958 6.21 6.435 6.21.291 0-.951-1.44-2.761-3.2-3.084-2.998-3.674-3.481-3.674-3.01m25.6.356c0 .11.54.584 1.2 1.054.66.47 1.2.764 1.2.654 0-.11-.54-.584-1.2-1.054-.66-.47-1.2-.764-1.2-.654m219.7 1.894c-.935.662-1.7 1.293-1.7 1.401 0 .109.81-.36 1.8-1.041.99-.681 1.8-1.32 1.8-1.419 0-.276-.076-.233-1.9 1.059m-24.9.36c-.55.43-.82.782-.6.782.22 0 .85-.352 1.4-.782.55-.43.82-.782.6-.782-.22 0-.85.352-1.4.782m-130.61-.016c.142.229.727.416 1.3.416 1.254 0 1.109-.192-.424-.56-.743-.178-1.045-.129-.876.144m92.81.016c-.771.331-.769.345.076.372.482.015.988-.152 1.124-.372.292-.473-.099-.473-1.2 0m-129.4.16c0 .125.9.683 2 1.24 1.1.557 2 .873 2 .701 0-.172-.765-.665-1.7-1.096a260.88 260.88 0 01-2-.928c-.165-.079-.3-.042-.3.083m39.2.64c0 .22.495.387 1.1.372.975-.025 1.009-.067.3-.372-1.093-.469-1.4-.469-1.4 0m87.4 0c-.709.305-.675.347.3.372.605.015 1.1-.152 1.1-.372 0-.469-.307-.469-1.4 0m-149.8.162c0 .11.81.757 1.8 1.438.99.681 1.8 1.148 1.8 1.038 0-.11-.81-.757-1.8-1.438-.99-.681-1.8-1.148-1.8-1.038m187.7.382c-.495.245-.9.588-.9.761 0 .174.54.036 1.2-.305.66-.341 1.2-.706 1.2-.81 0-.269-.461-.16-1.5.354M158.2 350c.136.22.642.387 1.124.372.845-.027.847-.041.076-.372-1.101-.473-1.492-.473-1.2 0m81.6 0c-.771.331-.769.345.076.372.482.015.988-.152 1.124-.372.292-.473-.099-.473-1.2 0m-78.8.8c.136.22.732.387 1.324.372.961-.025.99-.065.276-.372-1.111-.478-1.895-.478-1.6 0m75.6 0c-.714.307-.685.347.276.372.592.015 1.188-.152 1.324-.372.295-.478-.489-.478-1.6 0m64.293 2.191c-3.38 2.27-5.193 3.644-3.693 2.799 2.005-1.129 7.147-4.581 7.375-4.95.359-.58.553-.693-3.682 2.151m28.795-1.787c-.47.438-.952.796-1.07.796-.119 0-.892.648-1.717 1.44-.826.792-2.131 1.851-2.901 2.352-.77.502-1.836 1.384-2.37 1.96-.533.576-1.131 1.048-1.328 1.048-.404 0-1.502 1.013-1.502 1.386 0 .387 1.739-.642 2.447-1.449.356-.405.861-.737 1.124-.737.262 0 .365-.18.229-.4-.136-.22.048-.4.408-.4s1.346-.72 2.192-1.6c.846-.88 1.782-1.6 2.08-1.6.299 0 .803-.36 1.12-.8.317-.44.942-.803 1.388-.806.614-.005.678-.091.264-.353-.442-.281-.404-.428.197-.764.409-.229.643-.519.519-.643-.125-.124-.611.133-1.08.57m-209.288-.186c0 .182 8.367 4.263 11 5.366.44.184 1.43.608 2.2.942 3.865 1.676 6.859 2.748 7.074 2.533.132-.132-.1-.349-.517-.482-2.064-.66-10.428-4.176-11.852-4.983-.382-.217-.967-.394-1.3-.394-.333 0-.605-.18-.605-.4 0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.349-.4-.776-.4-.427 0-.888-.18-1.024-.4-.26-.421-1-.555-1-.182m154 1.78c-2.09 1.053-4.43 2.185-5.2 2.515-.77.331-2.43 1.065-3.689 1.634-1.259.568-2.746 1.147-3.304 1.287-1.043.262-1.791.966-1.025.966.236 0 .741-.159 1.123-.353.707-.36 1.314-.619 4.481-1.916s12.633-6.072 12.014-6.06c-.33.006-2.31.873-4.4 1.927m-110-1.198c.33.213 1.05.378 1.6.366.916-.02.933-.051.2-.366-1.184-.509-2.587-.509-1.8 0m68.6 0c-.733.315-.716.346.2.366.55.012 1.27-.153 1.6-.366.787-.509-.616-.509-1.8 0m-65.778.532c.122.135 2.102.595 4.4 1.022 4.01.746 6.523 1.109 13.999 2.026 4.426.543 23.532.543 27.958 0 7.476-.917 9.989-1.28 13.999-2.026 2.298-.427 4.278-.887 4.4-1.022.225-.248-.631-.131-4.978.679-8.309 1.548-16.31 2.187-27.4 2.187s-19.091-.639-27.4-2.187c-4.347-.81-5.203-.927-4.978-.679m-95.685 1.9c.953.898 1.836 1.529 1.962 1.403.314-.315-2.533-3.035-3.177-3.035-.285 0 .262.734 1.215 1.632m30.063 1.347c0 .11.54.48 1.2.821.66.341 1.2.531 1.2.421 0-.11-.54-.48-1.2-.821-.66-.341-1.2-.531-1.2-.421m-26.4 1.267c0 .407 2.923 2.954 3.39 2.954.238 0 .693.36 1.01.8.528.732 1.6 1.115 1.6.571 0-.392-1.122-1.371-1.571-1.371-.236 0-.429-.18-.429-.4 0-.22-.243-.4-.541-.4-.297 0-1.105-.54-1.796-1.2-1.244-1.189-1.663-1.429-1.663-.954m218.1 1.18c-.935.561-1.7 1.114-1.7 1.229 0 .216 2.699-1.317 3.38-1.919.687-.608.047-.345-1.68.69m-186.1.938c.55.45 1.18.819 1.4.821.428.003-.295-.551-1.6-1.225-.531-.275-.464-.139.2.404m2.8 1.6c.55.45 1.18.819 1.4.821.428.003-.295-.551-1.6-1.225-.531-.275-.464-.139.2.404m177.4.836c-.66.437-1.02.792-.8.788.401-.006 2.576-1.565 2.2-1.576-.11-.004-.74.351-1.4.788m-143.6 0c1.101.473 1.492.473 1.2 0-.136-.22-.642-.387-1.124-.372-.845.027-.847.041-.076.372m-62.4.4c-.136.22-.032.4.231.4.262 0 .868.405 1.345.9.78.809 1.824 1.349 1.824.942 0-1.041-2.943-2.982-3.4-2.242m235-.068c0 .183-.495.588-1.1.9-.605.312-1.19.672-1.3.801-.11.129-1.595 1.18-3.3 2.336-1.705 1.156-3.1 2.175-3.1 2.266 0 .454 1.15.071 1.908-.635.472-.44 1.096-.8 1.387-.8.291 0 .788-.36 1.105-.8.317-.44.857-.8 1.2-.8.343 0 .883-.36 1.2-.8.317-.44.942-.803 1.388-.806.671-.005.708-.074.212-.394-.485-.314-.428-.389.3-.394.531-.003.9-.252.9-.606 0-.33-.18-.6-.4-.6-.22 0-.4.15-.4.332M146.2 362c1.101.473 1.492.473 1.2 0-.136-.22-.642-.387-1.124-.372-.845.027-.847.041-.076.372m105.8 0c0 .469.307.469 1.4 0 .709-.305.675-.347-.3-.372-.605-.015-1.1.152-1.1.372m-101.8 1.26c2.724.886 12.093 3.254 15.4 3.892l4.2.811c1.1.214 3.53.594 5.4.845 1.87.251 4.495.622 5.833.824 1.338.203 3.408.346 4.6.32 1.504-.034.394-.268-3.633-.766-7.856-.971-10.377-1.371-17.6-2.793a96.804 96.804 0 00-3.703-.656c-.826-.122-1.602-.382-1.723-.579-.122-.197-.83-.358-1.574-.358-.744 0-1.464-.18-1.6-.4-.136-.22-.766-.4-1.4-.4-.634 0-1.264-.18-1.4-.4-.136-.22-.766-.4-1.4-.4-.634 0-1.264-.18-1.4-.4-.136-.22-.732-.382-1.324-.36-.777.029-.41.256 1.324.82m99.2-.46c-.295.478.489.478 1.6 0 .714-.307.685-.347-.276-.372-.592-.015-1.188.152-1.324.372m-2.773.756c-.121.195-.806.452-1.523.571-.717.118-2.114.418-3.104.666-3.298.826-7.68 1.764-11.4 2.439-5.371.976-6.654 1.165-12.6 1.85-3.41.394-5.66.781-5 .861 1.178.142 7.058-.446 11.4-1.141 1.21-.194 3.55-.563 5.2-.821 1.65-.258 3.54-.608 4.2-.779.66-.171 2.28-.538 3.6-.816 3.962-.834 11.059-2.712 11.35-3.003.101-.1-.286-.183-.86-.183-.573 0-1.142.16-1.263.356m-161.427.548c0 .277.36.728.8 1.003.914.571 1.021.217.243-.807-.625-.823-1.043-.902-1.043-.196m2.4 1.725c0 .392 1.122 1.371 1.571 1.371.636 0 .521-.442-.271-1.043-.744-.565-1.3-.705-1.3-.328m2.4 1.6c0 .392 1.122 1.371 1.571 1.371.586 0 .538-.348-.142-1.029-.571-.57-1.429-.776-1.429-.342m180.9 1.605c-.715.312-1.3.66-1.3.773 0 .208 2.806-.88 3.146-1.22.34-.34-.526-.13-1.846.447m-178.5.068c0 .167.585.557 1.3.868.715.311 1.425.755 1.578.986.153.232.4.3.548.151.373-.372-.829-1.507-1.597-1.507-.346 0-.629-.18-.629-.4 0-.22-.27-.4-.6-.4-.33 0-.6.136-.6.302m102.082 1.387c3.359.226 7.465.226 10.6-.001 4.788-.347 4.434-.371-5.482-.37-10.178.001-10.382.016-5.118.371m70.518.925c-1.615.74-.649.741 1.054.002.74-.322 1.076-.577.746-.568-.33.009-1.14.264-1.8.566M97.108 372c.472.44 1.117.8 1.432.8.316 0 .678.27.805.6.126.33.416.6.642.6.227 0 .413-.27.413-.6 0-.33-.27-.6-.6-.6-.33 0-.6-.18-.6-.4 0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.304-.4-.675-.4-.573 0-.545.122.183.8m204.092-.4c0 .22.27.4.6.4.33 0 .6-.18.6-.4 0-.22-.27-.4-.6-.4-.33 0-.6.18-.6.4m-1.8.924c-.44.262-.89.58-1 .708-.11.128-.785.487-1.5.798-.715.311-1.3.701-1.3.868 0 .166-.36.302-.8.302-.44 0-.8.18-.8.4 0 .22-.278.4-.617.4-.339 0-.834.186-1.1.414-.266.227-.843.671-1.283.987-.711.51-.722.575-.1.586.385.007.7-.167.7-.387s.36-.4.8-.4c.44 0 .8-.18.8-.4 0-.22.36-.4.8-.4.44 0 .8-.18.8-.4 0-.22.36-.4.8-.4.44 0 .8-.18.8-.4 0-.22.371-.4.824-.4.453 0 .712-.18.576-.4-.136-.22.123-.4.576-.4.453 0 .824-.18.824-.4 0-.22.36-.4.8-.4.444 0 .8-.267.8-.6 0-.707-.313-.724-1.4-.076m-198.6 1.601c0 .289.63.773 1.4 1.075.77.302 1.4.696 1.4.875 0 .179.234.325.52.325.736 0 2.673.941 2.677 1.3.002.165.273.3.603.3.33 0 .6-.18.6-.4 0-.22-.27-.4-.6-.4-.33 0-.6-.18-.6-.4 0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.341-.4-.757-.4-.417 0-.86-.267-.985-.593-.125-.327-.481-.496-.791-.377-.31.119-.671-.064-.803-.407-.29-.757-1.064-.828-1.064-.098M244.2 378c-.504.217-.578.344-.2.344.33 0 .96-.155 1.4-.344.504-.217.578-.344.2-.344-.33 0-.96.155-1.4.344m-135.8.4c0 .22.27.4.6.4.33 0 .6-.18.6-.4 0-.22-.27-.4-.6-.4-.33 0-.6.18-.6.4m49 .4c.44.189 1.07.344 1.4.344.378 0 .304-.127-.2-.344-.44-.189-1.07-.344-1.4-.344-.378 0-.304.127.2.344m-47.4.4c0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.45.4 1 .4s1 .18 1 .4c0 .22.36.4.8.4.44 0 .8.18.8.4 0 .22.36.4.8.4.44 0 .8-.199.8-.443 0-.243-.277-.336-.615-.207-.35.135-.713-.019-.843-.357-.125-.326-.568-.593-.985-.593-.416 0-.757-.18-.757-.4 0-.22-.45-.4-1-.4s-1-.18-1-.4c0-.22-.36-.4-.8-.4-.44 0-.8-.18-.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8.18-.8.4m177.2 0c0 .22.27.4.6.4.33 0 .6-.18.6-.4 0-.22-.27-.4-.6-.4-.33 0-.6.18-.6.4m-50.2.4c-1.019.438.032.438 1.4 0 .804-.257.843-.323.2-.332-.44-.006-1.16.143-1.6.332m-4 .819c-.558.252-.315.288.8.119.88-.134 1.675-.31 1.767-.391.343-.303-1.799-.076-2.567.272m-64.5.657c.385.1 1.015.1 1.4 0 .385-.101.07-.183-.7-.183s-1.085.082-.7.183m61.2 0c.385.1 1.015.1 1.4 0 .385-.101.07-.183-.7-.183s-1.085.082-.7.183m-56.195.807c.497.096 1.217.092 1.6-.008.382-.1-.025-.179-.905-.174-.88.004-1.193.086-.695.182m50.795-.001a5.661 5.661 0 001.8 0c.495-.095.09-.173-.9-.173s-1.395.078-.9.173m56.1.518c0 .22.27.4.6.4.33 0 .6-.18.6-.4 0-.22-.27-.4-.6-.4-.33 0-.6.18-.6.4m-100.7.287a8.899 8.899 0 002.2 0c.605-.092.11-.167-1.1-.167-1.21 0-1.705.075-1.1.167m38 0a8.899 8.899 0 002.2 0c.605-.092.11-.167-1.1-.167-1.21 0-1.705.075-1.1.167m-98.423.543c.079.236.314.43.523.43.209 0 .445-.194.523-.43.079-.236-.156-.43-.523-.43s-.602.194-.523.43m65.828-.147c.497.096 1.217.092 1.6-.008.382-.1-.025-.179-.905-.174-.88.004-1.193.086-.695.182m28 0c.497.096 1.217.092 1.6-.008.382-.1-.025-.179-.905-.174-.88.004-1.193.086-.695.182m65.295.317c0 .33.264.6.587.6.358 0 .498-.235.358-.6-.127-.33-.391-.6-.588-.6-.196 0-.357.27-.357.6m-84.675.099c3.479.067 9.059.067 12.4 0 3.341-.067.495-.121-6.325-.121s-9.554.055-6.075.121m-72.925.458c0 .197.285.467.633.6.894.343.967.316.967-.357 0-.333-.356-.6-.8-.6-.44 0-.8.161-.8.357m155.6.043c0 .22-.45.4-1 .4s-1 .18-1 .4c0 .22-.431.4-.957.4-.527 0-1.061.27-1.188.6-.14.365 0 .6.358.6.323 0 .587-.18.587-.4 0-.22.54-.4 1.2-.4.66 0 1.2-.18 1.2-.4 0-.22.45-.4 1-.4.622 0 1-.227 1-.6 0-.33-.27-.6-.6-.6-.33 0-.6.18-.6.4m-153.322.656c-.374.373.077.944.746.944a.59.59 0 00.576-.6c0-.602-.844-.822-1.322-.344m1.92.947c-.137.221.04.514.394.649.766.294 1.193-.03.824-.625-.332-.538-.894-.549-1.218-.024m2.598 1.001c-.411.496-.351.596.355.596.467 0 .849-.169.849-.376 0-.693-.704-.822-1.204-.22M270.4 386.6c0 .33.27.6.6.6.33 0 .6-.27.6-.6 0-.33-.27-.6-.6-.6-.33 0-.6.27-.6.6m-2.133.467c-.409.408-.318.933.162.933.235 0 .698-.27 1.028-.6.533-.533.515-.6-.162-.6-.419 0-.882.12-1.028.267m-138.816.45c-.107.174.152.343.577.375.424.032.772-.111.772-.317 0-.455-1.075-.502-1.349-.058m136.416.35c-.449.448-.298.933.29.933.307 0 .661-.27.788-.6.23-.601-.564-.847-1.078-.333M131.6 388.4c0 .22.36.4.8.4.44 0 .8-.18.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8.18-.8.4m132.1.265c-.696.281-.627.935.1.935.33 0 .6-.27.6-.6 0-.33-.045-.586-.1-.568-.055.017-.325.122-.6.233M134 389.2c0 .22.36.4.8.4.44 0 .8-.18.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8.18-.8.4m2.4.8c0 .22.45.4 1 .4s1-.18 1-.4c0-.22-.45-.4-1-.4s-1 .18-1 .4m124.4 0c0 .22.27.4.6.4.33 0 .6-.18.6-.4 0-.22-.27-.4-.6-.4-.33 0-.6.18-.6.4m-121.6.8c0 .22.36.4.8.4.44 0 .8-.18.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8.18-.8.4m118.8 0c0 .22.27.4.6.4.33 0 .6-.18.6-.4 0-.22-.27-.4-.6-.4-.33 0-.6.18-.6.4m-116.4.8c0 .22.45.4 1 .4s1-.18 1-.4c0-.22-.45-.4-1-.4s-1 .18-1 .4m113.6 0c0 .22.36.4.8.4.44 0 .8-.18.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8.18-.8.4m-111.2.8c0 .22.54.4 1.2.4.66 0 1.2-.18 1.2-.4 0-.22-.54-.4-1.2-.4-.66 0-1.2.18-1.2.4m108.4 0c0 .22.36.4.8.4.44 0 .8-.18.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8.18-.8.4m-105.2.8c0 .22.54.4 1.2.4.66 0 1.2-.18 1.2-.4 0-.22-.54-.4-1.2-.4-.66 0-1.2.18-1.2.4m102 0c0 .22.36.4.8.4.44 0 .8-.18.8-.4 0-.22-.36-.4-.8-.4-.44 0-.8.18-.8.4m-98.4.755c0 .195.521.431 1.159.524.838.123 1.102.025.957-.354-.223-.581-2.116-.734-2.116-.17m95.038.29c-.181.471-.076.579.39.4.351-.135.803-.245 1.005-.245.202 0 .367-.18.367-.4 0-.659-1.495-.451-1.762.245m-91.838.547c0 .499 1.815.97 2.384.618.236-.146.325-.433.199-.638-.307-.497-2.583-.479-2.583.02m88.4.237c0 .373.272.577.667.5 1.003-.194 1.141-1.129.166-1.129-.491 0-.833.258-.833.629m-84.104.408c-.506.506.14.963 1.361.963.789 0 1.153-.174 1.045-.5-.181-.552-1.972-.896-2.406-.463m79.959.363c-.177.463.091.6 1.181.6.776 0 1.308-.166 1.183-.37-.126-.203.088-.452.476-.553.388-.101-.041-.205-.952-.231-1.136-.031-1.73.143-1.888.554m-75.57.448c-.62.62-.219.952 1.148.952.968 0 1.38-.162 1.269-.5-.183-.559-1.975-.894-2.417-.452m71.582.019c-.577.576-.211.933.957.933.673 0 1.121-.165.997-.366-.124-.201 0-.457.277-.568.276-.112-.053-.217-.731-.234-.679-.018-1.354.088-1.5.235m-67.238.882c-.715.289-.72.33-.067.581 1.217.467 3.12.318 2.94-.23-.194-.594-1.788-.788-2.873-.351m62.038-.082c-.598.597-.191.933 1.133.933.978 0 1.4-.181 1.4-.6 0-.612-1.993-.874-2.533-.333m-55.767.808c-1.737.349-.877.925 1.38.925 1.41 0 2.135-.142 1.9-.372-.508-.496-2.167-.776-3.28-.553m49.6-.01c-1.088.439-.406.935 1.287.935 1.425 0 1.741-.122 1.558-.6-.222-.577-1.788-.762-2.845-.335m-8.208.827c-2.22.231-1.394.908 1.108.908 2.259 0 3.223-.54 1.696-.949-.493-.132-.986-.212-1.096-.178-.11.034-.879.132-1.708.219m-34.892.508c.136.22 1.497.4 3.024.4 1.584 0 2.776-.172 2.776-.4 0-.231-1.275-.4-3.024-.4-1.913 0-2.932.147-2.776.4m14.907.69c.719.089 1.799.087 2.4-.004s.013-.164-1.307-.162c-1.32.002-1.812.077-1.093.166m4.193-.014c.385.1 1.015.1 1.4 0 .385-.101.07-.183-.7-.183s-1.085.082-.7.183m3.407.014c.719.089 1.799.087 2.4-.004s.013-.164-1.307-.162c-1.32.002-1.812.077-1.093.166\"/></g></svg>\n\t\t);\n\t}\n}\n\nexport default WbtcLogo\n\n","\n\nimport React, {Component} from \"react\"\n\nclass UsdcLogo extends Component {\n\n\trender() {\n\t\treturn (\n\n\n<svg data-name=\"86977684-12db-4850-8f30-233a7c267d11\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2000 2000\">\n  <path d=\"M1000 2000c554.17 0 1000-445.83 1000-1000S1554.17 0 1000 0 0 445.83 0 1000s445.83 1000 1000 1000z\" fill=\"#2775ca\"/>\n  <path d=\"M1275 1158.33c0-145.83-87.5-195.83-262.5-216.66-125-16.67-150-50-150-108.34s41.67-95.83 125-95.83c75 0 116.67 25 137.5 87.5 4.17 12.5 16.67 20.83 29.17 20.83h66.66c16.67 0 29.17-12.5 29.17-29.16v-4.17c-16.67-91.67-91.67-162.5-187.5-170.83v-100c0-16.67-12.5-29.17-33.33-33.34h-62.5c-16.67 0-29.17 12.5-33.34 33.34v95.83c-125 16.67-204.16 100-204.16 204.17 0 137.5 83.33 191.66 258.33 212.5 116.67 20.83 154.17 45.83 154.17 112.5s-58.34 112.5-137.5 112.5c-108.34 0-145.84-45.84-158.34-108.34-4.16-16.66-16.66-25-29.16-25h-70.84c-16.66 0-29.16 12.5-29.16 29.17v4.17c16.66 104.16 83.33 179.16 220.83 200v100c0 16.66 12.5 29.16 33.33 33.33h62.5c16.67 0 29.17-12.5 33.34-33.33v-100c125-20.84 208.33-108.34 208.33-220.84z\" fill=\"#fff\"/>\n  <path d=\"M787.5 1595.83c-325-116.66-491.67-479.16-370.83-800 62.5-175 200-308.33 370.83-370.83 16.67-8.33 25-20.83 25-41.67V325c0-16.67-8.33-29.17-25-33.33-4.17 0-12.5 0-16.67 4.16-395.83 125-612.5 545.84-487.5 941.67 75 233.33 254.17 412.5 487.5 487.5 16.67 8.33 33.34 0 37.5-16.67 4.17-4.16 4.17-8.33 4.17-16.66v-58.34c0-12.5-12.5-29.16-25-37.5zM1229.17 295.83c-16.67-8.33-33.34 0-37.5 16.67-4.17 4.17-4.17 8.33-4.17 16.67v58.33c0 16.67 12.5 33.33 25 41.67 325 116.66 491.67 479.16 370.83 800-62.5 175-200 308.33-370.83 370.83-16.67 8.33-25 20.83-25 41.67V1700c0 16.67 8.33 29.17 25 33.33 4.17 0 12.5 0 16.67-4.16 395.83-125 612.5-545.84 487.5-941.67-75-237.5-258.34-416.67-487.5-491.67z\" fill=\"#fff\"/>\n</svg>\n        );\n    }\n}\nexport default UsdcLogo","\nimport React, {Component} from \"react\"\n\nclass TetherLogo extends Component {\n\n\trender() {\n\t\treturn (\n\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n    <g fill=\"none\" fillRule=\"evenodd\">\n        <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#26A17B\"/>\n        <path fill=\"#FFF\" d=\"M17.922 17.383v-.002c-.11.008-.677.042-1.942.042-1.01 0-1.721-.03-1.971-.042v.003c-3.888-.171-6.79-.848-6.79-1.658 0-.809 2.902-1.486 6.79-1.66v2.644c.254.018.982.061 1.988.061 1.207 0 1.812-.05 1.925-.06v-2.643c3.88.173 6.775.85 6.775 1.658 0 .81-2.895 1.485-6.775 1.657m0-3.59v-2.366h5.414V7.819H8.595v3.608h5.414v2.365c-4.4.202-7.709 1.074-7.709 2.118 0 1.044 3.309 1.915 7.709 2.118v7.582h3.913v-7.584c4.393-.202 7.694-1.073 7.694-2.116 0-1.043-3.301-1.914-7.694-2.117\"/></g></svg>\n        );\n    }\n}\nexport default TetherLogo\n","import React, {Component} from \"react\"\n\nclass DaiLogo extends Component {\n\n\trender() {\n\t\treturn (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid\" viewBox=\"0 0 256 417\"><path fill=\"#343434\" d=\"M127.96 0l-2.79 9.5v275.67l2.79 2.79 127.96-75.64z\"/><path fill=\"#8C8C8C\" d=\"M127.96 0L0 212.32l127.96 75.64v-133.8z\"/><path fill=\"#3C3C3B\" d=\"M127.96 312.19l-1.57 1.92v98.2l1.57 4.6L256 236.59z\"/><path fill=\"#8C8C8C\" d=\"M127.96 416.91V312.19L0 236.59z\"/><path fill=\"#141414\" d=\"M127.96 287.96l127.96-75.64-127.96-58.16z\"/><path fill=\"#393939\" d=\"M0 212.32l127.96 75.64v-133.8z\"/></svg>\n\n        );\n        }\n}\n\nexport default DaiLogo","import React, {Component} from \"react\"\n\nclass AaveLogo extends Component {\n\n\trender() {\n\t\treturn (\n\n            <svg xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Group 27021\" viewBox=\"0 0 24 24\">\n                <defs><linearGradient id=\"a\" x1=\".907\" x2=\".163\" y1=\".227\" y2=\".853\" gradientUnits=\"objectBoundingBox\">\n                    <stop offset=\"0\" stop-color=\"#b6509e\"/>\n                    <stop offset=\"1\" stop-color=\"#2ebac6\"/></linearGradient></defs>\n                    <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"url(#a)\" data-name=\"Ellipse 991\"/>\n                    <path fill=\"#fff\"\n                    d=\"M17.251 16.78l-4.059-9.809a1.091 1.091 0 00-1.017-.755h-.359a1.091 1.091 0 00-1.017.755l-1.766 4.274H7.697a.731.731 0 00-.728.725v.01a.731.731 0 00.728.725h.718L6.73 16.78a.86.86 0 00-.05.278.767.767 0 00.2.547.7.7 0 00.539.209.729.729 0 00.419-.139.885.885 0 00.289-.368l1.853-4.601h1.287a.731.731 0 00.728-.725v-.02a.731.731 0 00-.728-.725h-.687l1.415-3.529 3.859 9.6a.885.885 0 00.289.368.729.729 0 00.419.139.7.7 0 00.539-.209.767.767 0 00.2-.547.657.657 0 00-.05-.278z\" data-name=\"Path 2434\"/>\n                </svg>\n\t\t);\n\t}\n}\n\nexport default AaveLogo","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise( async(resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          //await window.ethereum.enable();\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:9545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n\n  });\n\nexport default getWeb3;","import getWeb3 from \"../../getWeb3NotOnLoad\";\nimport JCPool from \"../../contracts/JustCausePool.json\";\nimport PoolTracker from \"../../contracts/PoolTracker.json\";\nimport ERC20Instance from \"../../contracts/IERC20.json\";\n\n\tconst approve = async(erc20Instance, address, activeAccount, amountInGwei, decimals) => {\n\t\tconst web3 = await getWeb3();\n\t\tconsole.log('approve clicked');\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount ,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t\t};\n\t\tconsole.log(typeof amountInGwei);\n\n\t\tconst amount = '10000000000000000000000000000000';\n\n\t\tlet results_1 = await erc20Instance.methods.approve(address, amount).send(parameter, (err, transactionHash) => {\n\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t\t});\n\t\tconsole.log(\"approve\", results_1);\n\t}\n\n\tconst getAllowance = async(erc20Instance, address, activeAccount) => {\n\t\tconst allowance = await erc20Instance.methods.allowance(activeAccount, address).call();\n\t\tconsole.log(\"allowance\", allowance, typeof allowance);\n\t\treturn allowance;\n\t}\n\n\tconst getWalletBalance = async(tokenAddress) => {\n\t\tconst web3 = await getWeb3();\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconst erc20Instance = await new web3.eth.Contract(ERC20Instance.abi, tokenAddress);\n\t\tconst balance = await erc20Instance.methods.balanceOf(activeAccount).call();\n\t\treturn balance;\n\t}\n\n\tconst getAmountBase = (amount, decimals) => {\n\t\tconsole.log('amount in base', amount*10**decimals);\n\t\treturn (amount*10**decimals).toString();\n\t}\n\n\texport const deposit = async(poolAddress, tokenAddress, isETH, tokenMap, poolTrackerAddress) => {\n\t\tconsole.log('deposit clicked');\n\t\tconst web3 = await getWeb3();\n\t\tconst erc20Instance = await new web3.eth.Contract(ERC20Instance.abi, tokenAddress);\n\t\tconsole.log('token map', tokenMap);\n\t\tconst tokenString = Object.keys(tokenMap).find(key => tokenMap[key].address === tokenAddress);\n\t\tconsole.log('tokenString:', tokenString, tokenMap[tokenString].decimals);\n\t\tconst amount = prompt(\"enter amount to deposit\");\n\t\tconst amountInBase = getAmountBase(amount, tokenMap[tokenString].decimals);//web3.utils.toWei(amount, 'ether');\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconsole.log(\"amountInGwei\", amountInBase);\n\t\tconsole.log(getAmountBase(amount, tokenMap[tokenString].decimals));\n\t\tlet parameter = {};\n\t\tif(!isETH){\n\t\t\tconst allowance = await getAllowance(erc20Instance, poolAddress, activeAccount)\n\t\t\tif(parseInt(amountInBase) > parseInt(allowance)){\n\t\t\t\talert(\"must approve token to deposit\");\n\t\t\t\tawait approve(erc20Instance, poolAddress, activeAccount, amountInBase, tokenMap[tokenString].decimals);\n\t\t\t}\n\t\t\tparameter = {\n\t\t\t\tfrom: activeAccount,\n\t\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t\t};\n\t\t}\n\n\t\telse {\n\t\t\tparameter = {\n\t\t\t\tfrom: activeAccount,\n\t\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei')),\n\t\t\t\tvalue: amountInBase\n\t\t\t};\n\t\t}\n\n\t\tlet PoolTrackerInstance = new web3.eth.Contract(\n\t\t\tPoolTracker.abi,\n\t\t\tpoolTrackerAddress,\n\t\t);\n\n\t\tconsole.log('poolTracker', poolTrackerAddress);\n\t\tconsole.log(PoolTrackerInstance.options.address);\n\n\t\tawait PoolTrackerInstance.methods.addDeposit(amountInBase, tokenAddress, poolAddress, isETH).send(parameter, (err, transactionHash) => {\n\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t});\n\t\tconsole.log('deposit');\n\t}\n\n\texport const withdrawDeposit = async(poolAddress, tokenAddress, tokenMap, poolTrackerAddress) => {\n\t\tconsole.log('withdraw deposit clicked');\n\t\tconst web3 = await getWeb3();\n\t\tconst tokenString = Object.keys(tokenMap).find(key => tokenMap[key].address === tokenAddress);\n\t\tconst amount = prompt(\"enter amount to withdraw\");\n\t\tconst donateAmount = prompt(\"enter amount to donate if desired\");\n\t\tconst amountInBase = getAmountBase(amount, tokenMap[tokenString].decimals);//web3.utils.toWei(amount, 'ether');\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconst donateAmountInGwei = getAmountBase(donateAmount, tokenMap[tokenString].decimals);//web3.utils.toWei(donateAmount, 'ether');\n\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t};\n\n\t\tlet PoolTrackerInstance = new web3.eth.Contract(\n\t\t\tPoolTracker.abi,\n\t\t\tpoolTrackerAddress,\n\t\t);\n\n\t\tconsole.log('amount to withdraw', amountInBase, amount);\n\t\tlet result = await PoolTrackerInstance.methods.withdrawDeposit(amountInBase, donateAmountInGwei, tokenAddress, poolAddress).send(parameter , (err, transactionHash) => {\n\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t});\n\t\tconsole.log('withdrawDeposit result', result)\n\t}\n\n\texport const claim = async(address, assetAddress, poolTrackerAddress) => {\n\t\tconsole.log('claim interest clicked', address);\n\t\tconst web3 = await getWeb3();\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(1000000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t};\n\n\t\tlet JCPoolInstance = new web3.eth.Contract(\n\t\t\tJCPool.abi,\n\t\t\taddress,\n\t\t);\n\t\tlet result = await JCPoolInstance.methods.withdrawDonations(assetAddress, false).send(parameter , (err, transactionHash) => {\n\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t});\n\n\t\tconsole.log('claim result', result);\n\t}\n\n\texport const deploy = async(tokenMap, poolTrackerAddress) => {\n\t\tconst web3 = await getWeb3();\n\t\tconst activeAccount = await web3.currentProvider.selectedAddress;\n\t\tconst poolName = prompt(\"Enter pool name:\");\n\t\tlet acceptedTokens = prompt(\"Enter accepted tokens for pool (e.g. DAI USDC...)\");\n\t\tconst about = prompt(\"Type a short summary of your cause\");\n\t\tacceptedTokens = acceptedTokens.split(\" \");\n\t\tconsole.log(\"acceptedTokens\", acceptedTokens, tokenMap);\n\t\tlet tokenAddrs = [];\n\t\tfor(let i = 0; i < acceptedTokens.length; i++){\n\t\t\ttokenAddrs.push(tokenMap[acceptedTokens[i]].address);\n\t\t}\n\t\tconsole.log('poolTrackerAddress', poolTrackerAddress);\n\t\tconst receiver = prompt(\"Enter the address to recieve the interest\");\n\t\tconsole.log(\"receiver\", receiver, typeof receiver);\n\t\tconsole.log(\"token addresses\", tokenAddrs);\n\t\tconst parameter = {\n\t\t\tfrom: activeAccount,\n\t\t\tgas: web3.utils.toHex(3200000),\n\t\t\tgasPrice: web3.utils.toHex(web3.utils.toWei('30', 'gwei'))\n\t\t};\n\n\t\tlet PoolTrackerInstance = new web3.eth.Contract(\n\t\t\tPoolTracker.abi,\n\t\t\tpoolTrackerAddress,\n\t\t);\n\n\t\tawait PoolTrackerInstance.methods.createJCPoolClone(tokenAddrs, poolName, about, receiver).send(parameter , (err, transactionHash) => {\n\t\t\tconsole.log('Transaction Hash :', transactionHash);\n\t\t});\n\t}\n\n\t/*export const getPoolStateFromChain = async(activeAccount, tokenMap, networkId) => {\n\n\t\tconst web3 = await getWeb3();\n\t\tconst PoolTrackerInstance = new web3.eth.Contract(\n\t\t\tPoolTracker.abi,\n\t\t\tPoolTracker.networks[networkId] && PoolTracker.networks[networkId].address,\n\t\t);\n\n\t\tconst verifiedPools = await PoolTrackerInstance.methods.getVerifiedPools().call();\n\t\tconst ownerPools = await PoolTrackerInstance.methods.getUserOwned(activeAccount).call();\n\t\tlet userDepositPools = await PoolTrackerInstance.methods.getUserDeposits(activeAccount).call();\n\n\t\tlet isHashMatch = true;\n\t\tfor(let i = 0; i < verifiedPools.length; i++){\n\t\t\tconst isMatch = await PoolTrackerInstance.methods.checkByteCode(verifiedPools[i]).call();\n\t\t\tif(!isMatch){\n\t\t\t\tisHashMatch = false;\n\t\t\t}\n\t\t}\n\t\tconsole.log('isHashMatch', isHashMatch);\n\t\tuserDepositPools = [...new Set(userDepositPools)];\n\n\t\tconst verifiedPoolInfo = await getPoolInfo(verifiedPools, tokenMap, activeAccount);\n\t\tconst ownerPoolInfo = await getPoolInfo(ownerPools, tokenMap, activeAccount);\n\t\tconst userDepositPoolInfo = await getPoolInfo(userDepositPools, tokenMap, activeAccount);\n\n\t\tconsole.log('---------verifiedPoolInfo--------', verifiedPoolInfo);\n\t\tconsole.log('---------ownerPoolInfo--------', ownerPoolInfo);\n\t\tconsole.log('---------userDepositPoolInfo--------', userDepositPoolInfo);\n\n\t\treturn { verifiedPools, ownerPools, userDepositPools, verifiedPoolInfo, ownerPoolInfo, userDepositPoolInfo };\n\t}*/\n\n\texport const getPoolInfo = async(poolTracker, tokenMap, activeAccount, userBalancePools) => {\n\t\tconst web3 = await getWeb3();\n\t\tlet poolInfo = [];\n\t\tfor(let i=0; i < poolTracker.length; i++){\n\t\t\tlet JCPoolInstance = new web3.eth.Contract(\n\t\t\t\tJCPool.abi,\n\t\t\t\tpoolTracker[i],\n\t\t\t);\n\n\t\t\tlet acceptedTokens = await JCPoolInstance.methods.getAcceptedTokens().call();\n\t\t\tlet name = await JCPoolInstance.methods.getName().call();\n\t\t\tlet receiver = await JCPoolInstance.methods.getRecipient().call();\n\t\t\tlet about = await JCPoolInstance.methods.getAbout().call();\n\t\t\tconst hashByteCode = await JCPoolInstance.methods.getHashByteCode().call();\n\n\t\t\tconsole.log('hashByteCode', hashByteCode);\n\t\t\tconsole.log(\"pool address:\", JCPoolInstance.options.address);\n\t\t\tconsole.log(\"accepted tokens:\", acceptedTokens);\n\t\t\tlet acceptedTokenStrings = [];\n\t\t\tlet acceptedTokenInfo = [];\n\n\t\t\tfor(let j = 0; j < acceptedTokens.length; j++){\n\t\t\t\tconst tokenString = Object.keys(tokenMap).find(key => tokenMap[key].address === acceptedTokens[j]);\n\t\t\t\tlet balance = userBalancePools[poolTracker[i]+acceptedTokens[j]];\n\t\t\t\tbalance = (balance) ? balance : 0;\n\t\t\t\tconsole.log(\"tokenString\", tokenString, acceptedTokens[j]);\n\t\t\t\tacceptedTokenInfo.push({\n\t\t\t\t\t'totalDeposits': await JCPoolInstance.methods.getTotalDeposits(acceptedTokens[j]).call(),\n\t\t\t\t\t'userBalance':  balance,\n\t\t\t\t\t'unclaimedInterest': await JCPoolInstance.methods.getUnclaimedInterest(acceptedTokens[j]).call(),\n\t\t\t\t\t'claimedInterest': await JCPoolInstance.methods.getClaimedInterest(acceptedTokens[j]).call(),\n\t\t\t\t\t'aTokenAddress': await JCPoolInstance.methods.getATokenAddress(acceptedTokens[j]).call(),\n\t\t\t\t\t'acceptedTokenString': tokenString,\n\t\t\t\t\t'decimals': tokenMap[tokenString].decimals,\n\t\t\t\t\t'depositAPY': tokenMap[tokenString].depositAPY,\n\t\t\t\t\t'address': acceptedTokens[j],\n\t\t\t\t});\n\t\t\t\tacceptedTokenStrings.push(tokenString);\n\t\t\t}\n\n\t\t\tpoolInfo.push({\n\t\t\t\t\t\t\treceiver: receiver,\n\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\tabout: about,\n\t\t\t\t\t\t\taddress: poolTracker[i],\n\t\t\t\t\t\t\tacceptedTokens: acceptedTokenStrings,\n\t\t\t\t\t\t\tacceptedTokenInfo: acceptedTokenInfo,\n\t\t\t});\n\t\t}\n\t\treturn poolInfo;\n\t}\n\n\texport const getVerifiedPools = async(networkId) => {\n\t\tconst web3 = await getWeb3();\n\t\tconst PoolTrackerInstance = new web3.eth.Contract(\n\t\t\tPoolTracker.abi,\n\t\t\tPoolTracker.networks[networkId] && PoolTracker.networks[networkId].address,\n\t\t);\n\n\t\tconst verifiedPools = await PoolTrackerInstance.methods.getVerifiedPools().call();\n\t\treturn verifiedPools;\n\t}\n\n\texport const getUserOwned = async(activeAccount, networkId) => {\n\t\tconst web3 = await getWeb3();\n\t\tconst PoolTrackerInstance = new web3.eth.Contract(\n\t\t\tPoolTracker.abi,\n\t\t\tPoolTracker.networks[networkId] && PoolTracker.networks[networkId].address,\n\t\t);\n\n\t\tconst ownerPools = await PoolTrackerInstance.methods.getUserOwned(activeAccount).call();\n\t\treturn ownerPools;\n\t}\n\n\texport const getUserDeposits = async(activeAccount, networkId) => {\n\t\tconst web3 = await getWeb3();\n\t\tconst PoolTrackerInstance = new web3.eth.Contract(\n\t\t\tPoolTracker.abi,\n\t\t\tPoolTracker.networks[networkId] && PoolTracker.networks[networkId].address,\n\t\t);\n\n\t\tlet userDepositPools = await PoolTrackerInstance.methods.getUserDeposits(activeAccount).call();\n\t\treturn [...new Set(userDepositPools)];\n\t}\n\n","import React, {Component} from \"react\"\nimport classNames from \"classnames\";\n//import { Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport Icon from \"./Icon\";\nimport palette from \"../utils/palette\";\n\nimport Button from '../components/Button';\n\nimport DaiLogo from \"./cryptoLogos/DaiLogo\";\nimport WbtcLogo from \"./cryptoLogos/WbtcLogo\";\nimport UsdcLogo from \"./cryptoLogos/UsdcLogo\";\nimport TetherLogo from \"./cryptoLogos/TetherLogo\";\nimport EthLogo from \"./cryptoLogos/EthLogo\";\nimport AaveLogo from \"./cryptoLogos/AaveLogo\";\n\nimport {deposit, withdrawDeposit, claim} from '../func/contractInteractions';\n\nclass Card extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\topen: false,\n\t\t\tselectedTokenIndex: 0\n\t\t}\n\t}\n\n  componentDidMount() {\n\t\twindow.scrollTo(0,0);\n\t}\n\n\ttoFixed = (x) => {\n\t\tif (Math.abs(x) < 1.0) {\n\t\t  let e = parseInt(x.toString().split('e-')[1]);\n\t\t  if (e) {\n\t\t\t  x *= Math.pow(10,e-1);\n\t\t\t  x = '0.' + (new Array(e)).join('0') + x.toString().substring(2);\n\t\t  }\n\t\t} else {\n\t\t  let e = parseInt(x.toString().split('+')[1]);\n\t\t  if (e > 20) {\n\t\t\t  e -= 20;\n\t\t\t  x /= Math.pow(10,e);\n\t\t\t  x += (new Array(e+1)).join('0');\n\t\t  }\n\t\t}\n\t\treturn x;\n\t  }\n\n\tprecise = (x, decimals) => {\n\t\tlet number = (Number.parseFloat(x).toPrecision(6) / (10**decimals));\n\t\treturn this.toFixed(number);\n\t}\n\n\tgetAPY = (depositAPY) => {\n\t\tif(depositAPY){\n\t\t\treturn depositAPY + '%';\n\t\t}\n\t\telse{\n\t\t\treturn \"N/A\";\n\t\t}\n\t}\n\n\ttoggleCardOpen = () => {\n\t\tthis.setState({\n\t\t\topen: !this.state.open\n\t\t})\n\t}\n\n\tsetSelectedToken = (index) => {\n\t\tthis.setState({\n\t\t\tselectedTokenIndex: index\n\t\t});\n\t\tconsole.log('setSelectedToken', index);\n\t}\n\n\tcreateTokenButtons = (acceptedTokenInfo) => {\n\t\tif (!acceptedTokenInfo) return 'no data';\n\t\tlet buttonHolder = [];\n\t\tfor(let i = 0; i < acceptedTokenInfo.length; i++){\n\t\t\tconst tokenName = acceptedTokenInfo[i].acceptedTokenString;\n\t\t\tbuttonHolder.push(<Button text={tokenName} key={i} callback={() => this.setSelectedToken(i)}/>)\n\t\t}\n\t\treturn buttonHolder;\n\t}\n\n\tcreateTokenInfo = (address, receiver, acceptedTokenInfo) => {\n\t\tif (!acceptedTokenInfo) return 'no data';\n\n\t\tconst item = acceptedTokenInfo[this.state.selectedTokenIndex];\n\n\t\tconst isETH = (item.acceptedTokenString === 'ETH') ? true : false;\n\t\tconst tokenInfo =\n\t\t\t<div className=\"card__body\" key={item.acceptedTokenString}>\n\t\t\t\t<div className=\"card__body__column\">\n\t\t\t\t<h3 className=\"mb0\">{item.acceptedTokenString } { this.displayLogo(item.acceptedTokenString)}</h3>\n\t\t\t\t\t<p>{\"address: \" + address.slice(0, 6) + \"...\"+address.slice(-4)+' '}</p>\n\t\t\t\t\t<p>{\"receiver: \"+receiver.slice(0, 6) + \"...\"+receiver.slice(-4)+' '}</p>\n\t\t\t\t\t<Button text=\"Contribute\" callback={async() => await deposit(address, item.address, isETH, this.props.tokenMap, this.props.poolTrackerAddress)}/>\n\t\t\t\t\t<Button text=\"Withdraw Deposit\" callback={async() => await withdrawDeposit(address, item.address,  this.props.tokenMap, this.props.poolTrackerAddress)}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card__body__column\">\n\t\t\t\t\t<p>{\"user balance: \"+this.precise(item.userBalance, item.decimals)}</p>\n\t\t\t\t\t<p>{\"total balance: \"+this.precise(item.totalDeposits, item.decimals)}</p>\n\t\t\t\t\t<p>{\"deposit APY: \"+ this.getAPY(item.depositAPY)}</p>\n\t\t\t\t\t<p>{\"claimed donation: \"+this.precise(item.claimedInterest, item.decimals)}</p>\n\t\t\t\t\t<p>{\"unclaimed donation: \"+this.precise(item.unclaimedInterest, item.decimals)}</p>\n\t\t\t\t\t<Button text=\"Claim Interest\" callback={async() => await claim(address, item.address, this.props.poolTrackerAddress)}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\treturn tokenInfo;\n\t}\n\n\tgetTotalBalancesInUSD = (acceptedTokenInfo) => {\n\t\tif (!acceptedTokenInfo) return 'no data';\n\n\t\tlet totalBalance = 0.0;\n\n\t\tfor(let i = 0; i < acceptedTokenInfo.length; i++){\n\t\t\tconst item = acceptedTokenInfo[i];\n\t\t\tconst tokenString = item.acceptedTokenString;\n\t\t\tconst priceUSD = this.props.tokenMap[tokenString] && this.props.tokenMap[tokenString].priceUSD;\n\t\t\tconst totalDeposits = this.precise(item.totalDeposits, item.decimals);\n\t\t\ttotalBalance += totalDeposits * priceUSD;\n\t\t}\n\n\t\ttotalBalance = totalBalance.toFixed(2);\n\n\t\treturn totalBalance;\n\t}\n\n\tgetUserBalancesInUSD = (acceptedTokenInfo) => {\n\t\tif (!acceptedTokenInfo) return 'no data';\n\n\t\tlet userBalance = 0.0;\n\n\t\tfor(let i = 0; i < acceptedTokenInfo.length; i++){\n\t\t\tconst item = acceptedTokenInfo[i];\n\t\t\tconst tokenString = item.acceptedTokenString;\n\t\t\tconst priceUSD = this.props.tokenMap[tokenString] && this.props.tokenMap[tokenString].priceUSD;\n\t\t\tconst userDeposits = this.precise(item.userBalance, item.decimals);\n\t\t\tuserBalance += userDeposits * priceUSD;\n\t\t}\n\n\t\tuserBalance = userBalance.toFixed(2);\n\n\t\treturn userBalance;\n\t}\n\n\tdisplayLogo = (acceptedTokenString) => {\n\t\tlet logo = 'test';\n\t\tif(acceptedTokenString === 'ETH'){\n\t\t\tlogo = <EthLogo/>;\n\t\t}\n\t\telse if (acceptedTokenString === 'USDT'){\n\t\t\tlogo = <TetherLogo/>;\n\t\t}\n\t\telse if (acceptedTokenString === 'USDC'){\n\t\t\tlogo = <UsdcLogo/>;\n\t\t}\n\t\telse if (acceptedTokenString === 'WBTC'){\n\t\t\tlogo = <WbtcLogo/>;\n\t\t}\n\t\telse if (acceptedTokenString === 'DAI'){\n\t\t\tlogo = <DaiLogo/>;\n\t\t}\n\t\telse if (acceptedTokenString === 'AAVE'){\n\t\t\tlogo = <AaveLogo lg />;\n\t\t}\n\n\t\treturn logo;\n\t}\n\n\trender() {\n\t\tconst { title, about, idx, address, receiver, acceptedTokenInfo} = this.props;\n\n\t\tconsole.log('acceptedtokenInfo', acceptedTokenInfo);\n\n\t\tconst poolIcons = [\n\t\t\t{ \"name\": \"poolShape1\", \"color\": palette(\"brand-red\")},\n\t\t\t{ \"name\": \"poolShape2\", \"color\": palette(\"brand-yellow\")},\n\t\t\t{ \"name\": \"poolShape3\", \"color\": palette(\"brand-blue\")},\n\t\t\t{ \"name\": \"poolShape4\", \"color\": palette(\"brand-pink\")},\n\t\t\t{ \"name\": \"poolShape5\", \"color\": palette(\"brand-green\")},\n\t\t]\n\n\t\tconst randomPoolIcon = poolIcons[idx % poolIcons.length];\n\n\t\tconst classnames = classNames({\n\t\t\t\"card\": true,\n\t\t\t\"card--open\": this.state.open,\n\t\t})\n\n\t\tconst userBalance = this.getUserBalancesInUSD(acceptedTokenInfo);\n\t\tconst totalBalance = this.getTotalBalancesInUSD(acceptedTokenInfo);\n\t\tconst tokenButtons = this.createTokenButtons(acceptedTokenInfo);\n\t\tconst tokenInfo = this.createTokenInfo(address, receiver, acceptedTokenInfo);\n\n\t\treturn (\n\t\t\t<div className={classnames}>\n\t\t\t\t<div className=\"card__header\">\n\t\t\t\t\t\t\t<Icon name={randomPoolIcon.name} size={32} color={randomPoolIcon.color} strokeWidth={3}/>\n\t\t\t\t<h3 className=\"mb0\">\n\t\t\t\t\t\t\t\t{ title }\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t<div className=\"card__header--right\">\n\t\t\t\t\t<p className=\"mb0\">{ about }</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card__header--right\">\n\t\t\t\t\t\t\t\t<p className=\"mb0\">{\"your contribution: $\" + userBalance}</p>\n\t\t\t\t\t\t\t\t<p className=\"mb0\">{\"total contribution: $\"+ totalBalance}</p>\n\t\t\t\t\t\t\t\t<div className=\"card__open-button\" onClick={this.toggleCardOpen}><Icon name={\"plus\"} size={32}/></div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"card__body\">\n\t\t\t\t\t\t\t\t{tokenButtons}\n\t\t\t\t\t\t\t\t{tokenInfo}\n\t\t\t\t\t\t</div>\n\t\t\t\t<div className=\"card__bar\"/>\n      \t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdaiAddress: state.daiAddress,\n\tactiveAccount: state.activeAccount,\n\ttokenMap: state.tokenMap,\n\townerPoolAddrs: state.ownerPoolAddrs,\n\townerPoolInfo: state.ownerPoolInfo,\n\tpoolTrackerAddress: state.poolTrackerAddress,\n})\n\nconst mapDispatchToProps = dispatch => ({\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card)\n","import React, {Component} from \"react\"\nimport { Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport Card from '../components/Card'\n\nclass Dashboard extends Component {\n\n\tcomponentDidMount = async () => {\n\t\ttry{\n\t\t\twindow.scrollTo(0,0);\n\t\t}\n\t\tcatch (error) {\n\t\t\t// Catch any errors for any of the above operations.\n\t\t\talert(\n\t\t\t\terror,\n\t\t\t);\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\tcomponentDidUpdate = () => {\n\t\tconsole.log('component did update');\n\t}\n\n\tcreateCardInfo = () => {\n\t\tif(this.props.verifiedPoolInfo === \"No Verified Pools\") return\n\t\tlet cardHolder = [];\n\t\tfor(let i = 0; i < this.props.verifiedPoolInfo.length; i++){\n\t\t\tconsole.log('a', (this.props.verifiedPoolInfo[i].name));\n\t\t\tconst item = this.props.verifiedPoolInfo[i];\n\t\t\tcardHolder.push(\n\t\t\t\t<Card\n\t\t\t\t\tkey={item.address}\n\t\t\t\t\ttitle={item.name}\n\t\t\t\t\tidx={i}\n\t\t\t\t\treceiver={item.receiver}\n\t\t\t\t\taddress={item.address}\n\t\t\t\t\tacceptedTokenInfo={item.acceptedTokenInfo}\n\t\t\t\t\tabout={item.about}\n\t\t\t\t\tonApprove = {this.approve}\n\t\t\t\t\tonDeposit = {this.deposit}\n\t\t\t\t\tonWithdrawDeposit = {this.withdrawDeposit}\n\t\t\t\t\tonClaim = {this.claim}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn cardHolder;\n\t}\n\n\trender() {\n\n\t\tconsole.log(\"*********verifiedPoolInfo:\", this.props.verifiedPoolInfo);\n\t\tconst cardHolder = this.createCardInfo();\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<article>\n\t\t\t\t\t<section className=\"page-section page-section--center horizontal-padding bw0\">\n\t\t\t\t\t\t{cardHolder}\n\t\t\t\t\t</section>\n\t\t\t\t</article>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdaiAddress: state.daiAddress,\n\tactiveAccount: state.activeAccount,\n\ttokenMap: state.tokenMap,\n\tverifiedPoolAddrs: state.verifiedPoolAddrs,\n\tverifiedPoolInfo: state.verifiedPoolInfo,\n\tpoolTrackerAddress: state.poolTrackerAddress,\n})\n\nconst mapDispatchToProps = dispatch => ({\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n","import React, {Component} from \"react\"\nimport { Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport Card from '../components/Card'\nimport Button from '../components/Button'\n\nimport {deploy} from '../func/contractInteractions';\n\nclass YourCause extends Component {\n\n\tcomponentDidMount = async () => {\n\t\ttry{\n\t\twindow.scrollTo(0,0);\n\t\t// Get network provider and web3 instance.\n\t\t//web3 = await getWeb3();\n\t\t//console.log('************web3', web3, getWeb3());\n\t\t// Use web3 to get the user's accounts.\n\t\t//this.accounts = await web3.eth.getAccounts();\n\t\t//console.log(this.accounts);\n\n\t\t//this.networkId = await web3.eth.net.getId();\n\n\t\t//console.log(\"network ID\", typeof this.networkId);\n\t\t}\n\t\tcatch (error) {\n\t\t\t// Catch any errors for any of the above operations.\n\t\t\talert(\n\t\t\t\t`Failed to load web3, accounts, or contract. Check console for details.`,\n\t\t\t);\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\tcomponentDidUpdate = () => {\n\t\tconsole.log('component did update');\n\t}\n\n\tcreateCardInfo = () => {\n\t\tif(this.props.ownerPoolInfo === \"No Verified Pools\") return\n\t\tlet cardHolder = [];\n\t\tfor(let i = 0; i < this.props.ownerPoolInfo.length; i++){\n\t\t\tconsole.log('a', (this.props.ownerPoolInfo[i].name));\n\t\t\tconst item = this.props.ownerPoolInfo[i];\n\t\t\tcardHolder.push(\n\t\t\t\t<Card\n\t\t\t\t\tkey={item.address}\n\t\t\t\t\ttitle={item.name}\n\t\t\t\t\tidx={i}\n\t\t\t\t\treceiver={item.receiver}\n\t\t\t\t\taddress={item.address}\n\t\t\t\t\tacceptedTokenInfo={item.acceptedTokenInfo}\n\t\t\t\t\tabout={item.about}\n\t\t\t\t\tonApprove = {this.approve}\n\t\t\t\t\tonDeposit = {this.deposit}\n\t\t\t\t\tonWithdrawDeposit = {this.withdrawDeposit}\n\t\t\t\t\tonClaim = {this.claim}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn cardHolder;\n\t}\n\n\trender() {\n\t\tconst cardHolder = this.createCardInfo();\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<article>\n\t\t\t\t<section className=\"page-section page-section--center horizontal-padding bw0\">\n\t\t\t\t\t<Button icon=\"plus\" text=\"Add Pool\" lg callback={async() => await deploy(this.props.tokenMap,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t this.props.poolTrackerAddress)}/>\n\t\t\t\t</section>\n\t\t\t\t\t<section className=\"page-section page-section--center horizontal-padding bw0\">\n\t\t\t\t\t\t{cardHolder}\n\t\t\t\t\t</section>\n\t\t\t\t</article>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdaiAddress: state.daiAddress,\n\tactiveAccount: state.activeAccount,\n\ttokenMap: state.tokenMap,\n\townerPoolAddrs: state.ownerPoolAddrs,\n\townerPoolInfo: state.ownerPoolInfo,\n\tpoolTrackerAddress: state.poolTrackerAddress,\n})\n\nconst mapDispatchToProps = dispatch => ({\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YourCause)","import React, {Component} from \"react\"\nimport { Fragment } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport Card from '../components/Card'\n\nclass Contributions extends Component {\n\n\tcomponentDidMount = async () => {\n\t\ttry{\n\t\t\twindow.scrollTo(0,0);\n\t\t\t// Get network provider and web3 instance.\n\t\t\t//web3 = await getWeb3();\n\t\t\t//console.log('************web3', web3, getWeb3());\n\t\t\t// Use web3 to get the user's accounts.\n\t\t\t//this.accounts = await web3.eth.getAccounts();\n\t\t\t//console.log(this.accounts);\n\n\t\t\t//this.networkId = await web3.eth.net.getId();\n\n\t\t\t//console.log(\"network ID\", typeof this.networkId);\n\t\t}\n\t\tcatch (error) {\n\t\t\t// Catch any errors for any of the above operations.\n\t\t\talert(\n\t\t\t\t`Failed to load web3, accounts, or contract. Check console for details.`,\n\t\t\t);\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\tcomponentDidUpdate = () => {\n\t\tconsole.log('component did update');\n\t}\n\n\tcreateCardInfo = () => {\n\t\tif(this.props.userDepositPoolInfo === \"No Verified Pools\") return\n\t\tlet cardHolder = [];\n\t\tfor(let i = 0; i < this.props.userDepositPoolInfo.length; i++){\n\t\t\tconsole.log('a', (this.props.userDepositPoolInfo[i].name));\n\t\t\tconst item = this.props.userDepositPoolInfo[i];\n\t\t\tcardHolder.push(\n\t\t\t\t<Card\n\t\t\t\t\tkey={item.address}\n\t\t\t\t\ttitle={item.name}\n\t\t\t\t\tidx={i}\n\t\t\t\t\treceiver={item.receiver}\n\t\t\t\t\taddress={item.address}\n\t\t\t\t\tacceptedTokenInfo={item.acceptedTokenInfo}\n\t\t\t\t\tabout={item.about}\n\t\t\t\t\tonApprove = {this.approve}\n\t\t\t\t\tonDeposit = {this.deposit}\n\t\t\t\t\tonWithdrawDeposit = {this.withdrawDeposit}\n\t\t\t\t\tonClaim = {this.claim}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn cardHolder;\n\t}\n\n\trender() {\n\t\tconst cardHolder = this.createCardInfo();\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<article>\n\t\t\t\t\t<section className=\"page-section page-section--center horizontal-padding bw0\">\n\t\t\t\t\t\t{cardHolder}\n\t\t\t\t\t</section>\n\t\t\t\t</article>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdaiAddress: state.daiAddress,\n\tactiveAccount: state.activeAccount,\n\ttokenMap: state.tokenMap,\n\tuserDepositPoolAddrs: state.userDepositPoolAddrs,\n\tuserDepositPoolInfo: state.userDepositPoolInfo,\n\tpoolTrackerAddress: state.poolTrackerAddress,\n})\n\nconst mapDispatchToProps = dispatch => ({\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contributions)","import React, {Component} from \"react\"\n\nclass Logo extends Component {\n\n\trender() {\n\t\treturn (\n            <svg className=\"logo\" width=\"24px\" height=\"24px\" viewBox=\"0 0 21 21\">\n                <defs>\n                    <circle id=\"path-1\" cx=\"10.5\" cy=\"10.5\" r=\"9.5\"></circle>\n                </defs>\n                <g stroke=\"none\" fill=\"none\" fillRule=\"evenodd\">\n                    <mask id=\"mask\" fill=\"white\">\n                        <use xlinkHref=\"#path-1\"></use>\n                    </mask>\n                    <line x1=\"4\" y1=\"20\" x2=\"14\" y2=\"15\" stroke=\"#3FA7D6\" strokeWidth=\"3\" strokeLinecap=\"butt\" mask=\"url(#mask)\"></line>\n                    <line x1=\"2\" y1=\"15\" x2=\"16\" y2=\"8\" stroke=\"#E0C723\" strokeWidth=\"3\" strokeLinecap=\"butt\" mask=\"url(#mask)\"></line>\n                    <line x1=\"2\" y1=\"9\" x2=\"10\" y2=\"5\" stroke=\"#CE3232\" strokeWidth=\"3\" strokeLinecap=\"butt\" mask=\"url(#mask)\"></line>\n                    <circle stroke=\"#FFFFFF\" cx=\"10.5\" cy=\"10.5\" r=\"9.5\" strokeWidth=\"2\"></circle>\n                </g>\n            </svg>\n\t\t);\n\t}\n}\n\nexport default Logo","import React, {Component} from \"react\"\n\nclass TextLink extends Component {\n\n\trender() {\n\t\tconst { text, href } = this.props;\n\n\t\treturn (\n      <button className=\"button button--text-link\" href={href}>\n        <div className=\"button__item\">\n          { text }\n        </div>\n        <div className=\"button__bar--outer\">\n          <div className=\"button__bar--inner\"/>\n        </div>\n      </button>\n\t\t);\n\t}\n}\n\nexport default TextLink\n","import React, {Component} from \"react\"\nimport classNames from 'classnames'\n\nclass Takeover extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    }\n  }\n\n  toggle = () => {\n    this.setState({\n      open: !this.state.open\n    })\n  }\n\n\trender() {\n    const classnames = classNames({\n      \"takeover\": true,\n      \"takeover--open\": this.state.open,\n    })\n\n\t\treturn (\n      <div className={classnames}>\n        <nav className='takeover__panel horizontal-padding'>\n          { this.props.children }\n        </nav>\n        <div className='takeover__hamburger' onClick={this.toggle}>\n          <div className=\"takeover__hamburger__line\"/>\n          <div className=\"takeover__hamburger__line\"/>\n          <div className=\"takeover__hamburger__line\"/>\n        </div>\n      </div>\n\t\t);\n\t}\n}\n\nexport default Takeover\n","import React, {Component, Fragment} from \"react\";\nimport { connect } from \"react-redux\"\n\nimport Logo from \"./Logo\";\nimport Button from \"./Button\";\nimport TextLink from \"./TextLink\";\nimport { NavLink } from 'react-router-dom'\nimport Takeover from \"./Takeover\";\n\nclass Header extends Component {\n\n  isMetaMaskInstalled = () => {\n\t\t//Have to check the ethereum binding on the window object to see if it's installed\n\t\tconst { ethereum } = window;\n\t\treturn Boolean(ethereum && ethereum.isMetaMask);\n\t}\n\n\tconnectToWeb3 = async() => {\n\t\tif(this.isMetaMaskInstalled()){\n\t\t\ttry {\n\t\t\t\t// Will open the MetaMask UI\n\t\t\t\t// You should disable this button while the request is pending!\n\t\t\t\tconst { ethereum } = window;\n\t\t\t\tlet request = await ethereum.request({ method: 'eth_requestAccounts' });\n\t\t\t\tconsole.log('request', request);\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n  displayAddress = (address) => {\n    if(address === 'Connect')\n      return address;\n\n    return address.slice(0, 6) + \"...\"+address.slice(-4);\n  }\n\n\trender() {\n    const { isMobile } = this.props;\n\n    const nav = (\n      <Fragment>\n        <NavLink exact to={\"/dashboard\"}>\n          <TextLink text=\"Dashboard\"/>\n        </NavLink>\n        <NavLink exact to={\"/yourcause\"}>\n          <TextLink text=\"Your Cause\"/>\n        </NavLink>\n        <NavLink exact to={\"/contributions\"}>\n          <TextLink text=\"Contributions\"/>\n        </NavLink>\n        <NavLink exact to={\"/\"}>\n          <TextLink text=\"How it works\"/>\n        </NavLink>\n      </Fragment>\n    )\n\t\treturn (\n      <header className=\"app-bar horizontal-padding\">\n        <Takeover>\n          { nav }\n        </Takeover>\n        <NavLink exact to={\"/\"} className=\"app-bar__left tdn\">\n          <Logo/>\n          <h2 className=\"mb0\">JustCause</h2>\n        </NavLink>\n\n        <nav className=\"app-bar__items\">\n          { nav }\n          <Button text={isMobile ? null : this.displayAddress(this.props.activeAccount)} icon={\"wallet\"} callback={this.connectToWeb3}/>\n        </nav>\n      </header>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tisMobile: state.isMobile,\n  activeAccount: state.activeAccount,\n})\n\nexport default connect(mapStateToProps)(Header)","import React, {Component, Fragment} from \"react\"\nimport classNames from 'classnames'\n\nimport Icon from \"./Icon\";\n\nclass ModalHeader extends Component {\n  render() {\n\t\treturn (\n      <div className=\"modal__header\">\n        <Fragment>\n            { this.props.children }\n            <div className=\"modal__close-btn\" onClick={this.closeModal}>\n              <Icon name={\"plus\"} size={32}/>\n            </div>\n        </Fragment>\n      </div>\n\t\t);\n\t}\n}\n\nclass ModalBody extends Component {\n  render() {\n\t\treturn (\n      <div className=\"modal__body\">\n        { this.props.children }\n      </div>\n\t\t);\n\t}\n}\n\nclass ModalCtas extends Component {\n  render() {\n\t\treturn (\n      <div className=\"modal__ctas\">\n        { this.props.children }\n      </div>\n\t\t);\n\t}\n}\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    }\n  }\n\n  componentDidMount() {\n\t\tdocument.addEventListener('mousedown', this.handleClickOutside);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener('mousedown', this.handleClickOutside);\n\t}\n\n  handleClickOutside = (event) => {\n    if (!this.refs[\"modal\"].contains(event.target)) {\n      this.closeModal();\n    }\n  }\n\n  openModal = () => {\n    this.setState({\n      isOpen: true\n    })\n  }\n\n  closeModal = () => {\n    this.setState({\n      isOpen: false\n    })\n  }\n\n\trender() {\n    const classnames = classNames({\n      \"modal\": true,\n      \"modal--open\": this.state.isOpen,\n    })\n\n\t\treturn (\n      <div className={classnames}>\n        <div className=\"modal__background\"/>\n        <div className=\"modal__box theme--white\" ref=\"modal\">\n          { this.props.children }\n        </div>\n      </div>\n\t\t);\n\t}\n}\n\nexport { Modal, ModalHeader, ModalBody, ModalCtas }\n","import React, {Component} from \"react\"\nimport classNames from 'classnames'\n\nimport Icon from \"./Icon\";\n\nclass TextField extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      focused: false,\n      completed: this.props.value,\n      value: this.props.value ? this.props.value :  ''\n    }\n  }\n\n  componentDidMount() {\n\t\tdocument.addEventListener('mousedown', this.handleClickOutside);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener('mousedown', this.handleClickOutside);\n\t}\n\n  handleClickOutside = (event) => {\n    if (!this.refs[\"container\"].contains(event.target)) {\n      this.unfocusField();\n    }\n  }\n\n  focusField = () => {\n    this.setState({\n      focused: true,\n    })\n  }\n\n  unfocusField = () => {\n    this.setState({\n      completed: this.refs[\"input\"].value.length > 0,\n      focused: false\n    })\n  }\n\n  updateValue = (e) => {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n\trender() {\n\t\tconst { label, placeholder, id } = this.props;\n\n    const classnames = classNames({\n      \"textfield\": true,\n      \"textfield--focused\": this.state.focused,\n      \"textfield--completed\": this.state.completed,\n    })\n\n\t\treturn (\n      <div className={classnames} onClick={this.state.focused ? this.unfocusField : this.focusField } ref=\"container\">\n        <div className=\"textfield__box\">\n          <Icon name={\"pencil\"} size={32}/>\n          <label className=\"textfield__label\">{label}</label>\n          <input ref=\"input\" className=\"textfield__input\" id={id}\n          placeholder={placeholder}\n          value={this.state.value}\n          onChange={this.updateValue}\n          />\n        </div>\n        <div className=\"textfield__bar\"/>\n      </div>\n\t\t);\n\t}\n}\n\nexport default TextField\n","import React, {Component} from \"react\"\nimport classNames from 'classnames'\n\nimport Icon from \"./Icon\";\n\nclass Select extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      selected: this.props.selected ? this.props.selected : this.props.children[0],\n    }\n  }\n\n  componentDidMount() {\n\t\tdocument.addEventListener('mousedown', this.handleClickOutside);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener('mousedown', this.handleClickOutside);\n\t}\n\n  handleClickOutside = (event) => {\n    if (!this.refs[\"container\"].contains(event.target)) {\n      this.close();\n    }\n  }\n\n  open = () => {\n    this.setState({\n      open: true,\n    })\n  }\n\n  close = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  changeSelected = (item) => {\n    this.setState(prevState => ({\n      selected: item,\n      open: false\n    }))\n  }\n\n\trender() {\n\t\tconst { label } = this.props;\n\n    const classnames = classNames({\n      \"select\": true,\n      \"select--open\": this.state.open,\n    })\n\n    const options = this.props.children.map((item, i) => (\n      <div key={i} className=\"select__option\" onClick={() => this.changeSelected(item)}>\n        { item }\n        { this.state.selected === item ? (<Icon name=\"check\" size={32}/>) : null }\n      </div>\n    ))\n\n\t\treturn (\n      <div className={classnames} ref=\"container\">\n        <label className=\"select__label\">{label}</label>\n        <div className=\"select__selected-box\" onClick={this.state.open ? this.close : this.open }>\n          <div className=\"select__selected\">\n            { this.state.selected }\n          </div>\n          <div className=\"select__caret\">\n            <Icon name={\"caret\"} size={32}/>\n          </div>\n        </div>\n        <div className=\"select__bar\"/>\n        <div className=\"select__options\">\n          { options }\n        </div>\n      </div>\n\t\t);\n\t}\n}\n\nexport default Select\n","import React, {Component, Fragment} from \"react\"\nimport classNames from 'classnames'\n\nimport Icon from \"./Icon\";\n\nclass Multiselect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      selected: this.props.selected ? this.props.selected : this.props.children,\n    }\n  }\n\n  componentDidMount() {\n\t\tdocument.addEventListener('mousedown', this.handleClickOutside);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener('mousedown', this.handleClickOutside);\n\t}\n\n  handleClickOutside = (event) => {\n    if (!this.refs[\"container\"].contains(event.target)) {\n      this.close();\n    }\n  }\n\n  open = () => {\n    this.setState({\n      open: true,\n    })\n  }\n\n  close = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  changeSelected = (item) => {\n    const unselected = Array.from(this.props.children).filter(e => this.state.selected.includes(e) || e == item);\n    this.setState({\n      selected: this.state.selected.includes(item) ? this.state.selected.filter(e => e !== item) : unselected\n    })\n  }\n\n\trender() {\n\t\tconst { label } = this.props;\n\n    const classnames = classNames({\n      \"select\": true,\n      \"select--open\": this.state.open,\n    })\n\n    const options = this.props.children.map((item, i) => (\n      <div key={i} className=\"select__option\" onClick={() => this.changeSelected(item)}>\n        { item }\n        { this.state.selected.includes(item) ? (<Icon name=\"check\" size={32}/>) : null }\n      </div>\n    ))\n\n\t\treturn (\n      <div className={classnames} ref=\"container\">\n        <label className=\"select__label\">{label}</label>\n        <div className=\"select__selected-box\" style={{ minWidth: '224px' }}>\n          <div className=\"select__selected\" onClick={this.state.open ? this.close : this.open }>\n            { this.state.selected.map((item, i) => (\n              <Fragment key={i}>\n                { item }{ i < this.state.selected.length - 1 ? ',' : '' }\n              </Fragment>\n            )) }\n          </div>\n          <div className=\"select__caret\">\n            <Icon name={\"caret\"} size={32}/>\n          </div>\n        </div>\n        <div className=\"select__bar\"/>\n        <div className=\"select__options\">\n          { options }\n        </div>\n      </div>\n\t\t);\n\t}\n}\n\nexport default Multiselect\n","import React, {Component, Fragment} from \"react\"\nimport { ModalHeader, ModalBody, ModalCtas } from \"../Modal\";\nimport TextField from '../TextField'\nimport Select from '../Select'\nimport Button from '../Button'\nimport Icon from '../Icon'\n\nimport palette from '../../utils/palette'\nimport Multiselect from '../Multiselect'\n\nexport default class NewPoolModal extends Component {\n  render() {\n\t\treturn (\n      <Fragment>\n        <ModalHeader>\n          <h2 className=\"mb0\">Create a new pool</h2>\n        </ModalHeader>\n        <ModalBody>\n          <Select label=\"Icon\">\n            <Icon name=\"poolShape1\" size={32} color={palette(\"brand-red\")} strokeWidth={3}/>\n            <Icon name=\"poolShape2\" size={32} color={palette(\"brand-yellow\")} strokeWidth={3}/>\n            <Icon name=\"poolShape3\" size={32} color={palette(\"brand-blue\")} strokeWidth={3}/>\n            <Icon name=\"poolShape4\" size={32} color={palette(\"brand-pink\")} strokeWidth={3}/>\n            <Icon name=\"poolShape5\" size={32} color={palette(\"brand-green\")} strokeWidth={3}/>\n          </Select>\n          <TextField label=\"Pool Name\" id=\"poolName\"/>\n          <TextField label=\"Recieving Address\" value={\"0x0c635327a1E3c935A55374b9c69D06978A182095\"}/>\n          <TextField label=\"Pool Description\" placeholder=\"Add a short description for your pool\"/>\n          <Multiselect label=\"Accepted Tokens\">\n            <p className=\"mb0\">DAI</p>\n            <p className=\"mb0\">USDC</p>\n            <p className=\"mb0\">ETH</p>\n          </Multiselect>\n        </ModalBody>\n        <ModalCtas>\n          <Button text=\"Create\" disabled={true}/>\n        </ModalCtas>\n      </Fragment>\n\t\t);\n\t}\n}","import React from 'react'\nimport { Route, Switch } from 'react-router'\n\nimport Homepage from './Homepage'\nimport Dashboard from './Dashboard'\nimport YourCause from './YourCause'\nimport Contributions from './Contributions'\n\nimport Header from '../components/Header'\nimport { Modal } from '../components/Modal'\nimport NewPoolModal from '../components/modals/NewPoolModal'\n\nconst routes = (\n\t<main>\n\t\t<Switch>\n\t\t\t<Route exact path={\"/\"} component={Homepage}/>\n\t\t\t<Route exact path={\"/dashboard\"} component={Dashboard}/>\n\t\t\t<Route exact path={\"/yourcause\"} component={YourCause}/>\n\t\t\t<Route exact path={\"/contributions\"} component={Contributions}/>\n\t\t</Switch>\n\t\t<Header/>\n\t\t<Modal>\n\t\t\t<NewPoolModal/>\n\t\t</Modal>\n\t</main>\n)\n\n\nexport default routes\n","\nimport Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          //await window.ethereum.enable();\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;","\nexport const kovanTokenMap = {\n                       AAVE: {address: \"0xB597cd8D3217ea6477232F9217fa70837ff667Af\", decimals: 18, apiKey: \"aave\"},\n                       BAT: {address: \"0x2d12186Fbb9f9a8C28B3FfdD4c42920f8539D738\", decimals: 18, apiKey: \"bat\"},\n                       BUSD: {address: \"0x4c6E1EFC12FDfD568186b7BAEc0A43fFfb4bCcCf\", decimals: 18, apiKey: \"busd\"},\n                       DAI: {address:\"0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD\", decimals: 18, apiKey: \"dai\"},\n                       ENJ: {address:\"0xC64f90Cd7B564D3ab580eb20a102A8238E218be2\", decimals: 18, apiKey: \"enj\"},\n                       //LINK: {address:\"0xAD5ce863aE3E4E9394Ab43d4ba0D80f419F61789\", decimals: 18, apikey:\"chainlink\"},\n                       //MANA: {address:\"0x738Dc6380157429e957d223e6333Dc385c85Fec7\", decimals: 18, apikey: \"decentraland\"},\n                       MKR: {address:\"0x61e4CAE3DA7FD189e52a4879C7B8067D7C2Cc0FA\",decimals: 18, apiKey: \"mkr\"},\n                       REN: {address:\"0x5eebf65A6746eed38042353Ba84c8e37eD58Ac6f\",decimals: 18, apiKey: \"ren\"},\n                       SNX: {address:\"0x7FDb81B0b8a010dd4FFc57C3fecbf145BA8Bd947\",decimals: 18, apiKey: \"synthetix\"},\n                       TUSD: {address:\"0x016750AC630F711882812f24Dba6c95b9D35856d\",decimals: 18, apiKey: \"tusd\"},\n                       USDC: {address:\"0xe22da380ee6B445bb8273C81944ADEB6E8450422\",decimals: 6, apiKey: \"usdc\"},\n                       USDT: {address:\"0x13512979ADE267AB5100878E2e0f485B568328a4\",decimals: 6, apiKey: \"usdt\"},\n                       WBTC: {address:\"0xD1B98B6607330172f1D991521145A22BCe793277\",decimals: 8, apiKey: \"wbtc\"},\n                       ETH: {address:\"0xd0A1E359811322d97991E03f863a0C30C2cF029C\",decimals: 18, apiKey: \"eth\"},\n                       YFI: {address:\"0xb7c325266ec274fEb1354021D27FA3E3379D840d\",decimals: 18, apiKey: \"yfi\"},\n                       ZRX: {address:\"0xD0d76886cF8D952ca26177EB7CfDf83bad08C00C\",decimals: 18, apiKey: \"zrx\"},\n                       UNI: {address:\"0x075A36BA8846C6B6F53644fDd3bf17E5151789DC\",decimals: 18, apiKey: \"uniswap\"},\n                       AMPL: {address:\"0x3E0437898a5667a4769B1Ca5A34aAB1ae7E81377\",decimals: 9, apiKey: \"ampl\"},\n}\n","export const getPriceFromMessari = async(apiKey) => {\n    const url = \"https://data.messari.io/api/v1/assets/\"+apiKey+\"/metrics/market-data\"\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open( \"GET\", url, false ); // false for synchronous request\n    xmlHttp.send( null );\n    return xmlHttp.responseText;\n}\n\n","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { ConnectedRouter } from 'connected-react-router'\n//import { createBrowserHistory } from 'history'\nimport { createHashHistory } from 'history'\n\nimport routes from './routes'\nimport { detectMobile } from \"./actions/mobile\"\nimport { updateActiveAccount } from \"./actions/activeAccount\"\nimport { updateTokenMap } from \"./actions/tokenMap\"\nimport { updateVerifiedPoolAddrs } from \"./actions/verifiedPoolAddrs\"\nimport { updateVerifiedPoolInfo } from \"./actions/verifiedPoolInfo\"\nimport { updateOwnerPoolAddrs } from \"./actions/ownerPoolAddrs\"\nimport { updateOwnerPoolInfo } from \"./actions/ownerPoolInfo\"\nimport { updateUserDepositPoolAddrs } from \"./actions/userDepositPoolAddrs\"\nimport { updateUserDepositPoolInfo } from \"./actions/userDepositPoolInfo\"\nimport { updatePoolTrackerAddress } from \"./actions/poolTrackerAddress\"\n\nimport getWeb3 from \"../getWeb3\";\nimport PoolTracker from \"../contracts/PoolTracker.json\";\nimport JCDepositorERC721 from \"../contracts/JCDepositorERC721.json\";\nimport JCOwnerERC721 from \"../contracts/JCOwnerERC721.json\";\nimport ProtocolDataProvider from \"../contracts/not_truffle/ProtocolDataProvider.json\";\nimport { kovanTokenMap } from \"./func/tokenMaps.js\";\nimport {getPoolInfo} from './func/contractInteractions.js';\nimport {getPriceFromMessari} from './func/messariPriceFeeds.js'\n\n//import { load } from \"dotenv\";\n\nclass App extends Component {\n\n\tcomponentDidMount = async() => {\n\t\ttry {\n\t\t\twindow.addEventListener('resize', this.props.detectMobile);\n\t\t\tconsole.log('app.js componentDidMount called');\n\t\t\tthis.web3 = await getWeb3();\n\t\t\tthis.accounts = await this.web3.eth.getAccounts();\n\t\t\tlet activeAccount = await this.web3.currentProvider.selectedAddress;\n\t\t\tif(!activeAccount){\n\t\t\t\tconsole.log('accounts' , this.accounts, this.accounts[0]);\n\t\t\t\tactiveAccount = this.accounts[0];\n\t\t\t}\n\n\t\t\t//activeAccount = this.accounts[0];\n\t\t\tthis.networkId = await this.web3.eth.net.getId();\n\n\t\t\tthis.AaveProtocolDataProviderInstance = new this.web3.eth.Contract(\n\t\t\t\tProtocolDataProvider.abi,\n\t\t\t\tProtocolDataProvider.networks[this.networkId] && ProtocolDataProvider.networks[this.networkId].address,\n\t\t\t);\n\n\t\t\tthis.PoolTrackerInstance = new this.web3.eth.Contract(\n\t\t\t\tPoolTracker.abi,\n\t\t\t\tPoolTracker.networks[this.networkId] && PoolTracker.networks[this.networkId].address,\n\t\t\t);\n\n\t\t\tthis.poolTrackerAddress = PoolTracker.networks[this.networkId].address;\n\n\t\t\tconst tokenMap = this.getTokenMapFromNetwork();\n\t\t\tthis.setTokenMapState(tokenMap);\n\t\t\tthis.setActiveAccountState(activeAccount);\n\t\t\tthis.setPoolState(activeAccount);\n\t\t\tthis.setPoolTrackAddress(this.poolTrackerAddress);\n\n\t\t\tlet results = await this.AaveProtocolDataProviderInstance.methods.getAllATokens().call();\n\t\t\tconsole.log('aave protocol data response', results);\n\t\t}\n\n\t\tcatch (error) {\n\t\t\t// Catch any errors for any of the above operations.\n\t\t\talert(\n\t\t\t\t`Failed to load web3, accounts, or contract. Check console for details. If not connected to site please select the Connect Button`,\n\t\t\t);\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('resize', this.props.detectMobile);\n\t}\n\n\tisMetaMaskInstalled = () => {\n\t\t//Have to check the ethereum binding on the window object to see if it's installed\n\t\tconst { ethereum } = window;\n\t\treturn Boolean(ethereum && ethereum.isMetaMask);\n\t}\n\n\tconnectToWeb3 = async() => {\n\t\tif(this.isMetaMaskInstalled()){\n\t\t\ttry {\n\t\t\t\t// Will open the MetaMask UI\n\t\t\t\t// (You should disable this button while the request is pending)\n\t\t\t\tconst { ethereum } = window;\n\t\t\t\tlet request = await ethereum.request({ method: 'eth_requestAccounts' });\n\t\t\t\tconsole.log('request', request);\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetAaveData = async() => {\n\t\tlet results = await this.AaveProtocolDataProviderInstance.methods.getAllATokens().call();\n\t\tconsole.log('aave protocol data response', results);\n\t}\n\n\tsetPoolTrackAddress = (poolTrackerAddress) => {\n\t\tthis.props.updatePoolTrackerAddress(poolTrackerAddress);\n\t}\n\n\tsetActiveAccountState = (activeAccount) => {\n\t\tconsole.log('activeAccount', activeAccount);\n\t\tthis.props.updateActiveAccount(activeAccount);\n\t}\n\tgetTokenMapFromNetwork = () => {\n\t\tif(this.networkId === 42){\n\t\t\treturn kovanTokenMap;\n\t\t}\n\t}\n\tsetTokenMapState = async(tokenMap) => {\n\t\tconsole.log('token Map keys', Object.keys(tokenMap));\n\n\t\tlet acceptedTokens = Object.keys(tokenMap);\n\t\tfor(let i = 0; i < acceptedTokens.length; i++){\n\t\t\tconst key = acceptedTokens[i];\n\t\t\tconst address =  tokenMap[key] && tokenMap[key].address;\n\t\t\tconst aaveTokenInfo = await this.AaveProtocolDataProviderInstance.methods.getReserveData(address).call();\n\t\t\ttokenMap[key]['depositAPY'] = this.calculateAPY(aaveTokenInfo.liquidityRate).toPrecision(4);\n\t\t\tconsole.log(key, tokenMap[key] && tokenMap[key].apiKey, address);\n\t\t\tlet result = JSON.parse(await getPriceFromMessari(tokenMap[key] && tokenMap[key].apiKey));\n\t\t\tresult = result.data.market_data.price_usd;\n\t\t\ttokenMap[key]['priceUSD'] = result;\n\t\t\tconsole.log('api response:', result);\n\t\t}\n\t\tconsole.log('updated tokenMap', tokenMap, typeof tokenMap);\n\t\tthis.props.updateTokenMap(tokenMap);\n\t}\n\n\tcalculateAPY = (liquidityRate) => {\n\t\tconst RAY = 10**27;\n\t\tconst SECONDS_PER_YEAR = 31536000;\n\t\tconst depositAPR = liquidityRate/RAY;\n\t\t//return 1+ (depositAPR / SECONDS_PER_YEAR);\n\t\treturn (((1 + (depositAPR / SECONDS_PER_YEAR)) ** SECONDS_PER_YEAR) - 1)*100;\n\t}\n\n\tgetOwnerAddress = async(activeAccount) => {\n\t\tlet userOwnedPools = [];\n\t\tconst ERCAddr = await this.PoolTrackerInstance.methods.getOwnerERC721Address().call();\n\t\tconst ERCInstance = new this.web3.eth.Contract(\n\t\t\tJCOwnerERC721.abi,\n\t\t\tERCAddr,\n\t\t);\n\n\t\tlet balance = await ERCInstance.methods.balanceOf(activeAccount).call();\n\n\t\tfor(let i = 0; i < balance; i++){\n\t\t\tconst tokenId = await ERCInstance.methods.tokenOfOwnerByIndex(activeAccount, i).call();\n\t\t\tconsole.log('tokenId:', tokenId);\n\t\t\tconst ownerInfo = await ERCInstance.methods.getCreation(tokenId).call();\n\t\t\tconsole.log('pool:', ownerInfo);\n\t\t\tuserOwnedPools.push(ownerInfo.pool);\n\t\t}\n\n\t\treturn userOwnedPools;\n\t}\n\n\tgetDepostorAddress = async(activeAccount) => {\n\t\tlet userDepositPools = [];\n\t\tlet userBalancePools = {};\n\t\tconst ERCAddr = await this.PoolTrackerInstance.methods.getDepositorERC721Address().call();\n\t\tconst ERCInstance = new this.web3.eth.Contract(\n\t\t\tJCDepositorERC721.abi,\n\t\t\tERCAddr,\n\t\t);\n\n\t\tlet balance = await ERCInstance.methods.balanceOf(activeAccount).call();\n\t\tconsole.log('balanceOf:', balance);\n\n\t\tfor(let i = 0; i < balance; i++){\n\t\t\tconst tokenId = await ERCInstance.methods.tokenOfOwnerByIndex(activeAccount, i).call();\n\t\t\tconsole.log('tokenId:', tokenId);\n\t\t\tconst depositInfo = await ERCInstance.methods.getDepositInfo(tokenId).call();\n\t\t\tconsole.log('pool:', depositInfo);\n\t\t\tif(depositInfo.balance > 0){\n\t\t\t\tuserDepositPools.push(depositInfo.pool);\n\t\t\t\tuserBalancePools[depositInfo.pool+depositInfo.asset] = depositInfo.balance;\n\t\t\t}\n\t\t}\n\n\t\treturn {'depositPools':[...new Set(userDepositPools)], 'balances':userBalancePools};\n\t}\n\n\tsetPoolState = async(activeAccount) => {\n\t\t//const { verifiedPools, ownerPools, userDepositPools, verifiedPoolInfo, ownerPoolInfo, userDepositPoolInfo } = getPoolStateFromChain(activeAccount, this.getTokenMapFromNetwork, this.networkId);\n\t\tconst verifiedPools = await this.PoolTrackerInstance.methods.getVerifiedPools().call();\n\t\tconst ownerPools = await this.getOwnerAddress(activeAccount); //await this.PoolTrackerInstance.methods.getUserOwned(activeAccount).call();\n\t\tconst depositBalancePools = await this.getDepostorAddress(activeAccount); //await this.PoolTrackerInstance.methods.getUserDeposits(activeAccount).call();\n\t\tconst userDepositPools = depositBalancePools.depositPools;\n\t\tconst userBalancePools = depositBalancePools.balances;\n\n\t\tconsole.log('userBalancePools', userBalancePools);\n\t\tlet isHashMatch = true;\n\t\tfor(let i = 0; i < verifiedPools.length; i++){\n\t\t\tconst isMatch = await this.PoolTrackerInstance.methods.checkByteCode(verifiedPools[i]).call();\n\t\t\tif(!isMatch){\n\t\t\t\tisHashMatch = false;\n\t\t\t}\n\t\t}\n\t\tconsole.log('isHashMatch', isHashMatch);\n\n\t\tconst verifiedPoolInfo = await getPoolInfo(verifiedPools, this.getTokenMapFromNetwork(), activeAccount, userBalancePools);\n\t\tconst ownerPoolInfo = await getPoolInfo(ownerPools, this.getTokenMapFromNetwork(), activeAccount, userBalancePools);\n\t\tconst userDepositPoolInfo = await getPoolInfo(userDepositPools, this.getTokenMapFromNetwork(), activeAccount, userBalancePools);\n\n\t\tconsole.log('---------verifiedPoolInfo--------', verifiedPoolInfo);\n\t\tconsole.log('---------ownerPoolInfo--------', ownerPoolInfo);\n\t\tconsole.log('---------userDepositPoolInfo--------', userDepositPoolInfo);\n\n\t\tthis.props.updateVerifiedPoolAddrs(verifiedPools);\n\t\tthis.props.updateOwnerPoolAddrs(ownerPools);\n\t\tthis.props.updateUserDepositPoolAddrs(userDepositPools);\n\n\t\tthis.props.updateVerifiedPoolInfo(verifiedPoolInfo);\n\t\tthis.props.updateOwnerPoolInfo(ownerPoolInfo);\n\t\tthis.props.updateUserDepositPoolInfo(userDepositPoolInfo);\n\t}\n\n\trender() {\n\t\tlet history;\n\t\tif (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\") {\n\t\t\thistory = this.props.history;\n\t\t} else {\n\t\t\thistory = createHashHistory({ basename: '/just_cause' })\n\t\t}\n\n\t\treturn (\n    \t<ConnectedRouter history={history}>\n        \t{ routes }\n\t\t\t</ConnectedRouter>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tisMobile: state.isMobile,\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tdetectMobile: () => dispatch(detectMobile()),\n\tupdateActiveAccount: (s) => dispatch(updateActiveAccount(s)),\n\tupdateTokenMap: (tokenMap) => dispatch(updateTokenMap(tokenMap)),\n\tupdateVerifiedPoolAddrs: (addrsArray) => dispatch(updateVerifiedPoolAddrs(addrsArray)),\n\tupdateVerifiedPoolInfo: (infoArray) => dispatch(updateVerifiedPoolInfo(infoArray)),\n\tupdateOwnerPoolAddrs: (addrsArray) => dispatch(updateOwnerPoolAddrs(addrsArray)),\n\tupdateUserDepositPoolInfo: (infoArray) => dispatch(updateUserDepositPoolInfo(infoArray)),\n\tupdateUserDepositPoolAddrs: (addrsArray) => dispatch(updateUserDepositPoolAddrs(addrsArray)),\n\tupdateOwnerPoolInfo: (infoArray) => dispatch(updateOwnerPoolInfo(infoArray)),\n\tupdatePoolTrackerAddress: (s) => dispatch(updatePoolTrackerAddress(s)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","export const detectMobile = () => ({\n\ttype: 'DETECT_MOBILE',\n})\n","export const updateActiveAccount = (value) => ({\n\ttype: 'UPDATE_ACTIVE_ACCOUNT',\n\tvalue\n})","export const updateTokenMap = (value) => ({\n\ttype: 'UPDATE_TOKEN_MAP',\n\tvalue\n})","export const updateVerifiedPoolAddrs = (value) => ({\n\ttype: 'UPDATE_VERIFIED_POOL_ADDRS',\n\tvalue,\n})","export const updateVerifiedPoolInfo = (value) => ({\n\ttype: 'UPDATE_VERIFIED_POOL_INFO',\n\tvalue\n})","export const updateOwnerPoolAddrs = (value) => ({\n\ttype: 'UPDATE_OWNER_POOL_ADDRS',\n\tvalue,\n})","export const updateUserDepositPoolInfo = (value) => ({\n\ttype: 'UPDATE_USER_DEPOSIT_POOL_INFO',\n\tvalue\n})","export const updateUserDepositPoolAddrs = (value) => ({\n\ttype: 'UPDATE_USER_DEPOSIT_POOL_ADDRS',\n\tvalue,\n})","export const updateOwnerPoolInfo = (value) => ({\n\ttype: 'UPDATE_OWNER_POOL_INFO',\n\tvalue\n})","export const updatePoolTrackerAddress = (value) => ({\n\ttype: 'UPDATE_POOL_TRACKER_ADDRESS',\n\tvalue,\n})","const mobileReducer = (state = (window.innerWidth <= 800), action) => {\n\tswitch (action.type) {\n\t\tcase 'DETECT_MOBILE':\n\t\t\treturn (window.innerWidth <= 800)\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default mobileReducer","const daiAddressReducer = (state = 'Default Address', action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_DAI_ADDRESS':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default daiAddressReducer","const activeAccountReducer = (state = 'Connect', action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_ACTIVE_ACCOUNT':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default activeAccountReducer","const tokenMapReducer = (state = 'No Map Available', action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_TOKEN_MAP':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default tokenMapReducer","const verifiedPoolAddrsReducer = (state = 'No Verified Pools', action) => {\n\t//console.log(\"verifiedPoolAddrsReducer called\", action.type)\n\tswitch (action.type) {\n\t\tcase 'UPDATE_VERIFIED_POOL_ADDRS':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default verifiedPoolAddrsReducer","const verifiedPoolInfoReducer = (state = 'No Verified Pools', action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_VERIFIED_POOL_INFO':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default verifiedPoolInfoReducer","const ownerPoolAddrsReducer = (state = 'No Verified Pools', action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_OWNER_POOL_ADDRS':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default ownerPoolAddrsReducer","const ownerPoolInfoReducer = (state = 'No Verified Pools', action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_OWNER_POOL_INFO':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default ownerPoolInfoReducer","const userDepositPoolAddrsReducer = (state = 'No Verified Pools', action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_USER_DEPOSIT_POOL_ADDRS':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default userDepositPoolAddrsReducer","const userDepositPoolInfoReducer = (state = 'No Verified Pools', action) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE_USER_DEPOSIT_POOL_INFO':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default userDepositPoolInfoReducer","const poolTrackerAddressReducer = (state = null, action) => {\n\t//console.log(\"verifiedPoolAddrsReducer called\", action.type)\n\tswitch (action.type) {\n\t\tcase 'UPDATE_POOL_TRACKER_ADDRESS':\n\t\t\treturn action.value\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default poolTrackerAddressReducer","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport mobileReducer from './mobile'\nimport daiAddressReducer from './daiAddress'\nimport activeAccountReducer from './activeAccount'\nimport tokenMapReducer from './tokenMap'\nimport verifiedPoolAddrsReducer from './verifiedPoolAddrs'\nimport verifiedPoolInfoReducer from './verifiedPoolInfo'\nimport ownerPoolAddrsReducer from './ownerPoolAddrs'\nimport ownerPoolInfoReducer from './ownerPoolInfo'\nimport userDepositPoolAddrsReducer from './userDepositPoolAddrs'\nimport userDepositPoolInfoReducer from './userDepositPoolInfo'\nimport poolTrackerAddressReducer from './poolTrackerAddress'\n\nconst rootReducer = (history) => combineReducers({\n\tisMobile: mobileReducer,\n\tdaiAddress: daiAddressReducer,\n\tactiveAccount: activeAccountReducer,\n\ttokenMap: tokenMapReducer,\n\tverifiedPoolAddrs: verifiedPoolAddrsReducer,\n\tverifiedPoolInfo: verifiedPoolInfoReducer,\n\townerPoolAddrs: ownerPoolAddrsReducer,\n\townerPoolInfo: ownerPoolInfoReducer,\n\tuserDepositPoolAddrs: userDepositPoolAddrsReducer,\n\tuserDepositPoolInfo: userDepositPoolInfoReducer,\n\tpoolTrackerAddress: poolTrackerAddressReducer,\n\trouter: connectRouter(history),\n})\n\nexport default rootReducer\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { createBrowserHistory } from 'history'\nimport { routerMiddleware } from 'connected-react-router'\nimport { Provider } from 'react-redux'\n\nimport './styles/styles.scss';\nimport App from './js/App';\nimport rootReducer from './js/reducers'\n\nimport * as serviceWorker from './serviceWorker';\n\nconst history = createBrowserHistory()\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n\trootReducer(history),\n\tcomposeEnhancer(\n\t\tapplyMiddleware(\n\t\t\trouterMiddleware(history),\n\t\t),\n \t),\n)\n\nconst render = () => {\n\tReactDOM.render(\n\t\t<Provider store={store}>\n\t\t\t\t<App history={history} />\n\t\t</Provider>,\n\t\tdocument.getElementById('root')\n\t)\n}\n\nrender()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n//reportWebVitals();\n\n"],"sourceRoot":""}